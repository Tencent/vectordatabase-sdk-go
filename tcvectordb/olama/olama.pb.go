// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.26.1
// source: olama.proto

package olama

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ShardDataState int32

const (
	ShardDataState_SHARD_INDEX_READY    ShardDataState = 0
	ShardDataState_SHARD_INDEX_TRAINING ShardDataState = 1
	ShardDataState_SHARD_INDEX_BUILDING ShardDataState = 2
	ShardDataState_SHARD_INDEX_FAILED   ShardDataState = 3
)

// Enum value maps for ShardDataState.
var (
	ShardDataState_name = map[int32]string{
		0: "SHARD_INDEX_READY",
		1: "SHARD_INDEX_TRAINING",
		2: "SHARD_INDEX_BUILDING",
		3: "SHARD_INDEX_FAILED",
	}
	ShardDataState_value = map[string]int32{
		"SHARD_INDEX_READY":    0,
		"SHARD_INDEX_TRAINING": 1,
		"SHARD_INDEX_BUILDING": 2,
		"SHARD_INDEX_FAILED":   3,
	}
)

func (x ShardDataState) Enum() *ShardDataState {
	p := new(ShardDataState)
	*p = x
	return p
}

func (x ShardDataState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ShardDataState) Descriptor() protoreflect.EnumDescriptor {
	return file_olama_proto_enumTypes[0].Descriptor()
}

func (ShardDataState) Type() protoreflect.EnumType {
	return &file_olama_proto_enumTypes[0]
}

func (x ShardDataState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ShardDataState.Descriptor instead.
func (ShardDataState) EnumDescriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{0}
}

type DataType int32

const (
	DataType_BASE   DataType = 0 // normal user
	DataType_AI_DOC DataType = 1 // ai user
)

// Enum value maps for DataType.
var (
	DataType_name = map[int32]string{
		0: "BASE",
		1: "AI_DOC",
	}
	DataType_value = map[string]int32{
		"BASE":   0,
		"AI_DOC": 1,
	}
)

func (x DataType) Enum() *DataType {
	p := new(DataType)
	*p = x
	return p
}

func (x DataType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataType) Descriptor() protoreflect.EnumDescriptor {
	return file_olama_proto_enumTypes[1].Descriptor()
}

func (DataType) Type() protoreflect.EnumType {
	return &file_olama_proto_enumTypes[1]
}

func (x DataType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataType.Descriptor instead.
func (DataType) EnumDescriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{1}
}

type IndexMetricType int32

const (
	IndexMetricType_INDEX_METRIC_INNER_PRODUCT IndexMetricType = 0 // inner product distance
	IndexMetricType_INDEX_METRIC_L2            IndexMetricType = 1 // european distance
	IndexMetricType_INDEX_METRIC_COSINE        IndexMetricType = 2 // cosine distance
	IndexMetricType_INDEX_METRIC_HAMMING       IndexMetricType = 3 // hamming distance
)

// Enum value maps for IndexMetricType.
var (
	IndexMetricType_name = map[int32]string{
		0: "INDEX_METRIC_INNER_PRODUCT",
		1: "INDEX_METRIC_L2",
		2: "INDEX_METRIC_COSINE",
		3: "INDEX_METRIC_HAMMING",
	}
	IndexMetricType_value = map[string]int32{
		"INDEX_METRIC_INNER_PRODUCT": 0,
		"INDEX_METRIC_L2":            1,
		"INDEX_METRIC_COSINE":        2,
		"INDEX_METRIC_HAMMING":       3,
	}
)

func (x IndexMetricType) Enum() *IndexMetricType {
	p := new(IndexMetricType)
	*p = x
	return p
}

func (x IndexMetricType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IndexMetricType) Descriptor() protoreflect.EnumDescriptor {
	return file_olama_proto_enumTypes[2].Descriptor()
}

func (IndexMetricType) Type() protoreflect.EnumType {
	return &file_olama_proto_enumTypes[2]
}

func (x IndexMetricType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IndexMetricType.Descriptor instead.
func (IndexMetricType) EnumDescriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{2}
}

type IndexEngineType int32

const (
	IndexEngineType_ENGINE_FAISS_VECTOR IndexEngineType = 0
	IndexEngineType_ENGINE_FAISS_BINARY IndexEngineType = 1
	// ENGINE_FAISS_VIRTUAL = 2; // discarded
	IndexEngineType_ENGINE_HNSWLIB IndexEngineType = 3
)

// Enum value maps for IndexEngineType.
var (
	IndexEngineType_name = map[int32]string{
		0: "ENGINE_FAISS_VECTOR",
		1: "ENGINE_FAISS_BINARY",
		3: "ENGINE_HNSWLIB",
	}
	IndexEngineType_value = map[string]int32{
		"ENGINE_FAISS_VECTOR": 0,
		"ENGINE_FAISS_BINARY": 1,
		"ENGINE_HNSWLIB":      3,
	}
)

func (x IndexEngineType) Enum() *IndexEngineType {
	p := new(IndexEngineType)
	*p = x
	return p
}

func (x IndexEngineType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IndexEngineType) Descriptor() protoreflect.EnumDescriptor {
	return file_olama_proto_enumTypes[3].Descriptor()
}

func (IndexEngineType) Type() protoreflect.EnumType {
	return &file_olama_proto_enumTypes[3]
}

func (x IndexEngineType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IndexEngineType.Descriptor instead.
func (IndexEngineType) EnumDescriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{3}
}

type FieldType int32

const (
	FieldType_TYPE_STRING FieldType = 0
	FieldType_TYPE_ARRAY  FieldType = 1
	FieldType_TYPE_UINT64 FieldType = 2
)

// Enum value maps for FieldType.
var (
	FieldType_name = map[int32]string{
		0: "TYPE_STRING",
		1: "TYPE_ARRAY",
		2: "TYPE_UINT64",
	}
	FieldType_value = map[string]int32{
		"TYPE_STRING": 0,
		"TYPE_ARRAY":  1,
		"TYPE_UINT64": 2,
	}
)

func (x FieldType) Enum() *FieldType {
	p := new(FieldType)
	*p = x
	return p
}

func (x FieldType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FieldType) Descriptor() protoreflect.EnumDescriptor {
	return file_olama_proto_enumTypes[4].Descriptor()
}

func (FieldType) Type() protoreflect.EnumType {
	return &file_olama_proto_enumTypes[4]
}

func (x FieldType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FieldType.Descriptor instead.
func (FieldType) EnumDescriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{4}
}

type FieldElementType int32

const (
	FieldElementType_ELEMENT_TYPE_STRING FieldElementType = 0
)

// Enum value maps for FieldElementType.
var (
	FieldElementType_name = map[int32]string{
		0: "ELEMENT_TYPE_STRING",
	}
	FieldElementType_value = map[string]int32{
		"ELEMENT_TYPE_STRING": 0,
	}
)

func (x FieldElementType) Enum() *FieldElementType {
	p := new(FieldElementType)
	*p = x
	return p
}

func (x FieldElementType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FieldElementType) Descriptor() protoreflect.EnumDescriptor {
	return file_olama_proto_enumTypes[5].Descriptor()
}

func (FieldElementType) Type() protoreflect.EnumType {
	return &file_olama_proto_enumTypes[5]
}

func (x FieldElementType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FieldElementType.Descriptor instead.
func (FieldElementType) EnumDescriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{5}
}

type Document struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Vector       []float32         `protobuf:"fixed32,2,rep,packed,name=vector,proto3" json:"vector,omitempty"`
	Score        float32           `protobuf:"fixed32,3,opt,name=score,proto3" json:"score,omitempty"`
	Fields       map[string]*Field `protobuf:"bytes,4,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	IndexId      uint64            `protobuf:"varint,5,opt,name=index_id,json=indexId,proto3" json:"index_id,omitempty"`
	FromPeer     string            `protobuf:"bytes,6,opt,name=from_peer,json=fromPeer,proto3" json:"from_peer,omitempty"`
	ShardIdx     int32             `protobuf:"varint,7,opt,name=shard_idx,json=shardIdx,proto3" json:"shard_idx,omitempty"`
	VectorOffset uint64            `protobuf:"varint,8,opt,name=vector_offset,json=vectorOffset,proto3" json:"vector_offset,omitempty"`
	DocInfo      []byte            `protobuf:"bytes,9,opt,name=doc_info,json=docInfo,proto3" json:"doc_info,omitempty"`
	SparseVector []*SparseVecItem  `protobuf:"bytes,10,rep,name=sparse_vector,json=sparseVector,proto3" json:"sparse_vector,omitempty"`
	DataExpr     string            `protobuf:"bytes,11,opt,name=data_expr,json=dataExpr,proto3" json:"data_expr,omitempty"` // AI套件占用字段，内核不关注
}

func (x *Document) Reset() {
	*x = Document{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Document) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Document) ProtoMessage() {}

func (x *Document) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Document.ProtoReflect.Descriptor instead.
func (*Document) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{0}
}

func (x *Document) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Document) GetVector() []float32 {
	if x != nil {
		return x.Vector
	}
	return nil
}

func (x *Document) GetScore() float32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *Document) GetFields() map[string]*Field {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *Document) GetIndexId() uint64 {
	if x != nil {
		return x.IndexId
	}
	return 0
}

func (x *Document) GetFromPeer() string {
	if x != nil {
		return x.FromPeer
	}
	return ""
}

func (x *Document) GetShardIdx() int32 {
	if x != nil {
		return x.ShardIdx
	}
	return 0
}

func (x *Document) GetVectorOffset() uint64 {
	if x != nil {
		return x.VectorOffset
	}
	return 0
}

func (x *Document) GetDocInfo() []byte {
	if x != nil {
		return x.DocInfo
	}
	return nil
}

func (x *Document) GetSparseVector() []*SparseVecItem {
	if x != nil {
		return x.SparseVector
	}
	return nil
}

func (x *Document) GetDataExpr() string {
	if x != nil {
		return x.DataExpr
	}
	return ""
}

type Field struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to OneofVal:
	//	*Field_ValStr
	//	*Field_ValU64
	//	*Field_ValDouble
	//	*Field_ValStrArr
	OneofVal isField_OneofVal `protobuf_oneof:"oneof_val"`
}

func (x *Field) Reset() {
	*x = Field{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Field) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Field) ProtoMessage() {}

func (x *Field) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Field.ProtoReflect.Descriptor instead.
func (*Field) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{1}
}

func (m *Field) GetOneofVal() isField_OneofVal {
	if m != nil {
		return m.OneofVal
	}
	return nil
}

func (x *Field) GetValStr() []byte {
	if x, ok := x.GetOneofVal().(*Field_ValStr); ok {
		return x.ValStr
	}
	return nil
}

func (x *Field) GetValU64() uint64 {
	if x, ok := x.GetOneofVal().(*Field_ValU64); ok {
		return x.ValU64
	}
	return 0
}

func (x *Field) GetValDouble() float64 {
	if x, ok := x.GetOneofVal().(*Field_ValDouble); ok {
		return x.ValDouble
	}
	return 0
}

func (x *Field) GetValStrArr() *Field_StringArray {
	if x, ok := x.GetOneofVal().(*Field_ValStrArr); ok {
		return x.ValStrArr
	}
	return nil
}

type isField_OneofVal interface {
	isField_OneofVal()
}

type Field_ValStr struct {
	ValStr []byte `protobuf:"bytes,1,opt,name=val_str,json=valStr,proto3,oneof"`
}

type Field_ValU64 struct {
	ValU64 uint64 `protobuf:"varint,2,opt,name=val_u64,json=valU64,proto3,oneof"`
}

type Field_ValDouble struct {
	ValDouble float64 `protobuf:"fixed64,3,opt,name=val_double,json=valDouble,proto3,oneof"`
}

type Field_ValStrArr struct {
	ValStrArr *Field_StringArray `protobuf:"bytes,4,opt,name=val_str_arr,json=valStrArr,proto3,oneof"`
}

func (*Field_ValStr) isField_OneofVal() {}

func (*Field_ValU64) isField_OneofVal() {}

func (*Field_ValDouble) isField_OneofVal() {}

func (*Field_ValStrArr) isField_OneofVal() {}

type SparseVecItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TermId int64   `protobuf:"varint,1,opt,name=term_id,json=termId,proto3" json:"term_id,omitempty"`
	Score  float32 `protobuf:"fixed32,2,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *SparseVecItem) Reset() {
	*x = SparseVecItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SparseVecItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SparseVecItem) ProtoMessage() {}

func (x *SparseVecItem) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SparseVecItem.ProtoReflect.Descriptor instead.
func (*SparseVecItem) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{2}
}

func (x *SparseVecItem) GetTermId() int64 {
	if x != nil {
		return x.TermId
	}
	return 0
}

func (x *SparseVecItem) GetScore() float32 {
	if x != nil {
		return x.Score
	}
	return 0
}

type ShardState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataState            ShardDataState `protobuf:"varint,1,opt,name=data_state,json=dataState,proto3,enum=olama.ShardDataState" json:"data_state,omitempty"`
	EstimateIndexMemSize uint64         `protobuf:"varint,2,opt,name=estimate_index_mem_size,json=estimateIndexMemSize,proto3" json:"estimate_index_mem_size,omitempty"`
	Snapshoting          bool           `protobuf:"varint,3,opt,name=snapshoting,proto3" json:"snapshoting,omitempty"`
	LastAppliedIndex     int64          `protobuf:"varint,4,opt,name=last_applied_index,json=lastAppliedIndex,proto3" json:"last_applied_index,omitempty"`
	LastAppliedTerm      int64          `protobuf:"varint,5,opt,name=last_applied_term,json=lastAppliedTerm,proto3" json:"last_applied_term,omitempty"`
	IdSeed               int64          `protobuf:"varint,6,opt,name=id_seed,json=idSeed,proto3" json:"id_seed,omitempty"`
	AddedItems           uint64         `protobuf:"varint,7,opt,name=added_items,json=addedItems,proto3" json:"added_items,omitempty"`
	DataStateChangeTime  int64          `protobuf:"varint,8,opt,name=data_state_change_time,json=dataStateChangeTime,proto3" json:"data_state_change_time,omitempty"`
	LastSnapshotTime     int64          `protobuf:"varint,9,opt,name=last_snapshot_time,json=lastSnapshotTime,proto3" json:"last_snapshot_time,omitempty"`
	LastHnswResizeTime   int64          `protobuf:"varint,10,opt,name=last_hnsw_resize_time,json=lastHnswResizeTime,proto3" json:"last_hnsw_resize_time,omitempty"`
	LastIndexRebuildTime int64          `protobuf:"varint,11,opt,name=last_index_rebuild_time,json=lastIndexRebuildTime,proto3" json:"last_index_rebuild_time,omitempty"`
}

func (x *ShardState) Reset() {
	*x = ShardState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShardState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardState) ProtoMessage() {}

func (x *ShardState) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardState.ProtoReflect.Descriptor instead.
func (*ShardState) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{3}
}

func (x *ShardState) GetDataState() ShardDataState {
	if x != nil {
		return x.DataState
	}
	return ShardDataState_SHARD_INDEX_READY
}

func (x *ShardState) GetEstimateIndexMemSize() uint64 {
	if x != nil {
		return x.EstimateIndexMemSize
	}
	return 0
}

func (x *ShardState) GetSnapshoting() bool {
	if x != nil {
		return x.Snapshoting
	}
	return false
}

func (x *ShardState) GetLastAppliedIndex() int64 {
	if x != nil {
		return x.LastAppliedIndex
	}
	return 0
}

func (x *ShardState) GetLastAppliedTerm() int64 {
	if x != nil {
		return x.LastAppliedTerm
	}
	return 0
}

func (x *ShardState) GetIdSeed() int64 {
	if x != nil {
		return x.IdSeed
	}
	return 0
}

func (x *ShardState) GetAddedItems() uint64 {
	if x != nil {
		return x.AddedItems
	}
	return 0
}

func (x *ShardState) GetDataStateChangeTime() int64 {
	if x != nil {
		return x.DataStateChangeTime
	}
	return 0
}

func (x *ShardState) GetLastSnapshotTime() int64 {
	if x != nil {
		return x.LastSnapshotTime
	}
	return 0
}

func (x *ShardState) GetLastHnswResizeTime() int64 {
	if x != nil {
		return x.LastHnswResizeTime
	}
	return 0
}

func (x *ShardState) GetLastIndexRebuildTime() int64 {
	if x != nil {
		return x.LastIndexRebuildTime
	}
	return 0
}

type Shard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Collection string      `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	ShardIdx   int32       `protobuf:"varint,2,opt,name=shard_idx,json=shardIdx,proto3" json:"shard_idx,omitempty"`
	IsLeader   bool        `protobuf:"varint,3,opt,name=is_leader,json=isLeader,proto3" json:"is_leader,omitempty"`
	Following  bool        `protobuf:"varint,4,opt,name=following,proto3" json:"following,omitempty"`
	State      *ShardState `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`
	Nodes      []string    `protobuf:"bytes,6,rep,name=nodes,proto3" json:"nodes,omitempty"` // only leader shard contains all nodes id
	FromNode   string      `protobuf:"bytes,7,opt,name=from_node,json=fromNode,proto3" json:"from_node,omitempty"`
	Version    int64       `protobuf:"varint,8,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *Shard) Reset() {
	*x = Shard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Shard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Shard) ProtoMessage() {}

func (x *Shard) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Shard.ProtoReflect.Descriptor instead.
func (*Shard) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{4}
}

func (x *Shard) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *Shard) GetShardIdx() int32 {
	if x != nil {
		return x.ShardIdx
	}
	return 0
}

func (x *Shard) GetIsLeader() bool {
	if x != nil {
		return x.IsLeader
	}
	return false
}

func (x *Shard) GetFollowing() bool {
	if x != nil {
		return x.Following
	}
	return false
}

func (x *Shard) GetState() *ShardState {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *Shard) GetNodes() []string {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *Shard) GetFromNode() string {
	if x != nil {
		return x.FromNode
	}
	return ""
}

func (x *Shard) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

type AliasItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alias      string `protobuf:"bytes,1,opt,name=alias,proto3" json:"alias,omitempty"`
	Collection string `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`
}

func (x *AliasItem) Reset() {
	*x = AliasItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AliasItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AliasItem) ProtoMessage() {}

func (x *AliasItem) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AliasItem.ProtoReflect.Descriptor instead.
func (*AliasItem) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{5}
}

func (x *AliasItem) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *AliasItem) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

type DatabaseItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateTime int64    `protobuf:"varint,1,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	DbType     DataType `protobuf:"varint,2,opt,name=db_type,json=dbType,proto3,enum=olama.DataType" json:"db_type,omitempty"`
}

func (x *DatabaseItem) Reset() {
	*x = DatabaseItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatabaseItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseItem) ProtoMessage() {}

func (x *DatabaseItem) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseItem.ProtoReflect.Descriptor instead.
func (*DatabaseItem) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{6}
}

func (x *DatabaseItem) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *DatabaseItem) GetDbType() DataType {
	if x != nil {
		return x.DbType
	}
	return DataType_BASE
}

type EmbeddingParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field       string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	VectorField string `protobuf:"bytes,2,opt,name=vector_field,json=vectorField,proto3" json:"vector_field,omitempty"`
	ModelName   string `protobuf:"bytes,3,opt,name=model_name,json=modelName,proto3" json:"model_name,omitempty"`
}

func (x *EmbeddingParams) Reset() {
	*x = EmbeddingParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmbeddingParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmbeddingParams) ProtoMessage() {}

func (x *EmbeddingParams) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmbeddingParams.ProtoReflect.Descriptor instead.
func (*EmbeddingParams) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{7}
}

func (x *EmbeddingParams) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *EmbeddingParams) GetVectorField() string {
	if x != nil {
		return x.VectorField
	}
	return ""
}

func (x *EmbeddingParams) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

type CollectionConf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database         string          `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Collection       string          `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`
	Description      string          `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	NumberOfShards   uint32          `protobuf:"varint,4,opt,name=number_of_shards,json=numberOfShards,proto3" json:"number_of_shards,omitempty"`
	NumberOfReplicas uint32          `protobuf:"varint,5,opt,name=number_of_replicas,json=numberOfReplicas,proto3" json:"number_of_replicas,omitempty"`
	Dimension        uint32          `protobuf:"varint,6,opt,name=dimension,proto3" json:"dimension,omitempty"`
	Metric           IndexMetricType `protobuf:"varint,7,opt,name=metric,proto3,enum=olama.IndexMetricType" json:"metric,omitempty"`
	Nprobe           uint32          `protobuf:"varint,8,opt,name=nprobe,proto3" json:"nprobe,omitempty"`
	// repeated SnapshotRule snapshot_rules = 9;
	Engine          IndexEngineType       `protobuf:"varint,11,opt,name=engine,proto3,enum=olama.IndexEngineType" json:"engine,omitempty"`
	ModelDesc       string                `protobuf:"bytes,12,opt,name=model_desc,json=modelDesc,proto3" json:"model_desc,omitempty"`
	FieldMetas      map[string]*FieldMeta `protobuf:"bytes,15,rep,name=field_metas,json=fieldMetas,proto3" json:"field_metas,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // 存储Document中fields标签字段的元信息
	Options         map[string]string     `protobuf:"bytes,16,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`                         // 存储collection拓展选项
	Nlist           uint32                `protobuf:"varint,17,opt,name=nlist,proto3" json:"nlist,omitempty"`
	EmbeddingParams *EmbeddingParams      `protobuf:"bytes,18,opt,name=embedding_params,json=embeddingParams,proto3" json:"embedding_params,omitempty"`
	DataType        DataType              `protobuf:"varint,19,opt,name=data_type,json=dataType,proto3,enum=olama.DataType" json:"data_type,omitempty"`
	Version         int64                 `protobuf:"varint,20,opt,name=version,proto3" json:"version,omitempty"`
	TtlConfig       *TTLConfig            `protobuf:"bytes,21,opt,name=ttlConfig,proto3" json:"ttlConfig,omitempty"`
}

func (x *CollectionConf) Reset() {
	*x = CollectionConf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectionConf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionConf) ProtoMessage() {}

func (x *CollectionConf) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionConf.ProtoReflect.Descriptor instead.
func (*CollectionConf) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{8}
}

func (x *CollectionConf) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *CollectionConf) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *CollectionConf) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CollectionConf) GetNumberOfShards() uint32 {
	if x != nil {
		return x.NumberOfShards
	}
	return 0
}

func (x *CollectionConf) GetNumberOfReplicas() uint32 {
	if x != nil {
		return x.NumberOfReplicas
	}
	return 0
}

func (x *CollectionConf) GetDimension() uint32 {
	if x != nil {
		return x.Dimension
	}
	return 0
}

func (x *CollectionConf) GetMetric() IndexMetricType {
	if x != nil {
		return x.Metric
	}
	return IndexMetricType_INDEX_METRIC_INNER_PRODUCT
}

func (x *CollectionConf) GetNprobe() uint32 {
	if x != nil {
		return x.Nprobe
	}
	return 0
}

func (x *CollectionConf) GetEngine() IndexEngineType {
	if x != nil {
		return x.Engine
	}
	return IndexEngineType_ENGINE_FAISS_VECTOR
}

func (x *CollectionConf) GetModelDesc() string {
	if x != nil {
		return x.ModelDesc
	}
	return ""
}

func (x *CollectionConf) GetFieldMetas() map[string]*FieldMeta {
	if x != nil {
		return x.FieldMetas
	}
	return nil
}

func (x *CollectionConf) GetOptions() map[string]string {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *CollectionConf) GetNlist() uint32 {
	if x != nil {
		return x.Nlist
	}
	return 0
}

func (x *CollectionConf) GetEmbeddingParams() *EmbeddingParams {
	if x != nil {
		return x.EmbeddingParams
	}
	return nil
}

func (x *CollectionConf) GetDataType() DataType {
	if x != nil {
		return x.DataType
	}
	return DataType_BASE
}

func (x *CollectionConf) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *CollectionConf) GetTtlConfig() *TTLConfig {
	if x != nil {
		return x.TtlConfig
	}
	return nil
}

type FieldMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldType        FieldType        `protobuf:"varint,1,opt,name=field_type,json=fieldType,proto3,enum=olama.FieldType" json:"field_type,omitempty"`
	FieldElementType FieldElementType `protobuf:"varint,2,opt,name=field_element_type,json=fieldElementType,proto3,enum=olama.FieldElementType" json:"field_element_type,omitempty"` // 当field_type为TYPE_ARRAY时, 数组元素类型
}

func (x *FieldMeta) Reset() {
	*x = FieldMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldMeta) ProtoMessage() {}

func (x *FieldMeta) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldMeta.ProtoReflect.Descriptor instead.
func (*FieldMeta) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{9}
}

func (x *FieldMeta) GetFieldType() FieldType {
	if x != nil {
		return x.FieldType
	}
	return FieldType_TYPE_STRING
}

func (x *FieldMeta) GetFieldElementType() FieldElementType {
	if x != nil {
		return x.FieldElementType
	}
	return FieldElementType_ELEMENT_TYPE_STRING
}

type ShardConf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Collection string          `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	ShardIdx   int32           `protobuf:"varint,2,opt,name=shard_idx,json=shardIdx,proto3" json:"shard_idx,omitempty"`
	Conf       *CollectionConf `protobuf:"bytes,3,opt,name=conf,proto3" json:"conf,omitempty"`
	Nodes      []string        `protobuf:"bytes,4,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *ShardConf) Reset() {
	*x = ShardConf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShardConf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardConf) ProtoMessage() {}

func (x *ShardConf) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardConf.ProtoReflect.Descriptor instead.
func (*ShardConf) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{10}
}

func (x *ShardConf) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *ShardConf) GetShardIdx() int32 {
	if x != nil {
		return x.ShardIdx
	}
	return 0
}

func (x *ShardConf) GetConf() *CollectionConf {
	if x != nil {
		return x.Conf
	}
	return nil
}

func (x *ShardConf) GetNodes() []string {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type TTLConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enable    bool   `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
	TimeField string `protobuf:"bytes,2,opt,name=timeField,proto3" json:"timeField,omitempty"`
}

func (x *TTLConfig) Reset() {
	*x = TTLConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TTLConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TTLConfig) ProtoMessage() {}

func (x *TTLConfig) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TTLConfig.ProtoReflect.Descriptor instead.
func (*TTLConfig) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{11}
}

func (x *TTLConfig) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *TTLConfig) GetTimeField() string {
	if x != nil {
		return x.TimeField
	}
	return ""
}

type ShardCollectionState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShardIdx        int32    `protobuf:"varint,1,opt,name=shard_idx,json=shardIdx,proto3" json:"shard_idx,omitempty"`
	Leader          string   `protobuf:"bytes,2,opt,name=leader,proto3" json:"leader,omitempty"`
	NodePeers       []string `protobuf:"bytes,3,rep,name=node_peers,json=nodePeers,proto3" json:"node_peers,omitempty"`
	AllocateStartMs int64    `protobuf:"varint,4,opt,name=allocate_start_ms,json=allocateStartMs,proto3" json:"allocate_start_ms,omitempty"`
	AllocateStopMs  int64    `protobuf:"varint,5,opt,name=allocate_stop_ms,json=allocateStopMs,proto3" json:"allocate_stop_ms,omitempty"`
	LeaderMs        int64    `protobuf:"varint,6,opt,name=leader_ms,json=leaderMs,proto3" json:"leader_ms,omitempty"`
	Allocating      bool     `protobuf:"varint,7,opt,name=allocating,proto3" json:"allocating,omitempty"`
	Shards          []*Shard `protobuf:"bytes,8,rep,name=shards,proto3" json:"shards,omitempty"` // only used for stat
	Creating        bool     `protobuf:"varint,9,opt,name=creating,proto3" json:"creating,omitempty"`
	Removing        bool     `protobuf:"varint,10,opt,name=removing,proto3" json:"removing,omitempty"`
}

func (x *ShardCollectionState) Reset() {
	*x = ShardCollectionState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShardCollectionState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardCollectionState) ProtoMessage() {}

func (x *ShardCollectionState) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardCollectionState.ProtoReflect.Descriptor instead.
func (*ShardCollectionState) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{12}
}

func (x *ShardCollectionState) GetShardIdx() int32 {
	if x != nil {
		return x.ShardIdx
	}
	return 0
}

func (x *ShardCollectionState) GetLeader() string {
	if x != nil {
		return x.Leader
	}
	return ""
}

func (x *ShardCollectionState) GetNodePeers() []string {
	if x != nil {
		return x.NodePeers
	}
	return nil
}

func (x *ShardCollectionState) GetAllocateStartMs() int64 {
	if x != nil {
		return x.AllocateStartMs
	}
	return 0
}

func (x *ShardCollectionState) GetAllocateStopMs() int64 {
	if x != nil {
		return x.AllocateStopMs
	}
	return 0
}

func (x *ShardCollectionState) GetLeaderMs() int64 {
	if x != nil {
		return x.LeaderMs
	}
	return 0
}

func (x *ShardCollectionState) GetAllocating() bool {
	if x != nil {
		return x.Allocating
	}
	return false
}

func (x *ShardCollectionState) GetShards() []*Shard {
	if x != nil {
		return x.Shards
	}
	return nil
}

func (x *ShardCollectionState) GetCreating() bool {
	if x != nil {
		return x.Creating
	}
	return false
}

func (x *ShardCollectionState) GetRemoving() bool {
	if x != nil {
		return x.Removing
	}
	return false
}

type CollectionState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Collection string                   `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	Conf       *CollectionConf          `protobuf:"bytes,2,opt,name=conf,proto3" json:"conf,omitempty"`
	Shards     []*ShardCollectionState  `protobuf:"bytes,3,rep,name=shards,proto3" json:"shards,omitempty"`
	Size       uint64                   `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	CreateTime int64                    `protobuf:"varint,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	Req        *CreateCollectionRequest `protobuf:"bytes,6,opt,name=req,proto3" json:"req,omitempty"`
	//HealthState status                   = 7;
	IndexState ShardDataState `protobuf:"varint,8,opt,name=index_state,json=indexState,proto3,enum=olama.ShardDataState" json:"index_state,omitempty"`
}

func (x *CollectionState) Reset() {
	*x = CollectionState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectionState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionState) ProtoMessage() {}

func (x *CollectionState) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionState.ProtoReflect.Descriptor instead.
func (*CollectionState) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{13}
}

func (x *CollectionState) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *CollectionState) GetConf() *CollectionConf {
	if x != nil {
		return x.Conf
	}
	return nil
}

func (x *CollectionState) GetShards() []*ShardCollectionState {
	if x != nil {
		return x.Shards
	}
	return nil
}

func (x *CollectionState) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *CollectionState) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *CollectionState) GetReq() *CreateCollectionRequest {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *CollectionState) GetIndexState() ShardDataState {
	if x != nil {
		return x.IndexState
	}
	return ShardDataState_SHARD_INDEX_READY
}

type AddAliasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database   string `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Collection string `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`
	Alias      string `protobuf:"bytes,3,opt,name=alias,proto3" json:"alias,omitempty"`
}

func (x *AddAliasRequest) Reset() {
	*x = AddAliasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAliasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAliasRequest) ProtoMessage() {}

func (x *AddAliasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAliasRequest.ProtoReflect.Descriptor instead.
func (*AddAliasRequest) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{14}
}

func (x *AddAliasRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *AddAliasRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *AddAliasRequest) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

type RemoveAliasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database string `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Alias    string `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`
}

func (x *RemoveAliasRequest) Reset() {
	*x = RemoveAliasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveAliasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveAliasRequest) ProtoMessage() {}

func (x *RemoveAliasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveAliasRequest.ProtoReflect.Descriptor instead.
func (*RemoveAliasRequest) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{15}
}

func (x *RemoveAliasRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *RemoveAliasRequest) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

type UpdateAliasResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code          int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg           string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Redirect      string `protobuf:"bytes,3,opt,name=redirect,proto3" json:"redirect,omitempty"`
	AffectedCount uint64 `protobuf:"varint,4,opt,name=affectedCount,proto3" json:"affectedCount,omitempty"`
}

func (x *UpdateAliasResponse) Reset() {
	*x = UpdateAliasResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAliasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAliasResponse) ProtoMessage() {}

func (x *UpdateAliasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAliasResponse.ProtoReflect.Descriptor instead.
func (*UpdateAliasResponse) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateAliasResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateAliasResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UpdateAliasResponse) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *UpdateAliasResponse) GetAffectedCount() uint64 {
	if x != nil {
		return x.AffectedCount
	}
	return 0
}

type GetAliasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database string `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Alias    string `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`
}

func (x *GetAliasRequest) Reset() {
	*x = GetAliasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAliasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAliasRequest) ProtoMessage() {}

func (x *GetAliasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAliasRequest.ProtoReflect.Descriptor instead.
func (*GetAliasRequest) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{17}
}

func (x *GetAliasRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *GetAliasRequest) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

type GetAliasResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32        `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg      string       `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Redirect string       `protobuf:"bytes,3,opt,name=redirect,proto3" json:"redirect,omitempty"`
	Aliases  []*AliasItem `protobuf:"bytes,4,rep,name=aliases,proto3" json:"aliases,omitempty"`
}

func (x *GetAliasResponse) Reset() {
	*x = GetAliasResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAliasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAliasResponse) ProtoMessage() {}

func (x *GetAliasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAliasResponse.ProtoReflect.Descriptor instead.
func (*GetAliasResponse) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{18}
}

func (x *GetAliasResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetAliasResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetAliasResponse) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *GetAliasResponse) GetAliases() []*AliasItem {
	if x != nil {
		return x.Aliases
	}
	return nil
}

type DescribeCollectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database   string `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Collection string `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`
	Transfer   bool   `protobuf:"varint,3,opt,name=transfer,proto3" json:"transfer,omitempty"`
}

func (x *DescribeCollectionRequest) Reset() {
	*x = DescribeCollectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeCollectionRequest) ProtoMessage() {}

func (x *DescribeCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeCollectionRequest.ProtoReflect.Descriptor instead.
func (*DescribeCollectionRequest) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{19}
}

func (x *DescribeCollectionRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *DescribeCollectionRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *DescribeCollectionRequest) GetTransfer() bool {
	if x != nil {
		return x.Transfer
	}
	return false
}

type DescribeCollectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code       int32                    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg        string                   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Redirect   string                   `protobuf:"bytes,3,opt,name=redirect,proto3" json:"redirect,omitempty"`
	Collection *CreateCollectionRequest `protobuf:"bytes,4,opt,name=collection,proto3" json:"collection,omitempty"`
	State      *CollectionState         `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *DescribeCollectionResponse) Reset() {
	*x = DescribeCollectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeCollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeCollectionResponse) ProtoMessage() {}

func (x *DescribeCollectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeCollectionResponse.ProtoReflect.Descriptor instead.
func (*DescribeCollectionResponse) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{20}
}

func (x *DescribeCollectionResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DescribeCollectionResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *DescribeCollectionResponse) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *DescribeCollectionResponse) GetCollection() *CreateCollectionRequest {
	if x != nil {
		return x.Collection
	}
	return nil
}

func (x *DescribeCollectionResponse) GetState() *CollectionState {
	if x != nil {
		return x.State
	}
	return nil
}

type ListCollectionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database string `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Transfer bool   `protobuf:"varint,2,opt,name=transfer,proto3" json:"transfer,omitempty"`
}

func (x *ListCollectionsRequest) Reset() {
	*x = ListCollectionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCollectionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCollectionsRequest) ProtoMessage() {}

func (x *ListCollectionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCollectionsRequest.ProtoReflect.Descriptor instead.
func (*ListCollectionsRequest) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{21}
}

func (x *ListCollectionsRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *ListCollectionsRequest) GetTransfer() bool {
	if x != nil {
		return x.Transfer
	}
	return false
}

type ListCollectionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code        int32                      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg         string                     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Redirect    string                     `protobuf:"bytes,3,opt,name=redirect,proto3" json:"redirect,omitempty"`
	Collections []*CreateCollectionRequest `protobuf:"bytes,4,rep,name=collections,proto3" json:"collections,omitempty"`
	States      []*CollectionState         `protobuf:"bytes,5,rep,name=states,proto3" json:"states,omitempty"` //ClusterState cluster                         = 6;
}

func (x *ListCollectionsResponse) Reset() {
	*x = ListCollectionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCollectionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCollectionsResponse) ProtoMessage() {}

func (x *ListCollectionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCollectionsResponse.ProtoReflect.Descriptor instead.
func (*ListCollectionsResponse) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{22}
}

func (x *ListCollectionsResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListCollectionsResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ListCollectionsResponse) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *ListCollectionsResponse) GetCollections() []*CreateCollectionRequest {
	if x != nil {
		return x.Collections
	}
	return nil
}

func (x *ListCollectionsResponse) GetStates() []*CollectionState {
	if x != nil {
		return x.States
	}
	return nil
}

type IndexParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	M              uint32 `protobuf:"varint,1,opt,name=M,proto3" json:"M,omitempty"`
	EfConstruction uint32 `protobuf:"varint,2,opt,name=efConstruction,proto3" json:"efConstruction,omitempty"`
	Nprobe         uint32 `protobuf:"varint,3,opt,name=nprobe,proto3" json:"nprobe,omitempty"`
	Nlist          uint32 `protobuf:"varint,4,opt,name=nlist,proto3" json:"nlist,omitempty"`
}

func (x *IndexParams) Reset() {
	*x = IndexParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexParams) ProtoMessage() {}

func (x *IndexParams) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexParams.ProtoReflect.Descriptor instead.
func (*IndexParams) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{23}
}

func (x *IndexParams) GetM() uint32 {
	if x != nil {
		return x.M
	}
	return 0
}

func (x *IndexParams) GetEfConstruction() uint32 {
	if x != nil {
		return x.EfConstruction
	}
	return 0
}

func (x *IndexParams) GetNprobe() uint32 {
	if x != nil {
		return x.Nprobe
	}
	return 0
}

func (x *IndexParams) GetNlist() uint32 {
	if x != nil {
		return x.Nlist
	}
	return 0
}

type IndexColumn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldName        string       `protobuf:"bytes,1,opt,name=fieldName,proto3" json:"fieldName,omitempty"`
	FieldType        string       `protobuf:"bytes,2,opt,name=fieldType,proto3" json:"fieldType,omitempty"`
	IndexType        string       `protobuf:"bytes,3,opt,name=indexType,proto3" json:"indexType,omitempty"`
	Dimension        uint32       `protobuf:"varint,4,opt,name=dimension,proto3" json:"dimension,omitempty"`
	MetricType       string       `protobuf:"bytes,5,opt,name=metricType,proto3" json:"metricType,omitempty"`
	Params           *IndexParams `protobuf:"bytes,8,opt,name=params,proto3" json:"params,omitempty"`
	FieldElementType string       `protobuf:"bytes,9,opt,name=fieldElementType,proto3" json:"fieldElementType,omitempty"` // 当fieldType为array时, 数组元素类型
}

func (x *IndexColumn) Reset() {
	*x = IndexColumn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexColumn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexColumn) ProtoMessage() {}

func (x *IndexColumn) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexColumn.ProtoReflect.Descriptor instead.
func (*IndexColumn) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{24}
}

func (x *IndexColumn) GetFieldName() string {
	if x != nil {
		return x.FieldName
	}
	return ""
}

func (x *IndexColumn) GetFieldType() string {
	if x != nil {
		return x.FieldType
	}
	return ""
}

func (x *IndexColumn) GetIndexType() string {
	if x != nil {
		return x.IndexType
	}
	return ""
}

func (x *IndexColumn) GetDimension() uint32 {
	if x != nil {
		return x.Dimension
	}
	return 0
}

func (x *IndexColumn) GetMetricType() string {
	if x != nil {
		return x.MetricType
	}
	return ""
}

func (x *IndexColumn) GetParams() *IndexParams {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *IndexColumn) GetFieldElementType() string {
	if x != nil {
		return x.FieldElementType
	}
	return ""
}

type IndexStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status    string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Progress  string `protobuf:"bytes,2,opt,name=progress,proto3" json:"progress,omitempty"`
	StartTime string `protobuf:"bytes,3,opt,name=startTime,proto3" json:"startTime,omitempty"`
}

func (x *IndexStatus) Reset() {
	*x = IndexStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexStatus) ProtoMessage() {}

func (x *IndexStatus) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexStatus.ProtoReflect.Descriptor instead.
func (*IndexStatus) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{25}
}

func (x *IndexStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *IndexStatus) GetProgress() string {
	if x != nil {
		return x.Progress
	}
	return ""
}

func (x *IndexStatus) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

type FilterIndexConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilterAll          bool     `protobuf:"varint,1,opt,name=filterAll,proto3" json:"filterAll,omitempty"`
	FieldsWithoutIndex []string `protobuf:"bytes,2,rep,name=fieldsWithoutIndex,proto3" json:"fieldsWithoutIndex,omitempty"`
	MaxStrLen          uint32   `protobuf:"varint,3,opt,name=maxStrLen,proto3" json:"maxStrLen,omitempty"`
}

func (x *FilterIndexConfig) Reset() {
	*x = FilterIndexConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterIndexConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterIndexConfig) ProtoMessage() {}

func (x *FilterIndexConfig) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterIndexConfig.ProtoReflect.Descriptor instead.
func (*FilterIndexConfig) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{26}
}

func (x *FilterIndexConfig) GetFilterAll() bool {
	if x != nil {
		return x.FilterAll
	}
	return false
}

func (x *FilterIndexConfig) GetFieldsWithoutIndex() []string {
	if x != nil {
		return x.FieldsWithoutIndex
	}
	return nil
}

func (x *FilterIndexConfig) GetMaxStrLen() uint32 {
	if x != nil {
		return x.MaxStrLen
	}
	return 0
}

type CreateCollectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database          string                  `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Collection        string                  `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`
	ReplicaNum        uint32                  `protobuf:"varint,3,opt,name=replicaNum,proto3" json:"replicaNum,omitempty"`
	ShardNum          uint32                  `protobuf:"varint,4,opt,name=shardNum,proto3" json:"shardNum,omitempty"`
	Size              uint64                  `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
	CreateTime        string                  `protobuf:"bytes,6,opt,name=createTime,proto3" json:"createTime,omitempty"`
	Description       string                  `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	Indexes           map[string]*IndexColumn `protobuf:"bytes,8,rep,name=indexes,proto3" json:"indexes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	IndexStatus       *IndexStatus            `protobuf:"bytes,9,opt,name=indexStatus,proto3" json:"indexStatus,omitempty"`
	AliasList         []string                `protobuf:"bytes,10,rep,name=alias_list,json=aliasList,proto3" json:"alias_list,omitempty"`
	EmbeddingParams   *EmbeddingParams        `protobuf:"bytes,11,opt,name=embeddingParams,proto3" json:"embeddingParams,omitempty"`
	Version           int64                   `protobuf:"varint,12,opt,name=version,proto3" json:"version,omitempty"`
	TtlConfig         *TTLConfig              `protobuf:"bytes,13,opt,name=ttlConfig,proto3" json:"ttlConfig,omitempty"`
	FilterIndexConfig *FilterIndexConfig      `protobuf:"bytes,14,opt,name=filterIndexConfig,proto3" json:"filterIndexConfig,omitempty"`
	DocumentCount     uint64                  `protobuf:"varint,15,opt,name=document_count,json=documentCount,proto3" json:"document_count,omitempty"`
}

func (x *CreateCollectionRequest) Reset() {
	*x = CreateCollectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCollectionRequest) ProtoMessage() {}

func (x *CreateCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCollectionRequest.ProtoReflect.Descriptor instead.
func (*CreateCollectionRequest) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{27}
}

func (x *CreateCollectionRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *CreateCollectionRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *CreateCollectionRequest) GetReplicaNum() uint32 {
	if x != nil {
		return x.ReplicaNum
	}
	return 0
}

func (x *CreateCollectionRequest) GetShardNum() uint32 {
	if x != nil {
		return x.ShardNum
	}
	return 0
}

func (x *CreateCollectionRequest) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *CreateCollectionRequest) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *CreateCollectionRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateCollectionRequest) GetIndexes() map[string]*IndexColumn {
	if x != nil {
		return x.Indexes
	}
	return nil
}

func (x *CreateCollectionRequest) GetIndexStatus() *IndexStatus {
	if x != nil {
		return x.IndexStatus
	}
	return nil
}

func (x *CreateCollectionRequest) GetAliasList() []string {
	if x != nil {
		return x.AliasList
	}
	return nil
}

func (x *CreateCollectionRequest) GetEmbeddingParams() *EmbeddingParams {
	if x != nil {
		return x.EmbeddingParams
	}
	return nil
}

func (x *CreateCollectionRequest) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *CreateCollectionRequest) GetTtlConfig() *TTLConfig {
	if x != nil {
		return x.TtlConfig
	}
	return nil
}

func (x *CreateCollectionRequest) GetFilterIndexConfig() *FilterIndexConfig {
	if x != nil {
		return x.FilterIndexConfig
	}
	return nil
}

func (x *CreateCollectionRequest) GetDocumentCount() uint64 {
	if x != nil {
		return x.DocumentCount
	}
	return 0
}

type CreateCollectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code          int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg           string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Redirect      string `protobuf:"bytes,3,opt,name=redirect,proto3" json:"redirect,omitempty"`
	AffectedCount uint64 `protobuf:"varint,4,opt,name=affectedCount,proto3" json:"affectedCount,omitempty"`
}

func (x *CreateCollectionResponse) Reset() {
	*x = CreateCollectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCollectionResponse) ProtoMessage() {}

func (x *CreateCollectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCollectionResponse.ProtoReflect.Descriptor instead.
func (*CreateCollectionResponse) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{28}
}

func (x *CreateCollectionResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateCollectionResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CreateCollectionResponse) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *CreateCollectionResponse) GetAffectedCount() uint64 {
	if x != nil {
		return x.AffectedCount
	}
	return 0
}

type DropCollectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database     string `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Collection   string `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`
	Force        bool   `protobuf:"varint,3,opt,name=force,proto3" json:"force,omitempty"`
	WithoutAlias bool   `protobuf:"varint,4,opt,name=without_alias,json=withoutAlias,proto3" json:"without_alias,omitempty"`
}

func (x *DropCollectionRequest) Reset() {
	*x = DropCollectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropCollectionRequest) ProtoMessage() {}

func (x *DropCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropCollectionRequest.ProtoReflect.Descriptor instead.
func (*DropCollectionRequest) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{29}
}

func (x *DropCollectionRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *DropCollectionRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *DropCollectionRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

func (x *DropCollectionRequest) GetWithoutAlias() bool {
	if x != nil {
		return x.WithoutAlias
	}
	return false
}

type DropCollectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code          int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg           string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Redirect      string `protobuf:"bytes,3,opt,name=redirect,proto3" json:"redirect,omitempty"`
	AffectedCount uint64 `protobuf:"varint,4,opt,name=affectedCount,proto3" json:"affectedCount,omitempty"`
}

func (x *DropCollectionResponse) Reset() {
	*x = DropCollectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropCollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropCollectionResponse) ProtoMessage() {}

func (x *DropCollectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropCollectionResponse.ProtoReflect.Descriptor instead.
func (*DropCollectionResponse) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{30}
}

func (x *DropCollectionResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DropCollectionResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *DropCollectionResponse) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *DropCollectionResponse) GetAffectedCount() uint64 {
	if x != nil {
		return x.AffectedCount
	}
	return 0
}

type TruncateCollectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database             string `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Collection           string `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`
	OnlyTruncateAnnIndex bool   `protobuf:"varint,3,opt,name=only_truncate_ann_index,json=onlyTruncateAnnIndex,proto3" json:"only_truncate_ann_index,omitempty"`
}

func (x *TruncateCollectionRequest) Reset() {
	*x = TruncateCollectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TruncateCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TruncateCollectionRequest) ProtoMessage() {}

func (x *TruncateCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TruncateCollectionRequest.ProtoReflect.Descriptor instead.
func (*TruncateCollectionRequest) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{31}
}

func (x *TruncateCollectionRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *TruncateCollectionRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *TruncateCollectionRequest) GetOnlyTruncateAnnIndex() bool {
	if x != nil {
		return x.OnlyTruncateAnnIndex
	}
	return false
}

type TruncateCollectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code          int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg           string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Redirect      string `protobuf:"bytes,3,opt,name=redirect,proto3" json:"redirect,omitempty"`
	AffectedCount uint64 `protobuf:"varint,4,opt,name=affectedCount,proto3" json:"affectedCount,omitempty"`
}

func (x *TruncateCollectionResponse) Reset() {
	*x = TruncateCollectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TruncateCollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TruncateCollectionResponse) ProtoMessage() {}

func (x *TruncateCollectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TruncateCollectionResponse.ProtoReflect.Descriptor instead.
func (*TruncateCollectionResponse) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{32}
}

func (x *TruncateCollectionResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *TruncateCollectionResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *TruncateCollectionResponse) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *TruncateCollectionResponse) GetAffectedCount() uint64 {
	if x != nil {
		return x.AffectedCount
	}
	return 0
}

type RebuildIndexRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database          string `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Collection        string `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`
	DropBeforeRebuild bool   `protobuf:"varint,3,opt,name=dropBeforeRebuild,proto3" json:"dropBeforeRebuild,omitempty"`
	Throttle          int32  `protobuf:"varint,4,opt,name=throttle,proto3" json:"throttle,omitempty"`
	DisableTrain      bool   `protobuf:"varint,5,opt,name=disable_train,json=disableTrain,proto3" json:"disable_train,omitempty"`
	ForceRebuild      bool   `protobuf:"varint,6,opt,name=force_rebuild,json=forceRebuild,proto3" json:"force_rebuild,omitempty"`
}

func (x *RebuildIndexRequest) Reset() {
	*x = RebuildIndexRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RebuildIndexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebuildIndexRequest) ProtoMessage() {}

func (x *RebuildIndexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RebuildIndexRequest.ProtoReflect.Descriptor instead.
func (*RebuildIndexRequest) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{33}
}

func (x *RebuildIndexRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *RebuildIndexRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *RebuildIndexRequest) GetDropBeforeRebuild() bool {
	if x != nil {
		return x.DropBeforeRebuild
	}
	return false
}

func (x *RebuildIndexRequest) GetThrottle() int32 {
	if x != nil {
		return x.Throttle
	}
	return 0
}

func (x *RebuildIndexRequest) GetDisableTrain() bool {
	if x != nil {
		return x.DisableTrain
	}
	return false
}

func (x *RebuildIndexRequest) GetForceRebuild() bool {
	if x != nil {
		return x.ForceRebuild
	}
	return false
}

type RebuildIndexResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg      string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Redirect string   `protobuf:"bytes,3,opt,name=redirect,proto3" json:"redirect,omitempty"`
	TaskIds  []string `protobuf:"bytes,4,rep,name=task_ids,json=taskIds,proto3" json:"task_ids,omitempty"`
}

func (x *RebuildIndexResponse) Reset() {
	*x = RebuildIndexResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RebuildIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebuildIndexResponse) ProtoMessage() {}

func (x *RebuildIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RebuildIndexResponse.ProtoReflect.Descriptor instead.
func (*RebuildIndexResponse) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{34}
}

func (x *RebuildIndexResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RebuildIndexResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RebuildIndexResponse) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *RebuildIndexResponse) GetTaskIds() []string {
	if x != nil {
		return x.TaskIds
	}
	return nil
}

type UpsertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database       string      `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Collection     string      `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`
	BuildIndex     bool        `protobuf:"varint,3,opt,name=buildIndex,proto3" json:"buildIndex,omitempty"`        // 是否立即构建索引
	Documents      []*Document `protobuf:"bytes,4,rep,name=documents,proto3" json:"documents,omitempty"`           // 覆盖更新不想更新向量索引，只更新文档其他信息，可以设置向量为空
	BuildIndexMode string      `protobuf:"bytes,5,opt,name=buildIndexMode,proto3" json:"buildIndexMode,omitempty"` // 是否同步构建索引
}

func (x *UpsertRequest) Reset() {
	*x = UpsertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertRequest) ProtoMessage() {}

func (x *UpsertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertRequest.ProtoReflect.Descriptor instead.
func (*UpsertRequest) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{35}
}

func (x *UpsertRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *UpsertRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *UpsertRequest) GetBuildIndex() bool {
	if x != nil {
		return x.BuildIndex
	}
	return false
}

func (x *UpsertRequest) GetDocuments() []*Document {
	if x != nil {
		return x.Documents
	}
	return nil
}

func (x *UpsertRequest) GetBuildIndexMode() string {
	if x != nil {
		return x.BuildIndexMode
	}
	return ""
}

type EmbeddingExtraInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenUsed uint64 `protobuf:"varint,1,opt,name=token_used,json=tokenUsed,proto3" json:"token_used,omitempty"`
}

func (x *EmbeddingExtraInfo) Reset() {
	*x = EmbeddingExtraInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmbeddingExtraInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmbeddingExtraInfo) ProtoMessage() {}

func (x *EmbeddingExtraInfo) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmbeddingExtraInfo.ProtoReflect.Descriptor instead.
func (*EmbeddingExtraInfo) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{36}
}

func (x *EmbeddingExtraInfo) GetTokenUsed() uint64 {
	if x != nil {
		return x.TokenUsed
	}
	return 0
}

type UpsertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code               int32               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg                string              `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Redirect           string              `protobuf:"bytes,3,opt,name=redirect,proto3" json:"redirect,omitempty"`
	AffectedCount      uint64              `protobuf:"varint,4,opt,name=affectedCount,proto3" json:"affectedCount,omitempty"`
	Warning            string              `protobuf:"bytes,5,opt,name=warning,proto3" json:"warning,omitempty"`
	EmbeddingExtraInfo *EmbeddingExtraInfo `protobuf:"bytes,6,opt,name=embedding_extra_info,json=embeddingExtraInfo,proto3" json:"embedding_extra_info,omitempty"`
}

func (x *UpsertResponse) Reset() {
	*x = UpsertResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertResponse) ProtoMessage() {}

func (x *UpsertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertResponse.ProtoReflect.Descriptor instead.
func (*UpsertResponse) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{37}
}

func (x *UpsertResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpsertResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UpsertResponse) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *UpsertResponse) GetAffectedCount() uint64 {
	if x != nil {
		return x.AffectedCount
	}
	return 0
}

func (x *UpsertResponse) GetWarning() string {
	if x != nil {
		return x.Warning
	}
	return ""
}

func (x *UpsertResponse) GetEmbeddingExtraInfo() *EmbeddingExtraInfo {
	if x != nil {
		return x.EmbeddingExtraInfo
	}
	return nil
}

type UpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database   string     `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Collection string     `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`
	Query      *QueryCond `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
	Update     *Document  `protobuf:"bytes,4,opt,name=update,proto3" json:"update,omitempty"`
}

func (x *UpdateRequest) Reset() {
	*x = UpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRequest) ProtoMessage() {}

func (x *UpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRequest.ProtoReflect.Descriptor instead.
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{38}
}

func (x *UpdateRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *UpdateRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *UpdateRequest) GetQuery() *QueryCond {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *UpdateRequest) GetUpdate() *Document {
	if x != nil {
		return x.Update
	}
	return nil
}

type UpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code               int32               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg                string              `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Redirect           string              `protobuf:"bytes,3,opt,name=redirect,proto3" json:"redirect,omitempty"`
	AffectedCount      uint64              `protobuf:"varint,4,opt,name=affectedCount,proto3" json:"affectedCount,omitempty"`
	Warning            string              `protobuf:"bytes,5,opt,name=warning,proto3" json:"warning,omitempty"`
	EmbeddingExtraInfo *EmbeddingExtraInfo `protobuf:"bytes,6,opt,name=embedding_extra_info,json=embeddingExtraInfo,proto3" json:"embedding_extra_info,omitempty"`
}

func (x *UpdateResponse) Reset() {
	*x = UpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateResponse) ProtoMessage() {}

func (x *UpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateResponse.ProtoReflect.Descriptor instead.
func (*UpdateResponse) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{39}
}

func (x *UpdateResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UpdateResponse) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *UpdateResponse) GetAffectedCount() uint64 {
	if x != nil {
		return x.AffectedCount
	}
	return 0
}

func (x *UpdateResponse) GetWarning() string {
	if x != nil {
		return x.Warning
	}
	return ""
}

func (x *UpdateResponse) GetEmbeddingExtraInfo() *EmbeddingExtraInfo {
	if x != nil {
		return x.EmbeddingExtraInfo
	}
	return nil
}

type DeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database   string     `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Collection string     `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`
	Query      *QueryCond `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{40}
}

func (x *DeleteRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *DeleteRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *DeleteRequest) GetQuery() *QueryCond {
	if x != nil {
		return x.Query
	}
	return nil
}

type DeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code          int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg           string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Redirect      string `protobuf:"bytes,3,opt,name=redirect,proto3" json:"redirect,omitempty"`
	AffectedCount uint64 `protobuf:"varint,4,opt,name=affectedCount,proto3" json:"affectedCount,omitempty"`
}

func (x *DeleteResponse) Reset() {
	*x = DeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponse) ProtoMessage() {}

func (x *DeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponse.ProtoReflect.Descriptor instead.
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{41}
}

func (x *DeleteResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeleteResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *DeleteResponse) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *DeleteResponse) GetAffectedCount() uint64 {
	if x != nil {
		return x.AffectedCount
	}
	return 0
}

type OrderRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldName string `protobuf:"bytes,1,opt,name=fieldName,proto3" json:"fieldName,omitempty"`
	Desc      bool   `protobuf:"varint,2,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *OrderRule) Reset() {
	*x = OrderRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderRule) ProtoMessage() {}

func (x *OrderRule) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderRule.ProtoReflect.Descriptor instead.
func (*OrderRule) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{42}
}

func (x *OrderRule) GetFieldName() string {
	if x != nil {
		return x.FieldName
	}
	return ""
}

func (x *OrderRule) GetDesc() bool {
	if x != nil {
		return x.Desc
	}
	return false
}

type QueryCond struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DocumentIds          []string     `protobuf:"bytes,1,rep,name=documentIds,proto3" json:"documentIds,omitempty"`
	IndexIds             []uint64     `protobuf:"varint,2,rep,packed,name=indexIds,proto3" json:"indexIds,omitempty"`
	RetrieveVector       bool         `protobuf:"varint,3,opt,name=retrieveVector,proto3" json:"retrieveVector,omitempty"`
	Filter               string       `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
	Limit                int64        `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset               int64        `protobuf:"varint,6,opt,name=offset,proto3" json:"offset,omitempty"`
	OutputFields         []string     `protobuf:"bytes,7,rep,name=outputFields,proto3" json:"outputFields,omitempty"`
	RetrieveSparseVector bool         `protobuf:"varint,8,opt,name=retrieveSparseVector,proto3" json:"retrieveSparseVector,omitempty"` // 目前用户不传，仅用于内部
	Sort                 []*OrderRule `protobuf:"bytes,9,rep,name=sort,proto3" json:"sort,omitempty"`
}

func (x *QueryCond) Reset() {
	*x = QueryCond{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCond) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCond) ProtoMessage() {}

func (x *QueryCond) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCond.ProtoReflect.Descriptor instead.
func (*QueryCond) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{43}
}

func (x *QueryCond) GetDocumentIds() []string {
	if x != nil {
		return x.DocumentIds
	}
	return nil
}

func (x *QueryCond) GetIndexIds() []uint64 {
	if x != nil {
		return x.IndexIds
	}
	return nil
}

func (x *QueryCond) GetRetrieveVector() bool {
	if x != nil {
		return x.RetrieveVector
	}
	return false
}

func (x *QueryCond) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *QueryCond) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *QueryCond) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *QueryCond) GetOutputFields() []string {
	if x != nil {
		return x.OutputFields
	}
	return nil
}

func (x *QueryCond) GetRetrieveSparseVector() bool {
	if x != nil {
		return x.RetrieveSparseVector
	}
	return false
}

func (x *QueryCond) GetSort() []*OrderRule {
	if x != nil {
		return x.Sort
	}
	return nil
}

type QueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database        string     `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Collection      string     `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`
	Query           *QueryCond `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
	ReadConsistency string     `protobuf:"bytes,4,opt,name=readConsistency,proto3" json:"readConsistency,omitempty"`
}

func (x *QueryRequest) Reset() {
	*x = QueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRequest) ProtoMessage() {}

func (x *QueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRequest.ProtoReflect.Descriptor instead.
func (*QueryRequest) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{44}
}

func (x *QueryRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *QueryRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *QueryRequest) GetQuery() *QueryCond {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *QueryRequest) GetReadConsistency() string {
	if x != nil {
		return x.ReadConsistency
	}
	return ""
}

type QueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string      `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Redirect  string      `protobuf:"bytes,3,opt,name=redirect,proto3" json:"redirect,omitempty"`
	Documents []*Document `protobuf:"bytes,4,rep,name=documents,proto3" json:"documents,omitempty"`
	Count     uint64      `protobuf:"varint,5,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *QueryResponse) Reset() {
	*x = QueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryResponse) ProtoMessage() {}

func (x *QueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryResponse.ProtoReflect.Descriptor instead.
func (*QueryResponse) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{45}
}

func (x *QueryResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *QueryResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *QueryResponse) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *QueryResponse) GetDocuments() []*Document {
	if x != nil {
		return x.Documents
	}
	return nil
}

func (x *QueryResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type CountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database   string     `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Collection string     `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`
	Query      *QueryCond `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *CountRequest) Reset() {
	*x = CountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountRequest) ProtoMessage() {}

func (x *CountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountRequest.ProtoReflect.Descriptor instead.
func (*CountRequest) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{46}
}

func (x *CountRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *CountRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *CountRequest) GetQuery() *QueryCond {
	if x != nil {
		return x.Query
	}
	return nil
}

type CountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg      string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Redirect string `protobuf:"bytes,3,opt,name=redirect,proto3" json:"redirect,omitempty"`
	Count    uint64 `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CountResponse) Reset() {
	*x = CountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountResponse) ProtoMessage() {}

func (x *CountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountResponse.ProtoReflect.Descriptor instead.
func (*CountResponse) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{47}
}

func (x *CountResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CountResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CountResponse) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *CountResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type SearchResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Documents []*Document `protobuf:"bytes,1,rep,name=documents,proto3" json:"documents,omitempty"`
}

func (x *SearchResult) Reset() {
	*x = SearchResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResult) ProtoMessage() {}

func (x *SearchResult) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResult.ProtoReflect.Descriptor instead.
func (*SearchResult) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{48}
}

func (x *SearchResult) GetDocuments() []*Document {
	if x != nil {
		return x.Documents
	}
	return nil
}

type SearchParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nprobe uint32  `protobuf:"varint,1,opt,name=nprobe,proto3" json:"nprobe,omitempty"`  // 搜索时查找的聚类数量，使用索引默认值即可
	Ef     uint32  `protobuf:"varint,2,opt,name=ef,proto3" json:"ef,omitempty"`          // HNSW
	Radius float32 `protobuf:"fixed32,3,opt,name=radius,proto3" json:"radius,omitempty"` // 距离阈值,范围搜索时有效
}

func (x *SearchParams) Reset() {
	*x = SearchParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchParams) ProtoMessage() {}

func (x *SearchParams) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchParams.ProtoReflect.Descriptor instead.
func (*SearchParams) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{49}
}

func (x *SearchParams) GetNprobe() uint32 {
	if x != nil {
		return x.Nprobe
	}
	return 0
}

func (x *SearchParams) GetEf() uint32 {
	if x != nil {
		return x.Ef
	}
	return 0
}

func (x *SearchParams) GetRadius() float32 {
	if x != nil {
		return x.Radius
	}
	return 0
}

type VectorArray struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vector []float32 `protobuf:"fixed32,1,rep,packed,name=vector,proto3" json:"vector,omitempty"`
}

func (x *VectorArray) Reset() {
	*x = VectorArray{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VectorArray) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VectorArray) ProtoMessage() {}

func (x *VectorArray) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VectorArray.ProtoReflect.Descriptor instead.
func (*VectorArray) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{50}
}

func (x *VectorArray) GetVector() []float32 {
	if x != nil {
		return x.Vector
	}
	return nil
}

type AnnData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldName      string         `protobuf:"bytes,1,opt,name=fieldName,proto3" json:"fieldName,omitempty"`               // 字段名称
	Data           []*VectorArray `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`                         // 使用向量值检索
	DocumentIds    []string       `protobuf:"bytes,3,rep,name=documentIds,proto3" json:"documentIds,omitempty"`           // 使用向量id检索
	Params         *SearchParams  `protobuf:"bytes,4,opt,name=params,proto3" json:"params,omitempty"`                     // 搜索参数
	Limit          uint32         `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`                      // 结果数量
	DataExpr       []string       `protobuf:"bytes,6,rep,name=data_expr,json=dataExpr,proto3" json:"data_expr,omitempty"` // 表达式搜索
	EmbeddingItems []string       `protobuf:"bytes,7,rep,name=embeddingItems,proto3" json:"embeddingItems,omitempty"`     // 使用embedding字段检索
}

func (x *AnnData) Reset() {
	*x = AnnData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnnData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnnData) ProtoMessage() {}

func (x *AnnData) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnnData.ProtoReflect.Descriptor instead.
func (*AnnData) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{51}
}

func (x *AnnData) GetFieldName() string {
	if x != nil {
		return x.FieldName
	}
	return ""
}

func (x *AnnData) GetData() []*VectorArray {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *AnnData) GetDocumentIds() []string {
	if x != nil {
		return x.DocumentIds
	}
	return nil
}

func (x *AnnData) GetParams() *SearchParams {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *AnnData) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *AnnData) GetDataExpr() []string {
	if x != nil {
		return x.DataExpr
	}
	return nil
}

func (x *AnnData) GetEmbeddingItems() []string {
	if x != nil {
		return x.EmbeddingItems
	}
	return nil
}

type SparseVectorArray struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpVector []*SparseVecItem `protobuf:"bytes,1,rep,name=sp_vector,json=spVector,proto3" json:"sp_vector,omitempty"`
}

func (x *SparseVectorArray) Reset() {
	*x = SparseVectorArray{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SparseVectorArray) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SparseVectorArray) ProtoMessage() {}

func (x *SparseVectorArray) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SparseVectorArray.ProtoReflect.Descriptor instead.
func (*SparseVectorArray) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{52}
}

func (x *SparseVectorArray) GetSpVector() []*SparseVecItem {
	if x != nil {
		return x.SpVector
	}
	return nil
}

type SparseSearchParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TerminateAfter  uint32  `protobuf:"varint,1,opt,name=terminateAfter,proto3" json:"terminateAfter,omitempty"`    // 搜索到指定数量的结果就终止
	CutoffFrequency float64 `protobuf:"fixed64,2,opt,name=cutoffFrequency,proto3" json:"cutoffFrequency,omitempty"` // 全文检索时过滤掉高频词
}

func (x *SparseSearchParams) Reset() {
	*x = SparseSearchParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SparseSearchParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SparseSearchParams) ProtoMessage() {}

func (x *SparseSearchParams) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SparseSearchParams.ProtoReflect.Descriptor instead.
func (*SparseSearchParams) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{53}
}

func (x *SparseSearchParams) GetTerminateAfter() uint32 {
	if x != nil {
		return x.TerminateAfter
	}
	return 0
}

func (x *SparseSearchParams) GetCutoffFrequency() float64 {
	if x != nil {
		return x.CutoffFrequency
	}
	return 0
}

type SparseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldName string               `protobuf:"bytes,1,opt,name=fieldName,proto3" json:"fieldName,omitempty"` // 字段名称
	Data      []*SparseVectorArray `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`           // 使用向量值检索
	Limit     uint32               `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`        // 结果数量
	Params    *SparseSearchParams  `protobuf:"bytes,4,opt,name=params,proto3" json:"params,omitempty"`       // 搜索参数
}

func (x *SparseData) Reset() {
	*x = SparseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SparseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SparseData) ProtoMessage() {}

func (x *SparseData) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SparseData.ProtoReflect.Descriptor instead.
func (*SparseData) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{54}
}

func (x *SparseData) GetFieldName() string {
	if x != nil {
		return x.FieldName
	}
	return ""
}

func (x *SparseData) GetData() []*SparseVectorArray {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SparseData) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SparseData) GetParams() *SparseSearchParams {
	if x != nil {
		return x.Params
	}
	return nil
}

type RerankParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Method  string             `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"`
	Weights map[string]float32 `protobuf:"bytes,2,rep,name=weights,proto3" json:"weights,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"` // for WEIGHTED: 各路检索结果分数权重, map的key对应field_name
	RrfK    int32              `protobuf:"varint,3,opt,name=rrf_k,json=rrfK,proto3" json:"rrf_k,omitempty"`                                                                                    // for RRF: K参数
}

func (x *RerankParams) Reset() {
	*x = RerankParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RerankParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RerankParams) ProtoMessage() {}

func (x *RerankParams) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RerankParams.ProtoReflect.Descriptor instead.
func (*RerankParams) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{55}
}

func (x *RerankParams) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *RerankParams) GetWeights() map[string]float32 {
	if x != nil {
		return x.Weights
	}
	return nil
}

func (x *RerankParams) GetRrfK() int32 {
	if x != nil {
		return x.RrfK
	}
	return 0
}

type SearchCond struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vectors              []*VectorArray `protobuf:"bytes,1,rep,name=vectors,proto3" json:"vectors,omitempty"`         // 使用向量值检索
	DocumentIds          []string       `protobuf:"bytes,2,rep,name=documentIds,proto3" json:"documentIds,omitempty"` // 使用向量id检索
	Params               *SearchParams  `protobuf:"bytes,3,opt,name=params,proto3" json:"params,omitempty"`
	Filter               string         `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`                                  // 过滤条件
	RetrieveVector       bool           `protobuf:"varint,5,opt,name=retrieveVector,proto3" json:"retrieveVector,omitempty"`                 // 是否返回原始向量，注意设置为true时会降低性能
	Limit                uint32         `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`                                   // 结果数量
	Outputfields         []string       `protobuf:"bytes,7,rep,name=outputfields,proto3" json:"outputfields,omitempty"`                      // 输出字段
	EmbeddingItems       []string       `protobuf:"bytes,8,rep,name=embeddingItems,proto3" json:"embeddingItems,omitempty"`                  // 使用字符串检索
	Range                bool           `protobuf:"varint,9,opt,name=range,proto3" json:"range,omitempty"`                                   // 是否开启range搜索
	Ann                  []*AnnData     `protobuf:"bytes,10,rep,name=ann,proto3" json:"ann,omitempty"`                                       // ann检索
	Sparse               []*SparseData  `protobuf:"bytes,11,rep,name=sparse,proto3" json:"sparse,omitempty"`                                 // 稀疏向量检索
	RerankParams         *RerankParams  `protobuf:"bytes,12,opt,name=rerank_params,json=rerankParams,proto3" json:"rerank_params,omitempty"` // rerank参数
	RetrieveSparseVector bool           `protobuf:"varint,13,opt,name=retrieveSparseVector,proto3" json:"retrieveSparseVector,omitempty"`    // 目前用户不传，仅用于内部
}

func (x *SearchCond) Reset() {
	*x = SearchCond{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchCond) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCond) ProtoMessage() {}

func (x *SearchCond) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCond.ProtoReflect.Descriptor instead.
func (*SearchCond) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{56}
}

func (x *SearchCond) GetVectors() []*VectorArray {
	if x != nil {
		return x.Vectors
	}
	return nil
}

func (x *SearchCond) GetDocumentIds() []string {
	if x != nil {
		return x.DocumentIds
	}
	return nil
}

func (x *SearchCond) GetParams() *SearchParams {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *SearchCond) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *SearchCond) GetRetrieveVector() bool {
	if x != nil {
		return x.RetrieveVector
	}
	return false
}

func (x *SearchCond) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchCond) GetOutputfields() []string {
	if x != nil {
		return x.Outputfields
	}
	return nil
}

func (x *SearchCond) GetEmbeddingItems() []string {
	if x != nil {
		return x.EmbeddingItems
	}
	return nil
}

func (x *SearchCond) GetRange() bool {
	if x != nil {
		return x.Range
	}
	return false
}

func (x *SearchCond) GetAnn() []*AnnData {
	if x != nil {
		return x.Ann
	}
	return nil
}

func (x *SearchCond) GetSparse() []*SparseData {
	if x != nil {
		return x.Sparse
	}
	return nil
}

func (x *SearchCond) GetRerankParams() *RerankParams {
	if x != nil {
		return x.RerankParams
	}
	return nil
}

func (x *SearchCond) GetRetrieveSparseVector() bool {
	if x != nil {
		return x.RetrieveSparseVector
	}
	return false
}

type SearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database        string      `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Collection      string      `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`           // 索引名称
	Search          *SearchCond `protobuf:"bytes,3,opt,name=search,proto3" json:"search,omitempty"`                   // 检索条件
	ReadConsistency string      `protobuf:"bytes,4,opt,name=readConsistency,proto3" json:"readConsistency,omitempty"` // 读取一致性
}

func (x *SearchRequest) Reset() {
	*x = SearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRequest) ProtoMessage() {}

func (x *SearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRequest.ProtoReflect.Descriptor instead.
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{57}
}

func (x *SearchRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *SearchRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *SearchRequest) GetSearch() *SearchCond {
	if x != nil {
		return x.Search
	}
	return nil
}

func (x *SearchRequest) GetReadConsistency() string {
	if x != nil {
		return x.ReadConsistency
	}
	return ""
}

type Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Expr   string  `protobuf:"bytes,1,opt,name=expr,proto3" json:"expr,omitempty"`       // 条件过滤
	Radius float32 `protobuf:"fixed32,2,opt,name=radius,proto3" json:"radius,omitempty"` // 距离过滤
	Size   uint32  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`      // 设置分片返回的结果数量,需要小于整体返回的数量
}

func (x *Filter) Reset() {
	*x = Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filter) ProtoMessage() {}

func (x *Filter) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filter.ProtoReflect.Descriptor instead.
func (*Filter) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{58}
}

func (x *Filter) GetExpr() string {
	if x != nil {
		return x.Expr
	}
	return ""
}

func (x *Filter) GetRadius() float32 {
	if x != nil {
		return x.Radius
	}
	return 0
}

func (x *Filter) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type RoaringBinary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Size int64  `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *RoaringBinary) Reset() {
	*x = RoaringBinary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoaringBinary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoaringBinary) ProtoMessage() {}

func (x *RoaringBinary) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoaringBinary.ProtoReflect.Descriptor instead.
func (*RoaringBinary) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{59}
}

func (x *RoaringBinary) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *RoaringBinary) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type SearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code               int32               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg                string              `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Redirect           string              `protobuf:"bytes,3,opt,name=redirect,proto3" json:"redirect,omitempty"`
	Results            []*SearchResult     `protobuf:"bytes,4,rep,name=results,proto3" json:"results,omitempty"`
	Warning            string              `protobuf:"bytes,5,opt,name=warning,proto3" json:"warning,omitempty"`
	EmbeddingExtraInfo *EmbeddingExtraInfo `protobuf:"bytes,6,opt,name=embedding_extra_info,json=embeddingExtraInfo,proto3" json:"embedding_extra_info,omitempty"`
}

func (x *SearchResponse) Reset() {
	*x = SearchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResponse) ProtoMessage() {}

func (x *SearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResponse.ProtoReflect.Descriptor instead.
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{60}
}

func (x *SearchResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SearchResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SearchResponse) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *SearchResponse) GetResults() []*SearchResult {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *SearchResponse) GetWarning() string {
	if x != nil {
		return x.Warning
	}
	return ""
}

func (x *SearchResponse) GetEmbeddingExtraInfo() *EmbeddingExtraInfo {
	if x != nil {
		return x.EmbeddingExtraInfo
	}
	return nil
}

type DatabaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database string   `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	DbType   DataType `protobuf:"varint,2,opt,name=dbType,proto3,enum=olama.DataType" json:"dbType,omitempty"`
}

func (x *DatabaseRequest) Reset() {
	*x = DatabaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatabaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseRequest) ProtoMessage() {}

func (x *DatabaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseRequest.ProtoReflect.Descriptor instead.
func (*DatabaseRequest) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{61}
}

func (x *DatabaseRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *DatabaseRequest) GetDbType() DataType {
	if x != nil {
		return x.DbType
	}
	return DataType_BASE
}

type DatabaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code          int32                    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg           string                   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Redirect      string                   `protobuf:"bytes,3,opt,name=redirect,proto3" json:"redirect,omitempty"`
	Databases     []string                 `protobuf:"bytes,4,rep,name=databases,proto3" json:"databases,omitempty"`
	AffectedCount uint64                   `protobuf:"varint,5,opt,name=affectedCount,proto3" json:"affectedCount,omitempty"`
	Info          map[string]*DatabaseItem `protobuf:"bytes,6,rep,name=info,proto3" json:"info,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *DatabaseResponse) Reset() {
	*x = DatabaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatabaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseResponse) ProtoMessage() {}

func (x *DatabaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseResponse.ProtoReflect.Descriptor instead.
func (*DatabaseResponse) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{62}
}

func (x *DatabaseResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DatabaseResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *DatabaseResponse) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *DatabaseResponse) GetDatabases() []string {
	if x != nil {
		return x.Databases
	}
	return nil
}

func (x *DatabaseResponse) GetAffectedCount() uint64 {
	if x != nil {
		return x.AffectedCount
	}
	return 0
}

func (x *DatabaseResponse) GetInfo() map[string]*DatabaseItem {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetVersionRequest) Reset() {
	*x = GetVersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionRequest) ProtoMessage() {}

func (x *GetVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionRequest.ProtoReflect.Descriptor instead.
func (*GetVersionRequest) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{63}
}

type GetVersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp     int64 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                              // 毫秒级时间戳，可用于ping-pong探活
	KernalVersion int64 `protobuf:"varint,2,opt,name=kernal_version,json=kernalVersion,proto3" json:"kernal_version,omitempty"` // 4段版本号拼接组成, v1.2.3.4 表示成1002003004
}

func (x *GetVersionResponse) Reset() {
	*x = GetVersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionResponse) ProtoMessage() {}

func (x *GetVersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionResponse.ProtoReflect.Descriptor instead.
func (*GetVersionResponse) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{64}
}

func (x *GetVersionResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *GetVersionResponse) GetKernalVersion() int64 {
	if x != nil {
		return x.KernalVersion
	}
	return 0
}

type ModifyVectorIndexRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database      string                  `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Collection    string                  `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`
	VectorIndexes map[string]*IndexColumn `protobuf:"bytes,3,rep,name=vectorIndexes,proto3" json:"vectorIndexes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	RebuildRules  *RebuildIndexRequest    `protobuf:"bytes,4,opt,name=rebuildRules,proto3" json:"rebuildRules,omitempty"`
}

func (x *ModifyVectorIndexRequest) Reset() {
	*x = ModifyVectorIndexRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyVectorIndexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyVectorIndexRequest) ProtoMessage() {}

func (x *ModifyVectorIndexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyVectorIndexRequest.ProtoReflect.Descriptor instead.
func (*ModifyVectorIndexRequest) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{65}
}

func (x *ModifyVectorIndexRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *ModifyVectorIndexRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *ModifyVectorIndexRequest) GetVectorIndexes() map[string]*IndexColumn {
	if x != nil {
		return x.VectorIndexes
	}
	return nil
}

func (x *ModifyVectorIndexRequest) GetRebuildRules() *RebuildIndexRequest {
	if x != nil {
		return x.RebuildRules
	}
	return nil
}

type ModifyVectorIndexResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg      string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Redirect string `protobuf:"bytes,3,opt,name=redirect,proto3" json:"redirect,omitempty"`
}

func (x *ModifyVectorIndexResponse) Reset() {
	*x = ModifyVectorIndexResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyVectorIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyVectorIndexResponse) ProtoMessage() {}

func (x *ModifyVectorIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyVectorIndexResponse.ProtoReflect.Descriptor instead.
func (*ModifyVectorIndexResponse) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{66}
}

func (x *ModifyVectorIndexResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ModifyVectorIndexResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ModifyVectorIndexResponse) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

type AddIndexRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database         string                  `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Collection       string                  `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`
	Indexes          map[string]*IndexColumn `protobuf:"bytes,3,rep,name=indexes,proto3" json:"indexes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	BuildExistedData bool                    `protobuf:"varint,4,opt,name=buildExistedData,proto3" json:"buildExistedData,omitempty"`
}

func (x *AddIndexRequest) Reset() {
	*x = AddIndexRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddIndexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddIndexRequest) ProtoMessage() {}

func (x *AddIndexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddIndexRequest.ProtoReflect.Descriptor instead.
func (*AddIndexRequest) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{67}
}

func (x *AddIndexRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *AddIndexRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *AddIndexRequest) GetIndexes() map[string]*IndexColumn {
	if x != nil {
		return x.Indexes
	}
	return nil
}

func (x *AddIndexRequest) GetBuildExistedData() bool {
	if x != nil {
		return x.BuildExistedData
	}
	return false
}

type AddIndexResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg      string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Redirect string `protobuf:"bytes,3,opt,name=redirect,proto3" json:"redirect,omitempty"`
}

func (x *AddIndexResponse) Reset() {
	*x = AddIndexResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddIndexResponse) ProtoMessage() {}

func (x *AddIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddIndexResponse.ProtoReflect.Descriptor instead.
func (*AddIndexResponse) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{68}
}

func (x *AddIndexResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AddIndexResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AddIndexResponse) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	CreateTime string       `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	Password   string       `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`     // 用户密码，用于Authentication建链认证
	Roles      []string     `protobuf:"bytes,4,rep,name=roles,proto3" json:"roles,omitempty"`           // User被赋予的Role集合
	Privileges []*Privilege `protobuf:"bytes,5,rep,name=privileges,proto3" json:"privileges,omitempty"` // User被直接授予的操作权限
	Version    int64        `protobuf:"varint,6,opt,name=version,proto3" json:"version,omitempty"`      // 版本号，User变更时更新：新增(删除)Role/Privileges，changePassword
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{69}
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *User) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *User) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *User) GetPrivileges() []*Privilege {
	if x != nil {
		return x.Privileges
	}
	return nil
}

func (x *User) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

type Privilege struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource string   `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
	Actions  []string `protobuf:"bytes,2,rep,name=actions,proto3" json:"actions,omitempty"`
}

func (x *Privilege) Reset() {
	*x = Privilege{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Privilege) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Privilege) ProtoMessage() {}

func (x *Privilege) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Privilege.ProtoReflect.Descriptor instead.
func (*Privilege) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{70}
}

func (x *Privilege) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *Privilege) GetActions() []string {
	if x != nil {
		return x.Actions
	}
	return nil
}

type UserAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User     string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *UserAccountRequest) Reset() {
	*x = UserAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAccountRequest) ProtoMessage() {}

func (x *UserAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAccountRequest.ProtoReflect.Descriptor instead.
func (*UserAccountRequest) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{71}
}

func (x *UserAccountRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *UserAccountRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type UserAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg      string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Redirect string `protobuf:"bytes,3,opt,name=redirect,proto3" json:"redirect,omitempty"`
}

func (x *UserAccountResponse) Reset() {
	*x = UserAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAccountResponse) ProtoMessage() {}

func (x *UserAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAccountResponse.ProtoReflect.Descriptor instead.
func (*UserAccountResponse) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{72}
}

func (x *UserAccountResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UserAccountResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UserAccountResponse) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

type UserPrivilegesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User       string       `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Privileges []*Privilege `protobuf:"bytes,2,rep,name=privileges,proto3" json:"privileges,omitempty"`
}

func (x *UserPrivilegesRequest) Reset() {
	*x = UserPrivilegesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPrivilegesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPrivilegesRequest) ProtoMessage() {}

func (x *UserPrivilegesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPrivilegesRequest.ProtoReflect.Descriptor instead.
func (*UserPrivilegesRequest) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{73}
}

func (x *UserPrivilegesRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *UserPrivilegesRequest) GetPrivileges() []*Privilege {
	if x != nil {
		return x.Privileges
	}
	return nil
}

type UserPrivilegesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg      string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Redirect string `protobuf:"bytes,3,opt,name=redirect,proto3" json:"redirect,omitempty"`
}

func (x *UserPrivilegesResponse) Reset() {
	*x = UserPrivilegesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPrivilegesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPrivilegesResponse) ProtoMessage() {}

func (x *UserPrivilegesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPrivilegesResponse.ProtoReflect.Descriptor instead.
func (*UserPrivilegesResponse) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{74}
}

func (x *UserPrivilegesResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UserPrivilegesResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UserPrivilegesResponse) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

type UserListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UserListRequest) Reset() {
	*x = UserListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserListRequest) ProtoMessage() {}

func (x *UserListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserListRequest.ProtoReflect.Descriptor instead.
func (*UserListRequest) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{75}
}

type UserListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg      string  `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Redirect string  `protobuf:"bytes,3,opt,name=redirect,proto3" json:"redirect,omitempty"`
	Users    []*User `protobuf:"bytes,4,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *UserListResponse) Reset() {
	*x = UserListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserListResponse) ProtoMessage() {}

func (x *UserListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserListResponse.ProtoReflect.Descriptor instead.
func (*UserListResponse) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{76}
}

func (x *UserListResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UserListResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UserListResponse) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *UserListResponse) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

type UserDescribeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *UserDescribeRequest) Reset() {
	*x = UserDescribeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDescribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDescribeRequest) ProtoMessage() {}

func (x *UserDescribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDescribeRequest.ProtoReflect.Descriptor instead.
func (*UserDescribeRequest) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{77}
}

func (x *UserDescribeRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

type UserDescribeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg      string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Redirect string `protobuf:"bytes,3,opt,name=redirect,proto3" json:"redirect,omitempty"`
	User     *User  `protobuf:"bytes,4,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *UserDescribeResponse) Reset() {
	*x = UserDescribeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDescribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDescribeResponse) ProtoMessage() {}

func (x *UserDescribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDescribeResponse.ProtoReflect.Descriptor instead.
func (*UserDescribeResponse) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{78}
}

func (x *UserDescribeResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UserDescribeResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UserDescribeResponse) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *UserDescribeResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type Field_StringArray struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StrArr [][]byte `protobuf:"bytes,1,rep,name=str_arr,json=strArr,proto3" json:"str_arr,omitempty"`
}

func (x *Field_StringArray) Reset() {
	*x = Field_StringArray{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Field_StringArray) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Field_StringArray) ProtoMessage() {}

func (x *Field_StringArray) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Field_StringArray.ProtoReflect.Descriptor instead.
func (*Field_StringArray) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{1, 0}
}

func (x *Field_StringArray) GetStrArr() [][]byte {
	if x != nil {
		return x.StrArr
	}
	return nil
}

var File_olama_proto protoreflect.FileDescriptor

var file_olama_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6f,
	0x6c, 0x61, 0x6d, 0x61, 0x22, 0xb3, 0x03, 0x0a, 0x08, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x02, 0x52, 0x06, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12,
	0x33, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x70, 0x65, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x50, 0x65, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x73, 0x68, 0x61, 0x72, 0x64, 0x49, 0x64, 0x78, 0x12, 0x23, 0x0a, 0x0d, 0x76, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0c, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x64, 0x6f, 0x63, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x07, 0x64, 0x6f, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x39, 0x0a, 0x0d, 0x73, 0x70, 0x61,
	0x72, 0x73, 0x65, 0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x53, 0x70, 0x61, 0x72, 0x73, 0x65, 0x56,
	0x65, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0c, 0x73, 0x70, 0x61, 0x72, 0x73, 0x65, 0x56, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x65, 0x78, 0x70,
	0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x45, 0x78, 0x70,
	0x72, 0x1a, 0x47, 0x0a, 0x0b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x22, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xcf, 0x01, 0x0a, 0x05, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x12, 0x19, 0x0a, 0x07, 0x76, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x12,
	0x19, 0x0a, 0x07, 0x76, 0x61, 0x6c, 0x5f, 0x75, 0x36, 0x34, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x48, 0x00, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x55, 0x36, 0x34, 0x12, 0x1f, 0x0a, 0x0a, 0x76, 0x61,
	0x6c, 0x5f, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x48, 0x00,
	0x52, 0x09, 0x76, 0x61, 0x6c, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x12, 0x3a, 0x0a, 0x0b, 0x76,
	0x61, 0x6c, 0x5f, 0x73, 0x74, 0x72, 0x5f, 0x61, 0x72, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x41, 0x72, 0x72, 0x61, 0x79, 0x48, 0x00, 0x52, 0x09, 0x76, 0x61,
	0x6c, 0x53, 0x74, 0x72, 0x41, 0x72, 0x72, 0x1a, 0x26, 0x0a, 0x0b, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x74, 0x72, 0x5f, 0x61, 0x72,
	0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x74, 0x72, 0x41, 0x72, 0x72, 0x42,
	0x0b, 0x0a, 0x09, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x5f, 0x76, 0x61, 0x6c, 0x22, 0x3e, 0x0a, 0x0d,
	0x53, 0x70, 0x61, 0x72, 0x73, 0x65, 0x56, 0x65, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x17, 0x0a,
	0x07, 0x74, 0x65, 0x72, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x74, 0x65, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22, 0xfc, 0x03, 0x0a,
	0x0a, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x15, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x35, 0x0a, 0x17, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x5f, 0x6d, 0x65, 0x6d, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x14, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x4d, 0x65, 0x6d, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x73,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x2c, 0x0a, 0x12, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x65, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64,
	0x54, 0x65, 0x72, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x64, 0x5f, 0x73, 0x65, 0x65, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x64, 0x53, 0x65, 0x65, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x61, 0x64, 0x64, 0x65, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x61, 0x64, 0x64, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x33,
	0x0a, 0x16, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13,
	0x64, 0x61, 0x74, 0x61, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x10, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x31, 0x0a, 0x15, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x68, 0x6e, 0x73, 0x77, 0x5f, 0x72,
	0x65, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x48, 0x6e, 0x73, 0x77, 0x52, 0x65, 0x73, 0x69, 0x7a, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x17, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x5f, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xf5, 0x01, 0x0a, 0x05,
	0x53, 0x68, 0x61, 0x72, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x69,
	0x64, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x68, 0x61, 0x72, 0x64, 0x49,
	0x64, 0x78, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x1c, 0x0a, 0x09, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x12, 0x27, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6f,
	0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x72, 0x6f, 0x6d, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x22, 0x41, 0x0a, 0x09, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x59, 0x0a, 0x0c, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x07, 0x64, 0x62, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x64, 0x62, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x69, 0x0a, 0x0f, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xdf, 0x06, 0x0a,
	0x0e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a,
	0x10, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x64,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f,
	0x66, 0x53, 0x68, 0x61, 0x72, 0x64, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x10, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x52, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x6e, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x6f, 0x6c,
	0x61, 0x6d, 0x61, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x06, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x44, 0x65, 0x73, 0x63, 0x12, 0x46, 0x0a, 0x0b, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x65, 0x74, 0x61,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x65, 0x74,
	0x61, 0x73, 0x12, 0x3c, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x10, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x6e, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x10, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64,
	0x69, 0x6e, 0x67, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69,
	0x6e, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x0f, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64,
	0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x2c, 0x0a, 0x09, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x6f,
	0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x64,
	0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x2e, 0x0a, 0x09, 0x74, 0x74, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x54, 0x54, 0x4c,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x09, 0x74, 0x74, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x1a, 0x4f, 0x0a, 0x0f, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x3a, 0x0a, 0x0c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x83,
	0x01, 0x0a, 0x09, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x2f, 0x0a, 0x0a,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x10, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x45, 0x0a,
	0x12, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6f, 0x6c, 0x61, 0x6d,
	0x61, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x10, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x89, 0x01, 0x0a, 0x09, 0x53, 0x68, 0x61, 0x72, 0x64, 0x43, 0x6f,
	0x6e, 0x66, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x78, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x68, 0x61, 0x72, 0x64, 0x49, 0x64, 0x78, 0x12,
	0x29, 0x0a, 0x04, 0x63, 0x6f, 0x6e, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x66, 0x52, 0x04, 0x63, 0x6f, 0x6e, 0x66, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f,
	0x64, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73,
	0x22, 0x41, 0x0a, 0x09, 0x54, 0x54, 0x4c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x16, 0x0a,
	0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x22, 0xdb, 0x02, 0x0a, 0x14, 0x53, 0x68, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x73, 0x68, 0x61, 0x72, 0x64, 0x49, 0x64, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x70, 0x65, 0x65, 0x72, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x50, 0x65, 0x65, 0x72, 0x73,
	0x12, 0x2a, 0x0a, 0x11, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x61, 0x6c, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x73, 0x12, 0x28, 0x0a, 0x10,
	0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x6d, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x6f, 0x70, 0x4d, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x5f, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x4d, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x12, 0x24, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x72, 0x64, 0x73, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x53, 0x68, 0x61, 0x72,
	0x64, 0x52, 0x06, 0x73, 0x68, 0x61, 0x72, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x69, 0x6e,
	0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x69, 0x6e,
	0x67, 0x22, 0xb0, 0x02, 0x0a, 0x0f, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x04, 0x63, 0x6f, 0x6e, 0x66, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x04, 0x63, 0x6f, 0x6e, 0x66,
	0x12, 0x33, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x06, 0x73,
	0x68, 0x61, 0x72, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x03, 0x72, 0x65,
	0x71, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x03, 0x72, 0x65, 0x71, 0x12, 0x36, 0x0a, 0x0b,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x15, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0a, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x22, 0x63, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x41, 0x6c, 0x69, 0x61, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x22, 0x46, 0x0a, 0x12, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61,
	0x6c, 0x69, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61,
	0x73, 0x22, 0x7d, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x69, 0x61, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0d, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x43, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x61, 0x6c, 0x69, 0x61, 0x73, 0x22, 0x80, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x69,
	0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x2a, 0x0a, 0x07,
	0x61, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x07, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x22, 0x73, 0x0a, 0x19, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x22, 0xcc, 0x01,
	0x0a, 0x1a, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x3e,
	0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x50, 0x0a, 0x16,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x22, 0xcd,
	0x01, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x40, 0x0a, 0x0b,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2e,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x22, 0x71,
	0x0a, 0x0b, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x0c, 0x0a,
	0x01, 0x4d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x01, 0x4d, 0x12, 0x26, 0x0a, 0x0e, 0x65,
	0x66, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0e, 0x65, 0x66, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x6e, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6c, 0x69, 0x73,
	0x74, 0x22, 0xfd, 0x01, 0x0a, 0x0b, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64,
	0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6f, 0x6c, 0x61, 0x6d,
	0x61, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x5f, 0x0a, 0x0b, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0x7f, 0x0a, 0x11, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x41, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x41, 0x6c, 0x6c, 0x12, 0x2e, 0x0a, 0x12, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x57,
	0x69, 0x74, 0x68, 0x6f, 0x75, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x12, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x57, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x53, 0x74, 0x72, 0x4c,
	0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x53, 0x74, 0x72,
	0x4c, 0x65, 0x6e, 0x22, 0xce, 0x05, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x72,
	0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x68, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73,
	0x68, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x45, 0x0a,
	0x07, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x0b, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6f, 0x6c, 0x61, 0x6d,
	0x61, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0b, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x6c,
	0x69, 0x61, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x6c, 0x69, 0x61, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x0f, 0x65, 0x6d, 0x62,
	0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64,
	0x64, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x0f, 0x65, 0x6d, 0x62, 0x65,
	0x64, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x09, 0x74, 0x74, 0x6c, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61,
	0x2e, 0x54, 0x54, 0x4c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x09, 0x74, 0x74, 0x6c, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x46, 0x0a, 0x11, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x11, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x25, 0x0a,
	0x0e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x4e, 0x0a, 0x0c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x82, 0x01, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x61, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x8e, 0x01, 0x0a, 0x15, 0x44, 0x72,
	0x6f, 0x70, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x66, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x77, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74,
	0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x77, 0x69,
	0x74, 0x68, 0x6f, 0x75, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x22, 0x80, 0x01, 0x0a, 0x16, 0x44,
	0x72, 0x6f, 0x70, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d,
	0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x8e, 0x01,
	0x0a, 0x19, 0x54, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x17, 0x6f, 0x6e, 0x6c, 0x79, 0x5f,
	0x74, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x6e, 0x6e, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x6f, 0x6e, 0x6c, 0x79, 0x54, 0x72,
	0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x84,
	0x01, 0x0a, 0x1a, 0x54, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12,
	0x24, 0x0a, 0x0d, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xe5, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x11, 0x64, 0x72, 0x6f,
	0x70, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x64, 0x72, 0x6f, 0x70, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65,
	0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x68, 0x72, 0x6f, 0x74,
	0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x68, 0x72, 0x6f, 0x74,
	0x74, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x6f, 0x72, 0x63,
	0x65, 0x5f, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0c, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x22, 0x73, 0x0a,
	0x14, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x49,
	0x64, 0x73, 0x22, 0xc2, 0x01, 0x0a, 0x0d, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x2d, 0x0a, 0x09, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x26, 0x0a, 0x0e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4d, 0x6f, 0x64,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x33, 0x0a, 0x12, 0x45, 0x6d, 0x62, 0x65, 0x64,
	0x64, 0x69, 0x6e, 0x67, 0x45, 0x78, 0x74, 0x72, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x55, 0x73, 0x65, 0x64, 0x22, 0xdf, 0x01, 0x0a,
	0x0e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x61, 0x72, 0x6e, 0x69,
	0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x12, 0x4b, 0x0a, 0x14, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e,
	0x67, 0x45, 0x78, 0x74, 0x72, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x12, 0x65, 0x6d, 0x62, 0x65,
	0x64, 0x64, 0x69, 0x6e, 0x67, 0x45, 0x78, 0x74, 0x72, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x9c,
	0x01, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6f, 0x6c,
	0x61, 0x6d, 0x61, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x52, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x12, 0x27, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0xdf, 0x01,
	0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x61, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x61, 0x72, 0x6e,
	0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x61, 0x72, 0x6e, 0x69,
	0x6e, 0x67, 0x12, 0x4b, 0x0a, 0x14, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69,
	0x6e, 0x67, 0x45, 0x78, 0x74, 0x72, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x12, 0x65, 0x6d, 0x62,
	0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x45, 0x78, 0x74, 0x72, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x73, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6f, 0x6c,
	0x61, 0x6d, 0x61, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x52, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x22, 0x78, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1a, 0x0a, 0x08,
	0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0d, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3d,
	0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73,
	0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0xb5, 0x02,
	0x0a, 0x09, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52,
	0x08, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x49, 0x64, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x74,
	0x72, 0x69, 0x65, 0x76, 0x65, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0e, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x56, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x32, 0x0a, 0x14, 0x72,
	0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x53, 0x70, 0x61, 0x72, 0x73, 0x65, 0x56, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x72, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x53, 0x70, 0x61, 0x72, 0x73, 0x65, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12,
	0x24, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x52,
	0x04, 0x73, 0x6f, 0x72, 0x74, 0x22, 0x9c, 0x01, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43,
	0x6f, 0x6e, 0x64, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65,
	0x61, 0x64, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x63, 0x79, 0x22, 0x96, 0x01, 0x0a, 0x0d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1a, 0x0a, 0x08,
	0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x2d, 0x0a, 0x09, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6f, 0x6c,
	0x61, 0x6d, 0x61, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x72, 0x0a,
	0x0c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x05, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x22, 0x67, 0x0a, 0x0d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3d, 0x0a, 0x0c, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2d, 0x0a, 0x09, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x09,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x4e, 0x0a, 0x0c, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x70, 0x72,
	0x6f, 0x62, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6e, 0x70, 0x72, 0x6f, 0x62,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x65,
	0x66, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x06, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x22, 0x25, 0x0a, 0x0b, 0x56, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x02, 0x52, 0x06, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x22, 0xf9, 0x01, 0x0a, 0x07, 0x41, 0x6e, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61,
	0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x41, 0x72, 0x72, 0x61, 0x79, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x73, 0x12, 0x2b, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x65, 0x78, 0x70, 0x72, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61,
	0x45, 0x78, 0x70, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e,
	0x67, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x6d,
	0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x46, 0x0a, 0x11,
	0x53, 0x70, 0x61, 0x72, 0x73, 0x65, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x41, 0x72, 0x72, 0x61,
	0x79, 0x12, 0x31, 0x0a, 0x09, 0x73, 0x70, 0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x53, 0x70, 0x61,
	0x72, 0x73, 0x65, 0x56, 0x65, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x73, 0x70, 0x56, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x22, 0x66, 0x0a, 0x12, 0x53, 0x70, 0x61, 0x72, 0x73, 0x65, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x65,
	0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x41, 0x66, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0e, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x41, 0x66, 0x74,
	0x65, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x75, 0x74, 0x6f, 0x66, 0x66, 0x46, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x63, 0x75, 0x74,
	0x6f, 0x66, 0x66, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x22, 0xa1, 0x01, 0x0a,
	0x0a, 0x53, 0x70, 0x61, 0x72, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e,
	0x53, 0x70, 0x61, 0x72, 0x73, 0x65, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x41, 0x72, 0x72, 0x61,
	0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x31, 0x0a,
	0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x53, 0x70, 0x61, 0x72, 0x73, 0x65, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x22, 0xb3, 0x01, 0x0a, 0x0c, 0x52, 0x65, 0x72, 0x61, 0x6e, 0x6b, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x3a, 0x0a, 0x07, 0x77, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x6c, 0x61,
	0x6d, 0x61, 0x2e, 0x52, 0x65, 0x72, 0x61, 0x6e, 0x6b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e,
	0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x77, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x73, 0x12, 0x13, 0x0a, 0x05, 0x72, 0x72, 0x66, 0x5f, 0x6b, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x72, 0x66, 0x4b, 0x1a, 0x3a, 0x0a, 0x0c, 0x57, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xfc, 0x03, 0x0a, 0x0a, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x43, 0x6f, 0x6e, 0x64, 0x12, 0x2c, 0x0a, 0x07, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x56,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x41, 0x72, 0x72, 0x61, 0x79, 0x52, 0x07, 0x76, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x73, 0x12, 0x2b, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0e, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x56, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c,
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x26, 0x0a, 0x0e,
	0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x03, 0x61, 0x6e,
	0x6e, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e,
	0x41, 0x6e, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x03, 0x61, 0x6e, 0x6e, 0x12, 0x29, 0x0a, 0x06,
	0x73, 0x70, 0x61, 0x72, 0x73, 0x65, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6f,
	0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x53, 0x70, 0x61, 0x72, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x06, 0x73, 0x70, 0x61, 0x72, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0d, 0x72, 0x65, 0x72, 0x61, 0x6e,
	0x6b, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x52, 0x65, 0x72, 0x61, 0x6e, 0x6b, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x52, 0x0c, 0x72, 0x65, 0x72, 0x61, 0x6e, 0x6b, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x32, 0x0a, 0x14, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x53, 0x70, 0x61,
	0x72, 0x73, 0x65, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x14, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x53, 0x70, 0x61, 0x72, 0x73, 0x65, 0x56,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x22, 0xa0, 0x01, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x43, 0x6f, 0x6e, 0x64, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x28,
	0x0a, 0x0f, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x6e,
	0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x48, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x78, 0x70, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x65, 0x78, 0x70, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x22, 0x37, 0x0a, 0x0d, 0x52, 0x6f, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x42, 0x69, 0x6e,
	0x61, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xe8, 0x01, 0x0a, 0x0e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x12, 0x2d, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x4b, 0x0a, 0x14, 0x65, 0x6d, 0x62,
	0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e,
	0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x45, 0x78, 0x74, 0x72, 0x61, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x12, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x45, 0x78, 0x74,
	0x72, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x56, 0x0a, 0x0f, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x64, 0x62, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x64, 0x62, 0x54, 0x79, 0x70, 0x65, 0x22, 0x9d,
	0x02, 0x0a, 0x10, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x61, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x35, 0x0a, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x1a, 0x4c, 0x0a, 0x09, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x29, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x13,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x59, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x6b, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0d, 0x6b, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xc6,
	0x02, 0x0a, 0x18, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x58, 0x0a, 0x0d, 0x76, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32,
	0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x56, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0d, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65,
	0x73, 0x12, 0x3e, 0x0a, 0x0c, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x75, 0x6c, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e,
	0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x0c, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x75, 0x6c, 0x65,
	0x73, 0x1a, 0x54, 0x0a, 0x12, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61,
	0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x5d, 0x0a, 0x19, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x79, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x22, 0x88, 0x02, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x07, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e,
	0x41, 0x64, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x10, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x78, 0x69, 0x73, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x1a, 0x4e, 0x0a, 0x0c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x54, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x22, 0xb9, 0x01, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x69,
	0x6c, 0x65, 0x67, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6f, 0x6c,
	0x61, 0x6d, 0x61, 0x2e, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x52, 0x0a, 0x70,
	0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x22, 0x41, 0x0a, 0x09, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x44, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x57, 0x0a, 0x13,
	0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x22, 0x5d, 0x0a, 0x15, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x69,
	0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x12, 0x30, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x50,
	0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c,
	0x65, 0x67, 0x65, 0x73, 0x22, 0x5a, 0x0a, 0x16, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x69, 0x76,
	0x69, 0x6c, 0x65, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x22, 0x11, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x77, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1a, 0x0a,
	0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x21, 0x0a, 0x05, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x22, 0x29, 0x0a, 0x13,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x79, 0x0a, 0x14, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x12, 0x1f, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x2a, 0x73, 0x0a, 0x0e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x48, 0x41, 0x52, 0x44, 0x5f, 0x49, 0x4e,
	0x44, 0x45, 0x58, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x59, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x53,
	0x48, 0x41, 0x52, 0x44, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x54, 0x52, 0x41, 0x49, 0x4e,
	0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x48, 0x41, 0x52, 0x44, 0x5f, 0x49,
	0x4e, 0x44, 0x45, 0x58, 0x5f, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12,
	0x16, 0x0a, 0x12, 0x53, 0x48, 0x41, 0x52, 0x44, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x46,
	0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x2a, 0x20, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x41, 0x53, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a,
	0x06, 0x41, 0x49, 0x5f, 0x44, 0x4f, 0x43, 0x10, 0x01, 0x2a, 0x79, 0x0a, 0x0f, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x1a,
	0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x4d, 0x45, 0x54, 0x52, 0x49, 0x43, 0x5f, 0x49, 0x4e, 0x4e,
	0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f,
	0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x4d, 0x45, 0x54, 0x52, 0x49, 0x43, 0x5f, 0x4c, 0x32, 0x10,
	0x01, 0x12, 0x17, 0x0a, 0x13, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x4d, 0x45, 0x54, 0x52, 0x49,
	0x43, 0x5f, 0x43, 0x4f, 0x53, 0x49, 0x4e, 0x45, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x49, 0x4e,
	0x44, 0x45, 0x58, 0x5f, 0x4d, 0x45, 0x54, 0x52, 0x49, 0x43, 0x5f, 0x48, 0x41, 0x4d, 0x4d, 0x49,
	0x4e, 0x47, 0x10, 0x03, 0x2a, 0x57, 0x0a, 0x0f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x45, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x4e, 0x47, 0x49, 0x4e,
	0x45, 0x5f, 0x46, 0x41, 0x49, 0x53, 0x53, 0x5f, 0x56, 0x45, 0x43, 0x54, 0x4f, 0x52, 0x10, 0x00,
	0x12, 0x17, 0x0a, 0x13, 0x45, 0x4e, 0x47, 0x49, 0x4e, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x53, 0x53,
	0x5f, 0x42, 0x49, 0x4e, 0x41, 0x52, 0x59, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x4e, 0x47,
	0x49, 0x4e, 0x45, 0x5f, 0x48, 0x4e, 0x53, 0x57, 0x4c, 0x49, 0x42, 0x10, 0x03, 0x2a, 0x3d, 0x0a,
	0x09, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x41, 0x52, 0x52, 0x41, 0x59, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x55, 0x49, 0x4e, 0x54, 0x36, 0x34, 0x10, 0x02, 0x2a, 0x2b, 0x0a, 0x10,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x17, 0x0a, 0x13, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x32, 0x9c, 0x10, 0x0a, 0x0c, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x12, 0x3e, 0x0a, 0x08, 0x73, 0x65,
	0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x16, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x41,
	0x64, 0x64, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
	0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x69,
	0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x08, 0x67, 0x65,
	0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x16, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17,
	0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x19, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1a, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x6c, 0x69, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a,
	0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1e, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0e, 0x64, 0x72, 0x6f, 0x70, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x44, 0x72, 0x6f,
	0x70, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x44, 0x72, 0x6f, 0x70, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x59, 0x0a, 0x12, 0x74, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e,
	0x54, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6f, 0x6c, 0x61, 0x6d,
	0x61, 0x2e, 0x54, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x12,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x20, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0f, 0x6c, 0x69, 0x73, 0x74, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1d, 0x2e, 0x6f, 0x6c, 0x61,
	0x6d, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6f, 0x6c, 0x61, 0x6d,
	0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0c, 0x72, 0x65, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1a, 0x2e, 0x6f, 0x6c, 0x61, 0x6d,
	0x61, 0x2e, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x52, 0x65,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x35, 0x0a, 0x06, 0x75, 0x70, 0x73, 0x65, 0x72, 0x74, 0x12, 0x14, 0x2e, 0x6f,
	0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x15, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x06, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x14, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x6f, 0x6c, 0x61, 0x6d,
	0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x32, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x13, 0x2e, 0x6f, 0x6c, 0x61, 0x6d,
	0x61, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14,
	0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x14,
	0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0d, 0x68,
	0x79, 0x62, 0x72, 0x69, 0x64, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x14, 0x2e, 0x6f,
	0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x15, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x6b, 0x65, 0x79,
	0x77, 0x6f, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x14, 0x2e, 0x6f, 0x6c,
	0x61, 0x6d, 0x61, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x15, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x65, 0x6c, 0x65,
	0x12, 0x14, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x13, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6f, 0x6c,
	0x61, 0x6d, 0x61, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x41, 0x0a, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x12, 0x16, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6f, 0x6c,
	0x61, 0x6d, 0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0c, 0x64, 0x72, 0x6f, 0x70, 0x44, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x12, 0x16, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6f,
	0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0d, 0x6c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17,
	0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x19, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1a, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a,
	0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x12, 0x19, 0x2e, 0x6f, 0x6c, 0x61,
	0x6d, 0x61, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4d, 0x0a, 0x14, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x19, 0x2e, 0x6f, 0x6c, 0x61, 0x6d,
	0x61, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x49, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x12, 0x1c,
	0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x69, 0x76, 0x69,
	0x6c, 0x65, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6f,
	0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65,
	0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0b, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x12, 0x1c, 0x2e, 0x6f, 0x6c, 0x61,
	0x6d, 0x61, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6f,
	0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x1a, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x42, 0x0a, 0x0b, 0x67, 0x65, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18,
	0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61,
	0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x16, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e,
	0x41, 0x64, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x56, 0x0a, 0x11, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1f, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x79, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x79, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0c, 0x5a, 0x07, 0x2e, 0x3b, 0x6f, 0x6c,
	0x61, 0x6d, 0x61, 0x80, 0x01, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_olama_proto_rawDescOnce sync.Once
	file_olama_proto_rawDescData = file_olama_proto_rawDesc
)

func file_olama_proto_rawDescGZIP() []byte {
	file_olama_proto_rawDescOnce.Do(func() {
		file_olama_proto_rawDescData = protoimpl.X.CompressGZIP(file_olama_proto_rawDescData)
	})
	return file_olama_proto_rawDescData
}

var file_olama_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_olama_proto_msgTypes = make([]protoimpl.MessageInfo, 88)
var file_olama_proto_goTypes = []interface{}{
	(ShardDataState)(0),                // 0: olama.ShardDataState
	(DataType)(0),                      // 1: olama.DataType
	(IndexMetricType)(0),               // 2: olama.IndexMetricType
	(IndexEngineType)(0),               // 3: olama.IndexEngineType
	(FieldType)(0),                     // 4: olama.FieldType
	(FieldElementType)(0),              // 5: olama.FieldElementType
	(*Document)(nil),                   // 6: olama.Document
	(*Field)(nil),                      // 7: olama.Field
	(*SparseVecItem)(nil),              // 8: olama.SparseVecItem
	(*ShardState)(nil),                 // 9: olama.ShardState
	(*Shard)(nil),                      // 10: olama.Shard
	(*AliasItem)(nil),                  // 11: olama.AliasItem
	(*DatabaseItem)(nil),               // 12: olama.DatabaseItem
	(*EmbeddingParams)(nil),            // 13: olama.EmbeddingParams
	(*CollectionConf)(nil),             // 14: olama.CollectionConf
	(*FieldMeta)(nil),                  // 15: olama.FieldMeta
	(*ShardConf)(nil),                  // 16: olama.ShardConf
	(*TTLConfig)(nil),                  // 17: olama.TTLConfig
	(*ShardCollectionState)(nil),       // 18: olama.ShardCollectionState
	(*CollectionState)(nil),            // 19: olama.CollectionState
	(*AddAliasRequest)(nil),            // 20: olama.AddAliasRequest
	(*RemoveAliasRequest)(nil),         // 21: olama.RemoveAliasRequest
	(*UpdateAliasResponse)(nil),        // 22: olama.UpdateAliasResponse
	(*GetAliasRequest)(nil),            // 23: olama.GetAliasRequest
	(*GetAliasResponse)(nil),           // 24: olama.GetAliasResponse
	(*DescribeCollectionRequest)(nil),  // 25: olama.DescribeCollectionRequest
	(*DescribeCollectionResponse)(nil), // 26: olama.DescribeCollectionResponse
	(*ListCollectionsRequest)(nil),     // 27: olama.ListCollectionsRequest
	(*ListCollectionsResponse)(nil),    // 28: olama.ListCollectionsResponse
	(*IndexParams)(nil),                // 29: olama.IndexParams
	(*IndexColumn)(nil),                // 30: olama.IndexColumn
	(*IndexStatus)(nil),                // 31: olama.indexStatus
	(*FilterIndexConfig)(nil),          // 32: olama.FilterIndexConfig
	(*CreateCollectionRequest)(nil),    // 33: olama.CreateCollectionRequest
	(*CreateCollectionResponse)(nil),   // 34: olama.CreateCollectionResponse
	(*DropCollectionRequest)(nil),      // 35: olama.DropCollectionRequest
	(*DropCollectionResponse)(nil),     // 36: olama.DropCollectionResponse
	(*TruncateCollectionRequest)(nil),  // 37: olama.TruncateCollectionRequest
	(*TruncateCollectionResponse)(nil), // 38: olama.TruncateCollectionResponse
	(*RebuildIndexRequest)(nil),        // 39: olama.RebuildIndexRequest
	(*RebuildIndexResponse)(nil),       // 40: olama.RebuildIndexResponse
	(*UpsertRequest)(nil),              // 41: olama.UpsertRequest
	(*EmbeddingExtraInfo)(nil),         // 42: olama.EmbeddingExtraInfo
	(*UpsertResponse)(nil),             // 43: olama.UpsertResponse
	(*UpdateRequest)(nil),              // 44: olama.UpdateRequest
	(*UpdateResponse)(nil),             // 45: olama.UpdateResponse
	(*DeleteRequest)(nil),              // 46: olama.DeleteRequest
	(*DeleteResponse)(nil),             // 47: olama.DeleteResponse
	(*OrderRule)(nil),                  // 48: olama.OrderRule
	(*QueryCond)(nil),                  // 49: olama.QueryCond
	(*QueryRequest)(nil),               // 50: olama.QueryRequest
	(*QueryResponse)(nil),              // 51: olama.QueryResponse
	(*CountRequest)(nil),               // 52: olama.CountRequest
	(*CountResponse)(nil),              // 53: olama.CountResponse
	(*SearchResult)(nil),               // 54: olama.SearchResult
	(*SearchParams)(nil),               // 55: olama.SearchParams
	(*VectorArray)(nil),                // 56: olama.VectorArray
	(*AnnData)(nil),                    // 57: olama.AnnData
	(*SparseVectorArray)(nil),          // 58: olama.SparseVectorArray
	(*SparseSearchParams)(nil),         // 59: olama.SparseSearchParams
	(*SparseData)(nil),                 // 60: olama.SparseData
	(*RerankParams)(nil),               // 61: olama.RerankParams
	(*SearchCond)(nil),                 // 62: olama.SearchCond
	(*SearchRequest)(nil),              // 63: olama.SearchRequest
	(*Filter)(nil),                     // 64: olama.Filter
	(*RoaringBinary)(nil),              // 65: olama.RoaringBinary
	(*SearchResponse)(nil),             // 66: olama.SearchResponse
	(*DatabaseRequest)(nil),            // 67: olama.DatabaseRequest
	(*DatabaseResponse)(nil),           // 68: olama.DatabaseResponse
	(*GetVersionRequest)(nil),          // 69: olama.GetVersionRequest
	(*GetVersionResponse)(nil),         // 70: olama.GetVersionResponse
	(*ModifyVectorIndexRequest)(nil),   // 71: olama.ModifyVectorIndexRequest
	(*ModifyVectorIndexResponse)(nil),  // 72: olama.ModifyVectorIndexResponse
	(*AddIndexRequest)(nil),            // 73: olama.AddIndexRequest
	(*AddIndexResponse)(nil),           // 74: olama.AddIndexResponse
	(*User)(nil),                       // 75: olama.User
	(*Privilege)(nil),                  // 76: olama.Privilege
	(*UserAccountRequest)(nil),         // 77: olama.UserAccountRequest
	(*UserAccountResponse)(nil),        // 78: olama.UserAccountResponse
	(*UserPrivilegesRequest)(nil),      // 79: olama.UserPrivilegesRequest
	(*UserPrivilegesResponse)(nil),     // 80: olama.UserPrivilegesResponse
	(*UserListRequest)(nil),            // 81: olama.UserListRequest
	(*UserListResponse)(nil),           // 82: olama.UserListResponse
	(*UserDescribeRequest)(nil),        // 83: olama.UserDescribeRequest
	(*UserDescribeResponse)(nil),       // 84: olama.UserDescribeResponse
	nil,                                // 85: olama.Document.FieldsEntry
	(*Field_StringArray)(nil),          // 86: olama.Field.StringArray
	nil,                                // 87: olama.CollectionConf.FieldMetasEntry
	nil,                                // 88: olama.CollectionConf.OptionsEntry
	nil,                                // 89: olama.CreateCollectionRequest.IndexesEntry
	nil,                                // 90: olama.RerankParams.WeightsEntry
	nil,                                // 91: olama.DatabaseResponse.InfoEntry
	nil,                                // 92: olama.ModifyVectorIndexRequest.VectorIndexesEntry
	nil,                                // 93: olama.AddIndexRequest.IndexesEntry
}
var file_olama_proto_depIdxs = []int32{
	85,  // 0: olama.Document.fields:type_name -> olama.Document.FieldsEntry
	8,   // 1: olama.Document.sparse_vector:type_name -> olama.SparseVecItem
	86,  // 2: olama.Field.val_str_arr:type_name -> olama.Field.StringArray
	0,   // 3: olama.ShardState.data_state:type_name -> olama.ShardDataState
	9,   // 4: olama.Shard.state:type_name -> olama.ShardState
	1,   // 5: olama.DatabaseItem.db_type:type_name -> olama.DataType
	2,   // 6: olama.CollectionConf.metric:type_name -> olama.IndexMetricType
	3,   // 7: olama.CollectionConf.engine:type_name -> olama.IndexEngineType
	87,  // 8: olama.CollectionConf.field_metas:type_name -> olama.CollectionConf.FieldMetasEntry
	88,  // 9: olama.CollectionConf.options:type_name -> olama.CollectionConf.OptionsEntry
	13,  // 10: olama.CollectionConf.embedding_params:type_name -> olama.EmbeddingParams
	1,   // 11: olama.CollectionConf.data_type:type_name -> olama.DataType
	17,  // 12: olama.CollectionConf.ttlConfig:type_name -> olama.TTLConfig
	4,   // 13: olama.FieldMeta.field_type:type_name -> olama.FieldType
	5,   // 14: olama.FieldMeta.field_element_type:type_name -> olama.FieldElementType
	14,  // 15: olama.ShardConf.conf:type_name -> olama.CollectionConf
	10,  // 16: olama.ShardCollectionState.shards:type_name -> olama.Shard
	14,  // 17: olama.CollectionState.conf:type_name -> olama.CollectionConf
	18,  // 18: olama.CollectionState.shards:type_name -> olama.ShardCollectionState
	33,  // 19: olama.CollectionState.req:type_name -> olama.CreateCollectionRequest
	0,   // 20: olama.CollectionState.index_state:type_name -> olama.ShardDataState
	11,  // 21: olama.GetAliasResponse.aliases:type_name -> olama.AliasItem
	33,  // 22: olama.DescribeCollectionResponse.collection:type_name -> olama.CreateCollectionRequest
	19,  // 23: olama.DescribeCollectionResponse.state:type_name -> olama.CollectionState
	33,  // 24: olama.ListCollectionsResponse.collections:type_name -> olama.CreateCollectionRequest
	19,  // 25: olama.ListCollectionsResponse.states:type_name -> olama.CollectionState
	29,  // 26: olama.IndexColumn.params:type_name -> olama.IndexParams
	89,  // 27: olama.CreateCollectionRequest.indexes:type_name -> olama.CreateCollectionRequest.IndexesEntry
	31,  // 28: olama.CreateCollectionRequest.indexStatus:type_name -> olama.indexStatus
	13,  // 29: olama.CreateCollectionRequest.embeddingParams:type_name -> olama.EmbeddingParams
	17,  // 30: olama.CreateCollectionRequest.ttlConfig:type_name -> olama.TTLConfig
	32,  // 31: olama.CreateCollectionRequest.filterIndexConfig:type_name -> olama.FilterIndexConfig
	6,   // 32: olama.UpsertRequest.documents:type_name -> olama.Document
	42,  // 33: olama.UpsertResponse.embedding_extra_info:type_name -> olama.EmbeddingExtraInfo
	49,  // 34: olama.UpdateRequest.query:type_name -> olama.QueryCond
	6,   // 35: olama.UpdateRequest.update:type_name -> olama.Document
	42,  // 36: olama.UpdateResponse.embedding_extra_info:type_name -> olama.EmbeddingExtraInfo
	49,  // 37: olama.DeleteRequest.query:type_name -> olama.QueryCond
	48,  // 38: olama.QueryCond.sort:type_name -> olama.OrderRule
	49,  // 39: olama.QueryRequest.query:type_name -> olama.QueryCond
	6,   // 40: olama.QueryResponse.documents:type_name -> olama.Document
	49,  // 41: olama.CountRequest.query:type_name -> olama.QueryCond
	6,   // 42: olama.SearchResult.documents:type_name -> olama.Document
	56,  // 43: olama.AnnData.data:type_name -> olama.VectorArray
	55,  // 44: olama.AnnData.params:type_name -> olama.SearchParams
	8,   // 45: olama.SparseVectorArray.sp_vector:type_name -> olama.SparseVecItem
	58,  // 46: olama.SparseData.data:type_name -> olama.SparseVectorArray
	59,  // 47: olama.SparseData.params:type_name -> olama.SparseSearchParams
	90,  // 48: olama.RerankParams.weights:type_name -> olama.RerankParams.WeightsEntry
	56,  // 49: olama.SearchCond.vectors:type_name -> olama.VectorArray
	55,  // 50: olama.SearchCond.params:type_name -> olama.SearchParams
	57,  // 51: olama.SearchCond.ann:type_name -> olama.AnnData
	60,  // 52: olama.SearchCond.sparse:type_name -> olama.SparseData
	61,  // 53: olama.SearchCond.rerank_params:type_name -> olama.RerankParams
	62,  // 54: olama.SearchRequest.search:type_name -> olama.SearchCond
	54,  // 55: olama.SearchResponse.results:type_name -> olama.SearchResult
	42,  // 56: olama.SearchResponse.embedding_extra_info:type_name -> olama.EmbeddingExtraInfo
	1,   // 57: olama.DatabaseRequest.dbType:type_name -> olama.DataType
	91,  // 58: olama.DatabaseResponse.info:type_name -> olama.DatabaseResponse.InfoEntry
	92,  // 59: olama.ModifyVectorIndexRequest.vectorIndexes:type_name -> olama.ModifyVectorIndexRequest.VectorIndexesEntry
	39,  // 60: olama.ModifyVectorIndexRequest.rebuildRules:type_name -> olama.RebuildIndexRequest
	93,  // 61: olama.AddIndexRequest.indexes:type_name -> olama.AddIndexRequest.IndexesEntry
	76,  // 62: olama.User.privileges:type_name -> olama.Privilege
	76,  // 63: olama.UserPrivilegesRequest.privileges:type_name -> olama.Privilege
	75,  // 64: olama.UserListResponse.users:type_name -> olama.User
	75,  // 65: olama.UserDescribeResponse.user:type_name -> olama.User
	7,   // 66: olama.Document.FieldsEntry.value:type_name -> olama.Field
	15,  // 67: olama.CollectionConf.FieldMetasEntry.value:type_name -> olama.FieldMeta
	30,  // 68: olama.CreateCollectionRequest.IndexesEntry.value:type_name -> olama.IndexColumn
	12,  // 69: olama.DatabaseResponse.InfoEntry.value:type_name -> olama.DatabaseItem
	30,  // 70: olama.ModifyVectorIndexRequest.VectorIndexesEntry.value:type_name -> olama.IndexColumn
	30,  // 71: olama.AddIndexRequest.IndexesEntry.value:type_name -> olama.IndexColumn
	20,  // 72: olama.SearchEngine.setAlias:input_type -> olama.AddAliasRequest
	23,  // 73: olama.SearchEngine.getAlias:input_type -> olama.GetAliasRequest
	21,  // 74: olama.SearchEngine.deleteAlias:input_type -> olama.RemoveAliasRequest
	33,  // 75: olama.SearchEngine.createCollection:input_type -> olama.CreateCollectionRequest
	35,  // 76: olama.SearchEngine.dropCollection:input_type -> olama.DropCollectionRequest
	37,  // 77: olama.SearchEngine.truncateCollection:input_type -> olama.TruncateCollectionRequest
	25,  // 78: olama.SearchEngine.describeCollection:input_type -> olama.DescribeCollectionRequest
	27,  // 79: olama.SearchEngine.listCollections:input_type -> olama.ListCollectionsRequest
	39,  // 80: olama.SearchEngine.rebuildIndex:input_type -> olama.RebuildIndexRequest
	41,  // 81: olama.SearchEngine.upsert:input_type -> olama.UpsertRequest
	44,  // 82: olama.SearchEngine.update:input_type -> olama.UpdateRequest
	50,  // 83: olama.SearchEngine.query:input_type -> olama.QueryRequest
	63,  // 84: olama.SearchEngine.search:input_type -> olama.SearchRequest
	63,  // 85: olama.SearchEngine.hybrid_search:input_type -> olama.SearchRequest
	63,  // 86: olama.SearchEngine.keyword_search:input_type -> olama.SearchRequest
	46,  // 87: olama.SearchEngine.dele:input_type -> olama.DeleteRequest
	52,  // 88: olama.SearchEngine.count:input_type -> olama.CountRequest
	67,  // 89: olama.SearchEngine.createDatabase:input_type -> olama.DatabaseRequest
	67,  // 90: olama.SearchEngine.dropDatabase:input_type -> olama.DatabaseRequest
	67,  // 91: olama.SearchEngine.listDatabases:input_type -> olama.DatabaseRequest
	77,  // 92: olama.SearchEngine.user_create:input_type -> olama.UserAccountRequest
	77,  // 93: olama.SearchEngine.user_drop:input_type -> olama.UserAccountRequest
	77,  // 94: olama.SearchEngine.user_change_password:input_type -> olama.UserAccountRequest
	79,  // 95: olama.SearchEngine.user_grant:input_type -> olama.UserPrivilegesRequest
	79,  // 96: olama.SearchEngine.user_revoke:input_type -> olama.UserPrivilegesRequest
	81,  // 97: olama.SearchEngine.user_list:input_type -> olama.UserListRequest
	83,  // 98: olama.SearchEngine.user_describe:input_type -> olama.UserDescribeRequest
	69,  // 99: olama.SearchEngine.get_version:input_type -> olama.GetVersionRequest
	73,  // 100: olama.SearchEngine.addIndex:input_type -> olama.AddIndexRequest
	71,  // 101: olama.SearchEngine.modifyVectorIndex:input_type -> olama.ModifyVectorIndexRequest
	22,  // 102: olama.SearchEngine.setAlias:output_type -> olama.UpdateAliasResponse
	24,  // 103: olama.SearchEngine.getAlias:output_type -> olama.GetAliasResponse
	22,  // 104: olama.SearchEngine.deleteAlias:output_type -> olama.UpdateAliasResponse
	34,  // 105: olama.SearchEngine.createCollection:output_type -> olama.CreateCollectionResponse
	36,  // 106: olama.SearchEngine.dropCollection:output_type -> olama.DropCollectionResponse
	38,  // 107: olama.SearchEngine.truncateCollection:output_type -> olama.TruncateCollectionResponse
	26,  // 108: olama.SearchEngine.describeCollection:output_type -> olama.DescribeCollectionResponse
	28,  // 109: olama.SearchEngine.listCollections:output_type -> olama.ListCollectionsResponse
	40,  // 110: olama.SearchEngine.rebuildIndex:output_type -> olama.RebuildIndexResponse
	43,  // 111: olama.SearchEngine.upsert:output_type -> olama.UpsertResponse
	45,  // 112: olama.SearchEngine.update:output_type -> olama.UpdateResponse
	51,  // 113: olama.SearchEngine.query:output_type -> olama.QueryResponse
	66,  // 114: olama.SearchEngine.search:output_type -> olama.SearchResponse
	66,  // 115: olama.SearchEngine.hybrid_search:output_type -> olama.SearchResponse
	66,  // 116: olama.SearchEngine.keyword_search:output_type -> olama.SearchResponse
	47,  // 117: olama.SearchEngine.dele:output_type -> olama.DeleteResponse
	53,  // 118: olama.SearchEngine.count:output_type -> olama.CountResponse
	68,  // 119: olama.SearchEngine.createDatabase:output_type -> olama.DatabaseResponse
	68,  // 120: olama.SearchEngine.dropDatabase:output_type -> olama.DatabaseResponse
	68,  // 121: olama.SearchEngine.listDatabases:output_type -> olama.DatabaseResponse
	78,  // 122: olama.SearchEngine.user_create:output_type -> olama.UserAccountResponse
	78,  // 123: olama.SearchEngine.user_drop:output_type -> olama.UserAccountResponse
	78,  // 124: olama.SearchEngine.user_change_password:output_type -> olama.UserAccountResponse
	80,  // 125: olama.SearchEngine.user_grant:output_type -> olama.UserPrivilegesResponse
	80,  // 126: olama.SearchEngine.user_revoke:output_type -> olama.UserPrivilegesResponse
	82,  // 127: olama.SearchEngine.user_list:output_type -> olama.UserListResponse
	84,  // 128: olama.SearchEngine.user_describe:output_type -> olama.UserDescribeResponse
	70,  // 129: olama.SearchEngine.get_version:output_type -> olama.GetVersionResponse
	74,  // 130: olama.SearchEngine.addIndex:output_type -> olama.AddIndexResponse
	72,  // 131: olama.SearchEngine.modifyVectorIndex:output_type -> olama.ModifyVectorIndexResponse
	102, // [102:132] is the sub-list for method output_type
	72,  // [72:102] is the sub-list for method input_type
	72,  // [72:72] is the sub-list for extension type_name
	72,  // [72:72] is the sub-list for extension extendee
	0,   // [0:72] is the sub-list for field type_name
}

func init() { file_olama_proto_init() }
func file_olama_proto_init() {
	if File_olama_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_olama_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Document); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Field); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SparseVecItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShardState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Shard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AliasItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatabaseItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmbeddingParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectionConf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShardConf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TTLConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShardCollectionState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectionState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAliasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveAliasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAliasResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAliasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAliasResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeCollectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeCollectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCollectionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCollectionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexColumn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterIndexConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCollectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCollectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropCollectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropCollectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TruncateCollectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TruncateCollectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RebuildIndexRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RebuildIndexResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmbeddingExtraInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCond); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VectorArray); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnnData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SparseVectorArray); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SparseSearchParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SparseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RerankParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchCond); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoaringBinary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatabaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatabaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyVectorIndexRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyVectorIndexResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddIndexRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddIndexResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Privilege); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPrivilegesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPrivilegesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDescribeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDescribeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Field_StringArray); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_olama_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*Field_ValStr)(nil),
		(*Field_ValU64)(nil),
		(*Field_ValDouble)(nil),
		(*Field_ValStrArr)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_olama_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   88,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_olama_proto_goTypes,
		DependencyIndexes: file_olama_proto_depIdxs,
		EnumInfos:         file_olama_proto_enumTypes,
		MessageInfos:      file_olama_proto_msgTypes,
	}.Build()
	File_olama_proto = out.File
	file_olama_proto_rawDesc = nil
	file_olama_proto_goTypes = nil
	file_olama_proto_depIdxs = nil
}
