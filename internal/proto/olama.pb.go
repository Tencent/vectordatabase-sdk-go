// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: olama.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "git.woa.com/cloud_nosql/vectordb/vectordatabase-sdk-go/internal/proto/json2pb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 错误码
type MessageCode int32

const (
	MessageCode_MSG_CODE_SUCCESS MessageCode = 0 // 成功
	MessageCode_MSG_CODE_FAILED  MessageCode = 1 // 失败
)

// Enum value maps for MessageCode.
var (
	MessageCode_name = map[int32]string{
		0: "MSG_CODE_SUCCESS",
		1: "MSG_CODE_FAILED",
	}
	MessageCode_value = map[string]int32{
		"MSG_CODE_SUCCESS": 0,
		"MSG_CODE_FAILED":  1,
	}
)

func (x MessageCode) Enum() *MessageCode {
	p := new(MessageCode)
	*p = x
	return p
}

func (x MessageCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageCode) Descriptor() protoreflect.EnumDescriptor {
	return file_olama_proto_enumTypes[0].Descriptor()
}

func (MessageCode) Type() protoreflect.EnumType {
	return &file_olama_proto_enumTypes[0]
}

func (x MessageCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageCode.Descriptor instead.
func (MessageCode) EnumDescriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{0}
}

// work节点运行状态
type WorkRunState int32

const (
	WorkRunState_WORKER_UN_INIT WorkRunState = 0 // 初始值，未初始化
	WorkRunState_WORKER_BOOTING WorkRunState = 1 // 启动中
	WorkRunState_WORKER_RUNNING WorkRunState = 2 // 初始化成功
	WorkRunState_WORKER_STOP    WorkRunState = 3 // 服务停止，需要发送shut_down的心跳，停止线程
	WorkRunState_WORKER_STOPED  WorkRunState = 4 // 服务停止成功
)

// Enum value maps for WorkRunState.
var (
	WorkRunState_name = map[int32]string{
		0: "WORKER_UN_INIT",
		1: "WORKER_BOOTING",
		2: "WORKER_RUNNING",
		3: "WORKER_STOP",
		4: "WORKER_STOPED",
	}
	WorkRunState_value = map[string]int32{
		"WORKER_UN_INIT": 0,
		"WORKER_BOOTING": 1,
		"WORKER_RUNNING": 2,
		"WORKER_STOP":    3,
		"WORKER_STOPED":  4,
	}
)

func (x WorkRunState) Enum() *WorkRunState {
	p := new(WorkRunState)
	*p = x
	return p
}

func (x WorkRunState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WorkRunState) Descriptor() protoreflect.EnumDescriptor {
	return file_olama_proto_enumTypes[1].Descriptor()
}

func (WorkRunState) Type() protoreflect.EnumType {
	return &file_olama_proto_enumTypes[1]
}

func (x WorkRunState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WorkRunState.Descriptor instead.
func (WorkRunState) EnumDescriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{1}
}

// work节点服务状态
type WorkNodeState int32

const (
	WorkNodeState_WNODE_ACTIVE           WorkNodeState = 0 // 正常服务
	WorkNodeState_WNODE_TEMP_UNAVAILABLE WorkNodeState = 1 // 暂时失联，不提供服务
	WorkNodeState_WNODE_TIMEOUT          WorkNodeState = 2 // 长时间失联，不提供服务，在异常处理上和WNODE_TEMP_UNAVAILABLE没区别，但是上报的故障类型有差异
	WorkNodeState_WNODE_INACTIVE         WorkNodeState = 3 // 不能正常提供服务，进行删节点处理；
	WorkNodeState_WNODE_BOOTING          WorkNodeState = 4 // 重启中，不提供检索服务
)

// Enum value maps for WorkNodeState.
var (
	WorkNodeState_name = map[int32]string{
		0: "WNODE_ACTIVE",
		1: "WNODE_TEMP_UNAVAILABLE",
		2: "WNODE_TIMEOUT",
		3: "WNODE_INACTIVE",
		4: "WNODE_BOOTING",
	}
	WorkNodeState_value = map[string]int32{
		"WNODE_ACTIVE":           0,
		"WNODE_TEMP_UNAVAILABLE": 1,
		"WNODE_TIMEOUT":          2,
		"WNODE_INACTIVE":         3,
		"WNODE_BOOTING":          4,
	}
)

func (x WorkNodeState) Enum() *WorkNodeState {
	p := new(WorkNodeState)
	*p = x
	return p
}

func (x WorkNodeState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WorkNodeState) Descriptor() protoreflect.EnumDescriptor {
	return file_olama_proto_enumTypes[2].Descriptor()
}

func (WorkNodeState) Type() protoreflect.EnumType {
	return &file_olama_proto_enumTypes[2]
}

func (x WorkNodeState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WorkNodeState.Descriptor instead.
func (WorkNodeState) EnumDescriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{2}
}

type ShardDataState int32

const (
	ShardDataState_SHARD_INDEX_READY    ShardDataState = 0
	ShardDataState_SHARD_INDEX_TRAINING ShardDataState = 1
	ShardDataState_SHARD_INDEX_BUILDING ShardDataState = 2
	ShardDataState_SHARD_INDEX_FAILED   ShardDataState = 3
)

// Enum value maps for ShardDataState.
var (
	ShardDataState_name = map[int32]string{
		0: "SHARD_INDEX_READY",
		1: "SHARD_INDEX_TRAINING",
		2: "SHARD_INDEX_BUILDING",
		3: "SHARD_INDEX_FAILED",
	}
	ShardDataState_value = map[string]int32{
		"SHARD_INDEX_READY":    0,
		"SHARD_INDEX_TRAINING": 1,
		"SHARD_INDEX_BUILDING": 2,
		"SHARD_INDEX_FAILED":   3,
	}
)

func (x ShardDataState) Enum() *ShardDataState {
	p := new(ShardDataState)
	*p = x
	return p
}

func (x ShardDataState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ShardDataState) Descriptor() protoreflect.EnumDescriptor {
	return file_olama_proto_enumTypes[3].Descriptor()
}

func (ShardDataState) Type() protoreflect.EnumType {
	return &file_olama_proto_enumTypes[3]
}

func (x ShardDataState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ShardDataState.Descriptor instead.
func (ShardDataState) EnumDescriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{3}
}

// The cluster/collection health status is: green , yellow or red . On the shard
// level:
type HealthState int32

const (
	HealthState_HEALTH_GREEN  HealthState = 0 // all shards are allocated
	HealthState_HEALTH_YELLOW HealthState = 1 // the primary shard is allocated but replicas are not
	HealthState_HEALTH_RED    HealthState = 2 // the specific shard is not allocated in the cluster
)

// Enum value maps for HealthState.
var (
	HealthState_name = map[int32]string{
		0: "HEALTH_GREEN",
		1: "HEALTH_YELLOW",
		2: "HEALTH_RED",
	}
	HealthState_value = map[string]int32{
		"HEALTH_GREEN":  0,
		"HEALTH_YELLOW": 1,
		"HEALTH_RED":    2,
	}
)

func (x HealthState) Enum() *HealthState {
	p := new(HealthState)
	*p = x
	return p
}

func (x HealthState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HealthState) Descriptor() protoreflect.EnumDescriptor {
	return file_olama_proto_enumTypes[4].Descriptor()
}

func (HealthState) Type() protoreflect.EnumType {
	return &file_olama_proto_enumTypes[4]
}

func (x HealthState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HealthState.Descriptor instead.
func (HealthState) EnumDescriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{4}
}

type IndexMetricType int32

const (
	IndexMetricType_INDEX_METRIC_INNER_PRODUCT IndexMetricType = 0 // inner product distance
	IndexMetricType_INDEX_METRIC_L2            IndexMetricType = 1 // european distance
	IndexMetricType_INDEX_METRIC_COSINE        IndexMetricType = 2 // cosine distance
	IndexMetricType_INDEX_METRIC_HAMMING       IndexMetricType = 3 // hamming distance
)

// Enum value maps for IndexMetricType.
var (
	IndexMetricType_name = map[int32]string{
		0: "INDEX_METRIC_INNER_PRODUCT",
		1: "INDEX_METRIC_L2",
		2: "INDEX_METRIC_COSINE",
		3: "INDEX_METRIC_HAMMING",
	}
	IndexMetricType_value = map[string]int32{
		"INDEX_METRIC_INNER_PRODUCT": 0,
		"INDEX_METRIC_L2":            1,
		"INDEX_METRIC_COSINE":        2,
		"INDEX_METRIC_HAMMING":       3,
	}
)

func (x IndexMetricType) Enum() *IndexMetricType {
	p := new(IndexMetricType)
	*p = x
	return p
}

func (x IndexMetricType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IndexMetricType) Descriptor() protoreflect.EnumDescriptor {
	return file_olama_proto_enumTypes[5].Descriptor()
}

func (IndexMetricType) Type() protoreflect.EnumType {
	return &file_olama_proto_enumTypes[5]
}

func (x IndexMetricType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IndexMetricType.Descriptor instead.
func (IndexMetricType) EnumDescriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{5}
}

type IndexEngineType int32

const (
	IndexEngineType_ENGINE_FAISS_VECTOR IndexEngineType = 0
	IndexEngineType_ENGINE_FAISS_BINARY IndexEngineType = 1
	// ENGINE_FAISS_VIRTUAL = 2; // discarded
	IndexEngineType_ENGINE_HNSWLIB IndexEngineType = 3
)

// Enum value maps for IndexEngineType.
var (
	IndexEngineType_name = map[int32]string{
		0: "ENGINE_FAISS_VECTOR",
		1: "ENGINE_FAISS_BINARY",
		3: "ENGINE_HNSWLIB",
	}
	IndexEngineType_value = map[string]int32{
		"ENGINE_FAISS_VECTOR": 0,
		"ENGINE_FAISS_BINARY": 1,
		"ENGINE_HNSWLIB":      3,
	}
)

func (x IndexEngineType) Enum() *IndexEngineType {
	p := new(IndexEngineType)
	*p = x
	return p
}

func (x IndexEngineType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IndexEngineType) Descriptor() protoreflect.EnumDescriptor {
	return file_olama_proto_enumTypes[6].Descriptor()
}

func (IndexEngineType) Type() protoreflect.EnumType {
	return &file_olama_proto_enumTypes[6]
}

func (x IndexEngineType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IndexEngineType.Descriptor instead.
func (IndexEngineType) EnumDescriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{6}
}

type FieldType int32

const (
	FieldType_TYPE_STRING       FieldType = 0
	FieldType_TYPE_STRING_ARRAY FieldType = 1
	FieldType_TYPE_UINT64       FieldType = 2
)

// Enum value maps for FieldType.
var (
	FieldType_name = map[int32]string{
		0: "TYPE_STRING",
		1: "TYPE_STRING_ARRAY",
		2: "TYPE_UINT64",
	}
	FieldType_value = map[string]int32{
		"TYPE_STRING":       0,
		"TYPE_STRING_ARRAY": 1,
		"TYPE_UINT64":       2,
	}
)

func (x FieldType) Enum() *FieldType {
	p := new(FieldType)
	*p = x
	return p
}

func (x FieldType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FieldType) Descriptor() protoreflect.EnumDescriptor {
	return file_olama_proto_enumTypes[7].Descriptor()
}

func (FieldType) Type() protoreflect.EnumType {
	return &file_olama_proto_enumTypes[7]
}

func (x FieldType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FieldType.Descriptor instead.
func (FieldType) EnumDescriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{7}
}

type Document struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Vector       []float32         `protobuf:"fixed32,2,rep,packed,name=vector,proto3" json:"vector,omitempty"`
	Score        float32           `protobuf:"fixed32,3,opt,name=score,proto3" json:"score,omitempty"`
	Fields       map[string]*Field `protobuf:"bytes,4,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	IndexId      uint64            `protobuf:"varint,5,opt,name=index_id,json=indexId,proto3" json:"index_id,omitempty"`
	FromPeer     string            `protobuf:"bytes,6,opt,name=from_peer,json=fromPeer,proto3" json:"from_peer,omitempty"`
	ShardIdx     int32             `protobuf:"varint,7,opt,name=shard_idx,json=shardIdx,proto3" json:"shard_idx,omitempty"`
	VectorOffset uint64            `protobuf:"varint,8,opt,name=vector_offset,json=vectorOffset,proto3" json:"vector_offset,omitempty"`
	DocInfo      []byte            `protobuf:"bytes,9,opt,name=doc_info,json=docInfo,proto3" json:"doc_info,omitempty"`
}

func (x *Document) Reset() {
	*x = Document{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Document) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Document) ProtoMessage() {}

func (x *Document) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Document.ProtoReflect.Descriptor instead.
func (*Document) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{0}
}

func (x *Document) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Document) GetVector() []float32 {
	if x != nil {
		return x.Vector
	}
	return nil
}

func (x *Document) GetScore() float32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *Document) GetFields() map[string]*Field {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *Document) GetIndexId() uint64 {
	if x != nil {
		return x.IndexId
	}
	return 0
}

func (x *Document) GetFromPeer() string {
	if x != nil {
		return x.FromPeer
	}
	return ""
}

func (x *Document) GetShardIdx() int32 {
	if x != nil {
		return x.ShardIdx
	}
	return 0
}

func (x *Document) GetVectorOffset() uint64 {
	if x != nil {
		return x.VectorOffset
	}
	return 0
}

func (x *Document) GetDocInfo() []byte {
	if x != nil {
		return x.DocInfo
	}
	return nil
}

type Field struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to OneofVal:
	//	*Field_ValStr
	//	*Field_ValU64
	//	*Field_ValDouble
	OneofVal isField_OneofVal `protobuf_oneof:"oneof_val"`
}

func (x *Field) Reset() {
	*x = Field{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Field) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Field) ProtoMessage() {}

func (x *Field) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Field.ProtoReflect.Descriptor instead.
func (*Field) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{1}
}

func (m *Field) GetOneofVal() isField_OneofVal {
	if m != nil {
		return m.OneofVal
	}
	return nil
}

func (x *Field) GetValStr() string {
	if x, ok := x.GetOneofVal().(*Field_ValStr); ok {
		return x.ValStr
	}
	return ""
}

func (x *Field) GetValU64() uint64 {
	if x, ok := x.GetOneofVal().(*Field_ValU64); ok {
		return x.ValU64
	}
	return 0
}

func (x *Field) GetValDouble() float64 {
	if x, ok := x.GetOneofVal().(*Field_ValDouble); ok {
		return x.ValDouble
	}
	return 0
}

type isField_OneofVal interface {
	isField_OneofVal()
}

type Field_ValStr struct {
	ValStr string `protobuf:"bytes,1,opt,name=val_str,json=valStr,proto3,oneof"`
}

type Field_ValU64 struct {
	ValU64 uint64 `protobuf:"varint,2,opt,name=val_u64,json=valU64,proto3,oneof"`
}

type Field_ValDouble struct {
	ValDouble float64 `protobuf:"fixed64,3,opt,name=val_double,json=valDouble,proto3,oneof"`
}

func (*Field_ValStr) isField_OneofVal() {}

func (*Field_ValU64) isField_OneofVal() {}

func (*Field_ValDouble) isField_OneofVal() {}

type MasterNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerId   string `protobuf:"bytes,1,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	IsLeader bool   `protobuf:"varint,2,opt,name=is_leader,json=isLeader,proto3" json:"is_leader,omitempty"`
}

func (x *MasterNode) Reset() {
	*x = MasterNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MasterNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MasterNode) ProtoMessage() {}

func (x *MasterNode) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MasterNode.ProtoReflect.Descriptor instead.
func (*MasterNode) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{2}
}

func (x *MasterNode) GetPeerId() string {
	if x != nil {
		return x.PeerId
	}
	return ""
}

func (x *MasterNode) GetIsLeader() bool {
	if x != nil {
		return x.IsLeader
	}
	return false
}

type ShardState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataState            ShardDataState `protobuf:"varint,1,opt,name=data_state,json=dataState,proto3,enum=olama.ShardDataState" json:"data_state,omitempty"`
	EstimateIndexMemSize uint64         `protobuf:"varint,2,opt,name=estimate_index_mem_size,json=estimateIndexMemSize,proto3" json:"estimate_index_mem_size,omitempty"`
	Snapshoting          bool           `protobuf:"varint,3,opt,name=snapshoting,proto3" json:"snapshoting,omitempty"`
	LastAppliedIndex     int64          `protobuf:"varint,4,opt,name=last_applied_index,json=lastAppliedIndex,proto3" json:"last_applied_index,omitempty"`
	LastAppliedTerm      int64          `protobuf:"varint,5,opt,name=last_applied_term,json=lastAppliedTerm,proto3" json:"last_applied_term,omitempty"`
	IdSeed               int64          `protobuf:"varint,6,opt,name=id_seed,json=idSeed,proto3" json:"id_seed,omitempty"`
	AddedItems           uint64         `protobuf:"varint,7,opt,name=added_items,json=addedItems,proto3" json:"added_items,omitempty"`
	DataStateChangeTime  int64          `protobuf:"varint,8,opt,name=data_state_change_time,json=dataStateChangeTime,proto3" json:"data_state_change_time,omitempty"`
}

func (x *ShardState) Reset() {
	*x = ShardState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShardState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardState) ProtoMessage() {}

func (x *ShardState) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardState.ProtoReflect.Descriptor instead.
func (*ShardState) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{3}
}

func (x *ShardState) GetDataState() ShardDataState {
	if x != nil {
		return x.DataState
	}
	return ShardDataState_SHARD_INDEX_READY
}

func (x *ShardState) GetEstimateIndexMemSize() uint64 {
	if x != nil {
		return x.EstimateIndexMemSize
	}
	return 0
}

func (x *ShardState) GetSnapshoting() bool {
	if x != nil {
		return x.Snapshoting
	}
	return false
}

func (x *ShardState) GetLastAppliedIndex() int64 {
	if x != nil {
		return x.LastAppliedIndex
	}
	return 0
}

func (x *ShardState) GetLastAppliedTerm() int64 {
	if x != nil {
		return x.LastAppliedTerm
	}
	return 0
}

func (x *ShardState) GetIdSeed() int64 {
	if x != nil {
		return x.IdSeed
	}
	return 0
}

func (x *ShardState) GetAddedItems() uint64 {
	if x != nil {
		return x.AddedItems
	}
	return 0
}

func (x *ShardState) GetDataStateChangeTime() int64 {
	if x != nil {
		return x.DataStateChangeTime
	}
	return 0
}

type Shard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Collection string      `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	ShardIdx   int32       `protobuf:"varint,2,opt,name=shard_idx,json=shardIdx,proto3" json:"shard_idx,omitempty"`
	IsLeader   bool        `protobuf:"varint,3,opt,name=is_leader,json=isLeader,proto3" json:"is_leader,omitempty"`
	Following  bool        `protobuf:"varint,4,opt,name=following,proto3" json:"following,omitempty"`
	State      *ShardState `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`
	Nodes      []string    `protobuf:"bytes,6,rep,name=nodes,proto3" json:"nodes,omitempty"` // only leader shard contains all nodes id
	FromNode   string      `protobuf:"bytes,7,opt,name=from_node,json=fromNode,proto3" json:"from_node,omitempty"`
}

func (x *Shard) Reset() {
	*x = Shard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Shard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Shard) ProtoMessage() {}

func (x *Shard) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Shard.ProtoReflect.Descriptor instead.
func (*Shard) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{4}
}

func (x *Shard) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *Shard) GetShardIdx() int32 {
	if x != nil {
		return x.ShardIdx
	}
	return 0
}

func (x *Shard) GetIsLeader() bool {
	if x != nil {
		return x.IsLeader
	}
	return false
}

func (x *Shard) GetFollowing() bool {
	if x != nil {
		return x.Following
	}
	return false
}

func (x *Shard) GetState() *ShardState {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *Shard) GetNodes() []string {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *Shard) GetFromNode() string {
	if x != nil {
		return x.FromNode
	}
	return ""
}

type WorkNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerId       string        `protobuf:"bytes,1,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	LastActiveMs int64         `protobuf:"varint,2,opt,name=last_active_ms,json=lastActiveMs,proto3" json:"last_active_ms,omitempty"`
	LastStateMs  int64         `protobuf:"varint,3,opt,name=last_state_ms,json=lastStateMs,proto3" json:"last_state_ms,omitempty"`
	Shards       []*Shard      `protobuf:"bytes,4,rep,name=shards,proto3" json:"shards,omitempty"`
	State        WorkNodeState `protobuf:"varint,5,opt,name=state,proto3,enum=olama.WorkNodeState" json:"state,omitempty"`
	UsedRssSize  uint64        `protobuf:"varint,6,opt,name=used_rss_size,json=usedRssSize,proto3" json:"used_rss_size,omitempty"`
	SetName      string        `protobuf:"bytes,7,opt,name=set_name,json=setName,proto3" json:"set_name,omitempty"`
}

func (x *WorkNode) Reset() {
	*x = WorkNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkNode) ProtoMessage() {}

func (x *WorkNode) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkNode.ProtoReflect.Descriptor instead.
func (*WorkNode) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{5}
}

func (x *WorkNode) GetPeerId() string {
	if x != nil {
		return x.PeerId
	}
	return ""
}

func (x *WorkNode) GetLastActiveMs() int64 {
	if x != nil {
		return x.LastActiveMs
	}
	return 0
}

func (x *WorkNode) GetLastStateMs() int64 {
	if x != nil {
		return x.LastStateMs
	}
	return 0
}

func (x *WorkNode) GetShards() []*Shard {
	if x != nil {
		return x.Shards
	}
	return nil
}

func (x *WorkNode) GetState() WorkNodeState {
	if x != nil {
		return x.State
	}
	return WorkNodeState_WNODE_ACTIVE
}

func (x *WorkNode) GetUsedRssSize() uint64 {
	if x != nil {
		return x.UsedRssSize
	}
	return 0
}

func (x *WorkNode) GetSetName() string {
	if x != nil {
		return x.SetName
	}
	return ""
}

type ClusterState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdateMs int64                `protobuf:"varint,1,opt,name=update_ms,json=updateMs,proto3" json:"update_ms,omitempty"`
	Status   HealthState          `protobuf:"varint,2,opt,name=status,proto3,enum=olama.HealthState" json:"status,omitempty"`
	Nodes    map[string]*WorkNode `protobuf:"bytes,3,rep,name=nodes,proto3" json:"nodes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ClusterState) Reset() {
	*x = ClusterState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterState) ProtoMessage() {}

func (x *ClusterState) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterState.ProtoReflect.Descriptor instead.
func (*ClusterState) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{6}
}

func (x *ClusterState) GetUpdateMs() int64 {
	if x != nil {
		return x.UpdateMs
	}
	return 0
}

func (x *ClusterState) GetStatus() HealthState {
	if x != nil {
		return x.Status
	}
	return HealthState_HEALTH_GREEN
}

func (x *ClusterState) GetNodes() map[string]*WorkNode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type AliasItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alias      string `protobuf:"bytes,1,opt,name=alias,proto3" json:"alias,omitempty"`
	Collection string `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`
}

func (x *AliasItem) Reset() {
	*x = AliasItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AliasItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AliasItem) ProtoMessage() {}

func (x *AliasItem) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AliasItem.ProtoReflect.Descriptor instead.
func (*AliasItem) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{7}
}

func (x *AliasItem) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *AliasItem) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

type DatabaseItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateTime int64 `protobuf:"varint,1,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
}

func (x *DatabaseItem) Reset() {
	*x = DatabaseItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatabaseItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseItem) ProtoMessage() {}

func (x *DatabaseItem) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseItem.ProtoReflect.Descriptor instead.
func (*DatabaseItem) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{8}
}

func (x *DatabaseItem) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type ClusterSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aliases   []*AliasItem             `protobuf:"bytes,1,rep,name=aliases,proto3" json:"aliases,omitempty"`
	Databases map[string]*DatabaseItem `protobuf:"bytes,2,rep,name=databases,proto3" json:"databases,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ClusterSettings) Reset() {
	*x = ClusterSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterSettings) ProtoMessage() {}

func (x *ClusterSettings) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterSettings.ProtoReflect.Descriptor instead.
func (*ClusterSettings) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{9}
}

func (x *ClusterSettings) GetAliases() []*AliasItem {
	if x != nil {
		return x.Aliases
	}
	return nil
}

func (x *ClusterSettings) GetDatabases() map[string]*DatabaseItem {
	if x != nil {
		return x.Databases
	}
	return nil
}

type SnapshotRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeriodSecs  uint32 `protobuf:"varint,1,opt,name=period_secs,json=periodSecs,proto3" json:"period_secs,omitempty"`
	ChangedDocs uint32 `protobuf:"varint,2,opt,name=changed_docs,json=changedDocs,proto3" json:"changed_docs,omitempty"`
}

func (x *SnapshotRule) Reset() {
	*x = SnapshotRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapshotRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotRule) ProtoMessage() {}

func (x *SnapshotRule) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotRule.ProtoReflect.Descriptor instead.
func (*SnapshotRule) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{10}
}

func (x *SnapshotRule) GetPeriodSecs() uint32 {
	if x != nil {
		return x.PeriodSecs
	}
	return 0
}

func (x *SnapshotRule) GetChangedDocs() uint32 {
	if x != nil {
		return x.ChangedDocs
	}
	return 0
}

type EmbeddingParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TextField   string `protobuf:"bytes,1,opt,name=text_field,json=textField,proto3" json:"text_field,omitempty"`
	VectorField string `protobuf:"bytes,2,opt,name=vector_field,json=vectorField,proto3" json:"vector_field,omitempty"`
	Model       string `protobuf:"bytes,3,opt,name=model,proto3" json:"model,omitempty"`
	Status      string `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *EmbeddingParams) Reset() {
	*x = EmbeddingParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmbeddingParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmbeddingParams) ProtoMessage() {}

func (x *EmbeddingParams) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmbeddingParams.ProtoReflect.Descriptor instead.
func (*EmbeddingParams) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{11}
}

func (x *EmbeddingParams) GetTextField() string {
	if x != nil {
		return x.TextField
	}
	return ""
}

func (x *EmbeddingParams) GetVectorField() string {
	if x != nil {
		return x.VectorField
	}
	return ""
}

func (x *EmbeddingParams) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *EmbeddingParams) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type CollectionConf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database         string                `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Collection       string                `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`
	Description      string                `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	NumberOfShards   uint32                `protobuf:"varint,4,opt,name=number_of_shards,json=numberOfShards,proto3" json:"number_of_shards,omitempty"`
	NumberOfReplicas uint32                `protobuf:"varint,5,opt,name=number_of_replicas,json=numberOfReplicas,proto3" json:"number_of_replicas,omitempty"`
	Dimension        uint32                `protobuf:"varint,6,opt,name=dimension,proto3" json:"dimension,omitempty"`
	Metric           IndexMetricType       `protobuf:"varint,7,opt,name=metric,proto3,enum=olama.IndexMetricType" json:"metric,omitempty"`
	Nprobe           uint32                `protobuf:"varint,8,opt,name=nprobe,proto3" json:"nprobe,omitempty"`
	SnapshotRules    []*SnapshotRule       `protobuf:"bytes,9,rep,name=snapshot_rules,json=snapshotRules,proto3" json:"snapshot_rules,omitempty"`
	Engine           IndexEngineType       `protobuf:"varint,11,opt,name=engine,proto3,enum=olama.IndexEngineType" json:"engine,omitempty"`
	ModelDesc        string                `protobuf:"bytes,12,opt,name=model_desc,json=modelDesc,proto3" json:"model_desc,omitempty"`
	FieldMetas       map[string]*FieldMeta `protobuf:"bytes,15,rep,name=field_metas,json=fieldMetas,proto3" json:"field_metas,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // 存储Document中fields标签字段的元信息
	Options          map[string]string     `protobuf:"bytes,16,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`                         // 存储collection拓展选项
	Nlist            uint32                `protobuf:"varint,17,opt,name=nlist,proto3" json:"nlist,omitempty"`
	EmbeddingParams  *EmbeddingParams      `protobuf:"bytes,18,opt,name=embedding_params,json=embeddingParams,proto3" json:"embedding_params,omitempty"`
}

func (x *CollectionConf) Reset() {
	*x = CollectionConf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectionConf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionConf) ProtoMessage() {}

func (x *CollectionConf) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionConf.ProtoReflect.Descriptor instead.
func (*CollectionConf) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{12}
}

func (x *CollectionConf) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *CollectionConf) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *CollectionConf) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CollectionConf) GetNumberOfShards() uint32 {
	if x != nil {
		return x.NumberOfShards
	}
	return 0
}

func (x *CollectionConf) GetNumberOfReplicas() uint32 {
	if x != nil {
		return x.NumberOfReplicas
	}
	return 0
}

func (x *CollectionConf) GetDimension() uint32 {
	if x != nil {
		return x.Dimension
	}
	return 0
}

func (x *CollectionConf) GetMetric() IndexMetricType {
	if x != nil {
		return x.Metric
	}
	return IndexMetricType_INDEX_METRIC_INNER_PRODUCT
}

func (x *CollectionConf) GetNprobe() uint32 {
	if x != nil {
		return x.Nprobe
	}
	return 0
}

func (x *CollectionConf) GetSnapshotRules() []*SnapshotRule {
	if x != nil {
		return x.SnapshotRules
	}
	return nil
}

func (x *CollectionConf) GetEngine() IndexEngineType {
	if x != nil {
		return x.Engine
	}
	return IndexEngineType_ENGINE_FAISS_VECTOR
}

func (x *CollectionConf) GetModelDesc() string {
	if x != nil {
		return x.ModelDesc
	}
	return ""
}

func (x *CollectionConf) GetFieldMetas() map[string]*FieldMeta {
	if x != nil {
		return x.FieldMetas
	}
	return nil
}

func (x *CollectionConf) GetOptions() map[string]string {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *CollectionConf) GetNlist() uint32 {
	if x != nil {
		return x.Nlist
	}
	return 0
}

func (x *CollectionConf) GetEmbeddingParams() *EmbeddingParams {
	if x != nil {
		return x.EmbeddingParams
	}
	return nil
}

type FieldMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldType FieldType `protobuf:"varint,1,opt,name=field_type,json=fieldType,proto3,enum=olama.FieldType" json:"field_type,omitempty"`
}

func (x *FieldMeta) Reset() {
	*x = FieldMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldMeta) ProtoMessage() {}

func (x *FieldMeta) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldMeta.ProtoReflect.Descriptor instead.
func (*FieldMeta) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{13}
}

func (x *FieldMeta) GetFieldType() FieldType {
	if x != nil {
		return x.FieldType
	}
	return FieldType_TYPE_STRING
}

type ShardConf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Collection string          `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	ShardIdx   int32           `protobuf:"varint,2,opt,name=shard_idx,json=shardIdx,proto3" json:"shard_idx,omitempty"`
	Conf       *CollectionConf `protobuf:"bytes,3,opt,name=conf,proto3" json:"conf,omitempty"`
	Nodes      []string        `protobuf:"bytes,4,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *ShardConf) Reset() {
	*x = ShardConf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShardConf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardConf) ProtoMessage() {}

func (x *ShardConf) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardConf.ProtoReflect.Descriptor instead.
func (*ShardConf) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{14}
}

func (x *ShardConf) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *ShardConf) GetShardIdx() int32 {
	if x != nil {
		return x.ShardIdx
	}
	return 0
}

func (x *ShardConf) GetConf() *CollectionConf {
	if x != nil {
		return x.Conf
	}
	return nil
}

func (x *ShardConf) GetNodes() []string {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type ShardCollectionState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShardIdx        int32    `protobuf:"varint,1,opt,name=shard_idx,json=shardIdx,proto3" json:"shard_idx,omitempty"`
	Leader          string   `protobuf:"bytes,2,opt,name=leader,proto3" json:"leader,omitempty"`
	NodePeers       []string `protobuf:"bytes,3,rep,name=node_peers,json=nodePeers,proto3" json:"node_peers,omitempty"`
	AllocateStartMs int64    `protobuf:"varint,4,opt,name=allocate_start_ms,json=allocateStartMs,proto3" json:"allocate_start_ms,omitempty"`
	AllocateStopMs  int64    `protobuf:"varint,5,opt,name=allocate_stop_ms,json=allocateStopMs,proto3" json:"allocate_stop_ms,omitempty"`
	LeaderMs        int64    `protobuf:"varint,6,opt,name=leader_ms,json=leaderMs,proto3" json:"leader_ms,omitempty"`
	Allocating      bool     `protobuf:"varint,7,opt,name=allocating,proto3" json:"allocating,omitempty"`
	Shards          []*Shard `protobuf:"bytes,8,rep,name=shards,proto3" json:"shards,omitempty"` // only used for stat
	Creating        bool     `protobuf:"varint,9,opt,name=creating,proto3" json:"creating,omitempty"`
	Removing        bool     `protobuf:"varint,10,opt,name=removing,proto3" json:"removing,omitempty"`
}

func (x *ShardCollectionState) Reset() {
	*x = ShardCollectionState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShardCollectionState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardCollectionState) ProtoMessage() {}

func (x *ShardCollectionState) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardCollectionState.ProtoReflect.Descriptor instead.
func (*ShardCollectionState) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{15}
}

func (x *ShardCollectionState) GetShardIdx() int32 {
	if x != nil {
		return x.ShardIdx
	}
	return 0
}

func (x *ShardCollectionState) GetLeader() string {
	if x != nil {
		return x.Leader
	}
	return ""
}

func (x *ShardCollectionState) GetNodePeers() []string {
	if x != nil {
		return x.NodePeers
	}
	return nil
}

func (x *ShardCollectionState) GetAllocateStartMs() int64 {
	if x != nil {
		return x.AllocateStartMs
	}
	return 0
}

func (x *ShardCollectionState) GetAllocateStopMs() int64 {
	if x != nil {
		return x.AllocateStopMs
	}
	return 0
}

func (x *ShardCollectionState) GetLeaderMs() int64 {
	if x != nil {
		return x.LeaderMs
	}
	return 0
}

func (x *ShardCollectionState) GetAllocating() bool {
	if x != nil {
		return x.Allocating
	}
	return false
}

func (x *ShardCollectionState) GetShards() []*Shard {
	if x != nil {
		return x.Shards
	}
	return nil
}

func (x *ShardCollectionState) GetCreating() bool {
	if x != nil {
		return x.Creating
	}
	return false
}

func (x *ShardCollectionState) GetRemoving() bool {
	if x != nil {
		return x.Removing
	}
	return false
}

type CollectionState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Collection string                   `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	Conf       *CollectionConf          `protobuf:"bytes,2,opt,name=conf,proto3" json:"conf,omitempty"`
	Shards     []*ShardCollectionState  `protobuf:"bytes,3,rep,name=shards,proto3" json:"shards,omitempty"`
	Size       uint64                   `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	CreateTime int64                    `protobuf:"varint,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	Req        *CreateCollectionRequest `protobuf:"bytes,6,opt,name=req,proto3" json:"req,omitempty"`
	Status     HealthState              `protobuf:"varint,7,opt,name=status,proto3,enum=olama.HealthState" json:"status,omitempty"`
}

func (x *CollectionState) Reset() {
	*x = CollectionState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectionState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionState) ProtoMessage() {}

func (x *CollectionState) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionState.ProtoReflect.Descriptor instead.
func (*CollectionState) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{16}
}

func (x *CollectionState) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *CollectionState) GetConf() *CollectionConf {
	if x != nil {
		return x.Conf
	}
	return nil
}

func (x *CollectionState) GetShards() []*ShardCollectionState {
	if x != nil {
		return x.Shards
	}
	return nil
}

func (x *CollectionState) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *CollectionState) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *CollectionState) GetReq() *CreateCollectionRequest {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *CollectionState) GetStatus() HealthState {
	if x != nil {
		return x.Status
	}
	return HealthState_HEALTH_GREEN
}

type UpdateClusterSettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Settings *ClusterSettings `protobuf:"bytes,1,opt,name=settings,proto3" json:"settings,omitempty"`
}

func (x *UpdateClusterSettingRequest) Reset() {
	*x = UpdateClusterSettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateClusterSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateClusterSettingRequest) ProtoMessage() {}

func (x *UpdateClusterSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateClusterSettingRequest.ProtoReflect.Descriptor instead.
func (*UpdateClusterSettingRequest) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateClusterSettingRequest) GetSettings() *ClusterSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type UpdateClusterSettingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg      string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Redirect string `protobuf:"bytes,3,opt,name=redirect,proto3" json:"redirect,omitempty"`
}

func (x *UpdateClusterSettingResponse) Reset() {
	*x = UpdateClusterSettingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateClusterSettingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateClusterSettingResponse) ProtoMessage() {}

func (x *UpdateClusterSettingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateClusterSettingResponse.ProtoReflect.Descriptor instead.
func (*UpdateClusterSettingResponse) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateClusterSettingResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateClusterSettingResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UpdateClusterSettingResponse) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

type GetClusterStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetClusterStateRequest) Reset() {
	*x = GetClusterStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClusterStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterStateRequest) ProtoMessage() {}

func (x *GetClusterStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterStateRequest.ProtoReflect.Descriptor instead.
func (*GetClusterStateRequest) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{19}
}

type GetClusterStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code        int32             `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg         string            `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Redirect    string            `protobuf:"bytes,3,opt,name=redirect,proto3" json:"redirect,omitempty"`
	Masters     []*MasterNode     `protobuf:"bytes,4,rep,name=masters,proto3" json:"masters,omitempty"`
	State       *ClusterState     `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`
	ServerInfos map[string]string `protobuf:"bytes,6,rep,name=server_infos,json=serverInfos,proto3" json:"server_infos,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetClusterStateResponse) Reset() {
	*x = GetClusterStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClusterStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterStateResponse) ProtoMessage() {}

func (x *GetClusterStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterStateResponse.ProtoReflect.Descriptor instead.
func (*GetClusterStateResponse) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{20}
}

func (x *GetClusterStateResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetClusterStateResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetClusterStateResponse) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *GetClusterStateResponse) GetMasters() []*MasterNode {
	if x != nil {
		return x.Masters
	}
	return nil
}

func (x *GetClusterStateResponse) GetState() *ClusterState {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *GetClusterStateResponse) GetServerInfos() map[string]string {
	if x != nil {
		return x.ServerInfos
	}
	return nil
}

type SetAliasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database   string `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Collection string `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`
	Alias      string `protobuf:"bytes,3,opt,name=alias,proto3" json:"alias,omitempty"`
}

func (x *SetAliasRequest) Reset() {
	*x = SetAliasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAliasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAliasRequest) ProtoMessage() {}

func (x *SetAliasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAliasRequest.ProtoReflect.Descriptor instead.
func (*SetAliasRequest) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{21}
}

func (x *SetAliasRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *SetAliasRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *SetAliasRequest) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

type DropAliasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database string `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Alias    string `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`
}

func (x *DropAliasRequest) Reset() {
	*x = DropAliasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropAliasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropAliasRequest) ProtoMessage() {}

func (x *DropAliasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropAliasRequest.ProtoReflect.Descriptor instead.
func (*DropAliasRequest) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{22}
}

func (x *DropAliasRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *DropAliasRequest) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

type UpdateAliasResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code          int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg           string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Redirect      string `protobuf:"bytes,3,opt,name=redirect,proto3" json:"redirect,omitempty"`
	AffectedCount int32  `protobuf:"varint,4,opt,name=affectedCount,proto3" json:"affectedCount,omitempty"`
}

func (x *UpdateAliasResponse) Reset() {
	*x = UpdateAliasResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAliasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAliasResponse) ProtoMessage() {}

func (x *UpdateAliasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAliasResponse.ProtoReflect.Descriptor instead.
func (*UpdateAliasResponse) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{23}
}

func (x *UpdateAliasResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateAliasResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UpdateAliasResponse) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *UpdateAliasResponse) GetAffectedCount() int32 {
	if x != nil {
		return x.AffectedCount
	}
	return 0
}

type GetAliasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database string `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Alias    string `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`
}

func (x *GetAliasRequest) Reset() {
	*x = GetAliasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAliasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAliasRequest) ProtoMessage() {}

func (x *GetAliasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAliasRequest.ProtoReflect.Descriptor instead.
func (*GetAliasRequest) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{24}
}

func (x *GetAliasRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *GetAliasRequest) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

type GetAliasResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32        `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg      string       `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Redirect string       `protobuf:"bytes,3,opt,name=redirect,proto3" json:"redirect,omitempty"`
	Aliases  []*AliasItem `protobuf:"bytes,4,rep,name=aliases,proto3" json:"aliases,omitempty"`
}

func (x *GetAliasResponse) Reset() {
	*x = GetAliasResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAliasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAliasResponse) ProtoMessage() {}

func (x *GetAliasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAliasResponse.ProtoReflect.Descriptor instead.
func (*GetAliasResponse) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{25}
}

func (x *GetAliasResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetAliasResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetAliasResponse) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *GetAliasResponse) GetAliases() []*AliasItem {
	if x != nil {
		return x.Aliases
	}
	return nil
}

type GetShardStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database   string `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Collection string `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`
	ShardIdx   int32  `protobuf:"varint,3,opt,name=shard_idx,json=shardIdx,proto3" json:"shard_idx,omitempty"`
}

func (x *GetShardStateRequest) Reset() {
	*x = GetShardStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShardStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShardStateRequest) ProtoMessage() {}

func (x *GetShardStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShardStateRequest.ProtoReflect.Descriptor instead.
func (*GetShardStateRequest) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{26}
}

func (x *GetShardStateRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *GetShardStateRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *GetShardStateRequest) GetShardIdx() int32 {
	if x != nil {
		return x.ShardIdx
	}
	return 0
}

type GetShardStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg      string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Redirect string `protobuf:"bytes,3,opt,name=redirect,proto3" json:"redirect,omitempty"`
	Shard    *Shard `protobuf:"bytes,4,opt,name=shard,proto3" json:"shard,omitempty"`
}

func (x *GetShardStateResponse) Reset() {
	*x = GetShardStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShardStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShardStateResponse) ProtoMessage() {}

func (x *GetShardStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShardStateResponse.ProtoReflect.Descriptor instead.
func (*GetShardStateResponse) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{27}
}

func (x *GetShardStateResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetShardStateResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetShardStateResponse) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *GetShardStateResponse) GetShard() *Shard {
	if x != nil {
		return x.Shard
	}
	return nil
}

type DescribeCollectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database   string `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Collection string `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`
	Transfer   bool   `protobuf:"varint,3,opt,name=transfer,proto3" json:"transfer,omitempty"`
}

func (x *DescribeCollectionRequest) Reset() {
	*x = DescribeCollectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeCollectionRequest) ProtoMessage() {}

func (x *DescribeCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeCollectionRequest.ProtoReflect.Descriptor instead.
func (*DescribeCollectionRequest) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{28}
}

func (x *DescribeCollectionRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *DescribeCollectionRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *DescribeCollectionRequest) GetTransfer() bool {
	if x != nil {
		return x.Transfer
	}
	return false
}

type DescribeCollectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code       int32                    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg        string                   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Redirect   string                   `protobuf:"bytes,3,opt,name=redirect,proto3" json:"redirect,omitempty"`
	Collection *CreateCollectionRequest `protobuf:"bytes,4,opt,name=collection,proto3" json:"collection,omitempty"`
	State      *CollectionState         `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *DescribeCollectionResponse) Reset() {
	*x = DescribeCollectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeCollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeCollectionResponse) ProtoMessage() {}

func (x *DescribeCollectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeCollectionResponse.ProtoReflect.Descriptor instead.
func (*DescribeCollectionResponse) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{29}
}

func (x *DescribeCollectionResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DescribeCollectionResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *DescribeCollectionResponse) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *DescribeCollectionResponse) GetCollection() *CreateCollectionRequest {
	if x != nil {
		return x.Collection
	}
	return nil
}

func (x *DescribeCollectionResponse) GetState() *CollectionState {
	if x != nil {
		return x.State
	}
	return nil
}

type ListCollectionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database string `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Transfer bool   `protobuf:"varint,2,opt,name=transfer,proto3" json:"transfer,omitempty"`
}

func (x *ListCollectionsRequest) Reset() {
	*x = ListCollectionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCollectionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCollectionsRequest) ProtoMessage() {}

func (x *ListCollectionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCollectionsRequest.ProtoReflect.Descriptor instead.
func (*ListCollectionsRequest) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{30}
}

func (x *ListCollectionsRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *ListCollectionsRequest) GetTransfer() bool {
	if x != nil {
		return x.Transfer
	}
	return false
}

type ListCollectionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code        int32                      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg         string                     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Redirect    string                     `protobuf:"bytes,3,opt,name=redirect,proto3" json:"redirect,omitempty"`
	Collections []*CreateCollectionRequest `protobuf:"bytes,4,rep,name=collections,proto3" json:"collections,omitempty"`
	States      []*CollectionState         `protobuf:"bytes,5,rep,name=states,proto3" json:"states,omitempty"`
	Cluster     *ClusterState              `protobuf:"bytes,6,opt,name=cluster,proto3" json:"cluster,omitempty"`
}

func (x *ListCollectionsResponse) Reset() {
	*x = ListCollectionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCollectionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCollectionsResponse) ProtoMessage() {}

func (x *ListCollectionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCollectionsResponse.ProtoReflect.Descriptor instead.
func (*ListCollectionsResponse) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{31}
}

func (x *ListCollectionsResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListCollectionsResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ListCollectionsResponse) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *ListCollectionsResponse) GetCollections() []*CreateCollectionRequest {
	if x != nil {
		return x.Collections
	}
	return nil
}

func (x *ListCollectionsResponse) GetStates() []*CollectionState {
	if x != nil {
		return x.States
	}
	return nil
}

func (x *ListCollectionsResponse) GetCluster() *ClusterState {
	if x != nil {
		return x.Cluster
	}
	return nil
}

type IndexParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	M              uint32 `protobuf:"varint,1,opt,name=M,proto3" json:"M,omitempty"`
	EfConstruction uint32 `protobuf:"varint,2,opt,name=efConstruction,proto3" json:"efConstruction,omitempty"`
	Nprobe         uint32 `protobuf:"varint,3,opt,name=nprobe,proto3" json:"nprobe,omitempty"`
	Nlist          uint32 `protobuf:"varint,4,opt,name=nlist,proto3" json:"nlist,omitempty"`
}

func (x *IndexParams) Reset() {
	*x = IndexParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexParams) ProtoMessage() {}

func (x *IndexParams) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexParams.ProtoReflect.Descriptor instead.
func (*IndexParams) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{32}
}

func (x *IndexParams) GetM() uint32 {
	if x != nil {
		return x.M
	}
	return 0
}

func (x *IndexParams) GetEfConstruction() uint32 {
	if x != nil {
		return x.EfConstruction
	}
	return 0
}

func (x *IndexParams) GetNprobe() uint32 {
	if x != nil {
		return x.Nprobe
	}
	return 0
}

func (x *IndexParams) GetNlist() uint32 {
	if x != nil {
		return x.Nlist
	}
	return 0
}

type IndexColumn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldName    string       `protobuf:"bytes,1,opt,name=fieldName,proto3" json:"fieldName,omitempty"`
	FieldType    string       `protobuf:"bytes,2,opt,name=fieldType,proto3" json:"fieldType,omitempty"`
	IndexType    string       `protobuf:"bytes,3,opt,name=indexType,proto3" json:"indexType,omitempty"`
	Dimension    uint32       `protobuf:"varint,4,opt,name=dimension,proto3" json:"dimension,omitempty"`
	MetricType   string       `protobuf:"bytes,5,opt,name=metricType,proto3" json:"metricType,omitempty"`
	IndexedCount uint64       `protobuf:"varint,6,opt,name=indexedCount,proto3" json:"indexedCount,omitempty"`
	Params       *IndexParams `protobuf:"bytes,8,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *IndexColumn) Reset() {
	*x = IndexColumn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexColumn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexColumn) ProtoMessage() {}

func (x *IndexColumn) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexColumn.ProtoReflect.Descriptor instead.
func (*IndexColumn) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{33}
}

func (x *IndexColumn) GetFieldName() string {
	if x != nil {
		return x.FieldName
	}
	return ""
}

func (x *IndexColumn) GetFieldType() string {
	if x != nil {
		return x.FieldType
	}
	return ""
}

func (x *IndexColumn) GetIndexType() string {
	if x != nil {
		return x.IndexType
	}
	return ""
}

func (x *IndexColumn) GetDimension() uint32 {
	if x != nil {
		return x.Dimension
	}
	return 0
}

func (x *IndexColumn) GetMetricType() string {
	if x != nil {
		return x.MetricType
	}
	return ""
}

func (x *IndexColumn) GetIndexedCount() uint64 {
	if x != nil {
		return x.IndexedCount
	}
	return 0
}

func (x *IndexColumn) GetParams() *IndexParams {
	if x != nil {
		return x.Params
	}
	return nil
}

type IndexStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status    string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Progress  string `protobuf:"bytes,2,opt,name=progress,proto3" json:"progress,omitempty"`
	StartTime string `protobuf:"bytes,3,opt,name=startTime,proto3" json:"startTime,omitempty"`
}

func (x *IndexStatus) Reset() {
	*x = IndexStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexStatus) ProtoMessage() {}

func (x *IndexStatus) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexStatus.ProtoReflect.Descriptor instead.
func (*IndexStatus) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{34}
}

func (x *IndexStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *IndexStatus) GetProgress() string {
	if x != nil {
		return x.Progress
	}
	return ""
}

func (x *IndexStatus) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

type CreateCollectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database        string           `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Collection      string           `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`
	ReplicaNum      uint32           `protobuf:"varint,3,opt,name=replicaNum,proto3" json:"replicaNum,omitempty"`
	ShardNum        uint32           `protobuf:"varint,4,opt,name=shardNum,proto3" json:"shardNum,omitempty"`
	Size            uint64           `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
	CreateTime      string           `protobuf:"bytes,6,opt,name=createTime,proto3" json:"createTime,omitempty"`
	Description     string           `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	Indexes         []*IndexColumn   `protobuf:"bytes,8,rep,name=indexes,proto3" json:"indexes,omitempty"`
	IndexStatus     *IndexStatus     `protobuf:"bytes,9,opt,name=indexStatus,proto3" json:"indexStatus,omitempty"`
	AliasList       []string         `protobuf:"bytes,10,rep,name=alias_list,json=aliasList,proto3" json:"alias_list,omitempty"`
	EmbeddingParams *EmbeddingParams `protobuf:"bytes,11,opt,name=embeddingParams,proto3" json:"embeddingParams,omitempty"`
}

func (x *CreateCollectionRequest) Reset() {
	*x = CreateCollectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCollectionRequest) ProtoMessage() {}

func (x *CreateCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCollectionRequest.ProtoReflect.Descriptor instead.
func (*CreateCollectionRequest) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{35}
}

func (x *CreateCollectionRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *CreateCollectionRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *CreateCollectionRequest) GetReplicaNum() uint32 {
	if x != nil {
		return x.ReplicaNum
	}
	return 0
}

func (x *CreateCollectionRequest) GetShardNum() uint32 {
	if x != nil {
		return x.ShardNum
	}
	return 0
}

func (x *CreateCollectionRequest) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *CreateCollectionRequest) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *CreateCollectionRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateCollectionRequest) GetIndexes() []*IndexColumn {
	if x != nil {
		return x.Indexes
	}
	return nil
}

func (x *CreateCollectionRequest) GetIndexStatus() *IndexStatus {
	if x != nil {
		return x.IndexStatus
	}
	return nil
}

func (x *CreateCollectionRequest) GetAliasList() []string {
	if x != nil {
		return x.AliasList
	}
	return nil
}

func (x *CreateCollectionRequest) GetEmbeddingParams() *EmbeddingParams {
	if x != nil {
		return x.EmbeddingParams
	}
	return nil
}

type CreateCollectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code          int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg           string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Redirect      string `protobuf:"bytes,3,opt,name=redirect,proto3" json:"redirect,omitempty"`
	AffectedCount int32  `protobuf:"varint,4,opt,name=affectedCount,proto3" json:"affectedCount,omitempty"`
}

func (x *CreateCollectionResponse) Reset() {
	*x = CreateCollectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCollectionResponse) ProtoMessage() {}

func (x *CreateCollectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCollectionResponse.ProtoReflect.Descriptor instead.
func (*CreateCollectionResponse) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{36}
}

func (x *CreateCollectionResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateCollectionResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CreateCollectionResponse) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *CreateCollectionResponse) GetAffectedCount() int32 {
	if x != nil {
		return x.AffectedCount
	}
	return 0
}

type DropCollectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database     string `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Collection   string `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`
	Force        bool   `protobuf:"varint,3,opt,name=force,proto3" json:"force,omitempty"`
	WithoutAlias bool   `protobuf:"varint,4,opt,name=without_alias,json=withoutAlias,proto3" json:"without_alias,omitempty"`
}

func (x *DropCollectionRequest) Reset() {
	*x = DropCollectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropCollectionRequest) ProtoMessage() {}

func (x *DropCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropCollectionRequest.ProtoReflect.Descriptor instead.
func (*DropCollectionRequest) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{37}
}

func (x *DropCollectionRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *DropCollectionRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *DropCollectionRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

func (x *DropCollectionRequest) GetWithoutAlias() bool {
	if x != nil {
		return x.WithoutAlias
	}
	return false
}

type DropCollectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code          int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg           string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Redirect      string `protobuf:"bytes,3,opt,name=redirect,proto3" json:"redirect,omitempty"`
	AffectedCount int32  `protobuf:"varint,4,opt,name=affectedCount,proto3" json:"affectedCount,omitempty"`
}

func (x *DropCollectionResponse) Reset() {
	*x = DropCollectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropCollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropCollectionResponse) ProtoMessage() {}

func (x *DropCollectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropCollectionResponse.ProtoReflect.Descriptor instead.
func (*DropCollectionResponse) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{38}
}

func (x *DropCollectionResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DropCollectionResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *DropCollectionResponse) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *DropCollectionResponse) GetAffectedCount() int32 {
	if x != nil {
		return x.AffectedCount
	}
	return 0
}

type FlushCollectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database          string `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Collection        string `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`
	OnlyFlushAnnIndex bool   `protobuf:"varint,3,opt,name=only_flush_ann_index,json=onlyFlushAnnIndex,proto3" json:"only_flush_ann_index,omitempty"`
}

func (x *FlushCollectionRequest) Reset() {
	*x = FlushCollectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlushCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlushCollectionRequest) ProtoMessage() {}

func (x *FlushCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlushCollectionRequest.ProtoReflect.Descriptor instead.
func (*FlushCollectionRequest) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{39}
}

func (x *FlushCollectionRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *FlushCollectionRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *FlushCollectionRequest) GetOnlyFlushAnnIndex() bool {
	if x != nil {
		return x.OnlyFlushAnnIndex
	}
	return false
}

type FlushCollectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code          int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg           string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Redirect      string `protobuf:"bytes,3,opt,name=redirect,proto3" json:"redirect,omitempty"`
	AffectedCount int32  `protobuf:"varint,4,opt,name=affectedCount,proto3" json:"affectedCount,omitempty"`
}

func (x *FlushCollectionResponse) Reset() {
	*x = FlushCollectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlushCollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlushCollectionResponse) ProtoMessage() {}

func (x *FlushCollectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlushCollectionResponse.ProtoReflect.Descriptor instead.
func (*FlushCollectionResponse) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{40}
}

func (x *FlushCollectionResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *FlushCollectionResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *FlushCollectionResponse) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *FlushCollectionResponse) GetAffectedCount() int32 {
	if x != nil {
		return x.AffectedCount
	}
	return 0
}

type UpdateCollectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database   string          `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Collection string          `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`
	Conf       *CollectionConf `protobuf:"bytes,3,opt,name=conf,proto3" json:"conf,omitempty"`
}

func (x *UpdateCollectionRequest) Reset() {
	*x = UpdateCollectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCollectionRequest) ProtoMessage() {}

func (x *UpdateCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCollectionRequest.ProtoReflect.Descriptor instead.
func (*UpdateCollectionRequest) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{41}
}

func (x *UpdateCollectionRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *UpdateCollectionRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *UpdateCollectionRequest) GetConf() *CollectionConf {
	if x != nil {
		return x.Conf
	}
	return nil
}

type UpdateCollectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg      string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Redirect string   `protobuf:"bytes,3,opt,name=redirect,proto3" json:"redirect,omitempty"`
	TaskIds  []string `protobuf:"bytes,4,rep,name=task_ids,json=taskIds,proto3" json:"task_ids,omitempty"`
}

func (x *UpdateCollectionResponse) Reset() {
	*x = UpdateCollectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCollectionResponse) ProtoMessage() {}

func (x *UpdateCollectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCollectionResponse.ProtoReflect.Descriptor instead.
func (*UpdateCollectionResponse) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{42}
}

func (x *UpdateCollectionResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateCollectionResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UpdateCollectionResponse) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *UpdateCollectionResponse) GetTaskIds() []string {
	if x != nil {
		return x.TaskIds
	}
	return nil
}

type RebuildIndexRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database          string `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Collection        string `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`
	DropBeforeRebuild bool   `protobuf:"varint,3,opt,name=dropBeforeRebuild,proto3" json:"dropBeforeRebuild,omitempty"`
	Throttle          int32  `protobuf:"varint,4,opt,name=throttle,proto3" json:"throttle,omitempty"`
	DisableTrain      bool   `protobuf:"varint,5,opt,name=disable_train,json=disableTrain,proto3" json:"disable_train,omitempty"`
	ForceRebuild      bool   `protobuf:"varint,6,opt,name=force_rebuild,json=forceRebuild,proto3" json:"force_rebuild,omitempty"`
}

func (x *RebuildIndexRequest) Reset() {
	*x = RebuildIndexRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RebuildIndexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebuildIndexRequest) ProtoMessage() {}

func (x *RebuildIndexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RebuildIndexRequest.ProtoReflect.Descriptor instead.
func (*RebuildIndexRequest) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{43}
}

func (x *RebuildIndexRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *RebuildIndexRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *RebuildIndexRequest) GetDropBeforeRebuild() bool {
	if x != nil {
		return x.DropBeforeRebuild
	}
	return false
}

func (x *RebuildIndexRequest) GetThrottle() int32 {
	if x != nil {
		return x.Throttle
	}
	return 0
}

func (x *RebuildIndexRequest) GetDisableTrain() bool {
	if x != nil {
		return x.DisableTrain
	}
	return false
}

func (x *RebuildIndexRequest) GetForceRebuild() bool {
	if x != nil {
		return x.ForceRebuild
	}
	return false
}

type RebuildIndexResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg      string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Redirect string   `protobuf:"bytes,3,opt,name=redirect,proto3" json:"redirect,omitempty"`
	TaskIds  []string `protobuf:"bytes,4,rep,name=task_ids,json=taskIds,proto3" json:"task_ids,omitempty"`
}

func (x *RebuildIndexResponse) Reset() {
	*x = RebuildIndexResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RebuildIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebuildIndexResponse) ProtoMessage() {}

func (x *RebuildIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RebuildIndexResponse.ProtoReflect.Descriptor instead.
func (*RebuildIndexResponse) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{44}
}

func (x *RebuildIndexResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RebuildIndexResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RebuildIndexResponse) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *RebuildIndexResponse) GetTaskIds() []string {
	if x != nil {
		return x.TaskIds
	}
	return nil
}

type MoveShardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database   string `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Collection string `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`
	ShardIdx   int32  `protobuf:"varint,3,opt,name=shard_idx,json=shardIdx,proto3" json:"shard_idx,omitempty"`
	FromNode   string `protobuf:"bytes,4,opt,name=from_node,json=fromNode,proto3" json:"from_node,omitempty"`
	ToNode     string `protobuf:"bytes,5,opt,name=to_node,json=toNode,proto3" json:"to_node,omitempty"`
}

func (x *MoveShardRequest) Reset() {
	*x = MoveShardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveShardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveShardRequest) ProtoMessage() {}

func (x *MoveShardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveShardRequest.ProtoReflect.Descriptor instead.
func (*MoveShardRequest) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{45}
}

func (x *MoveShardRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *MoveShardRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *MoveShardRequest) GetShardIdx() int32 {
	if x != nil {
		return x.ShardIdx
	}
	return 0
}

func (x *MoveShardRequest) GetFromNode() string {
	if x != nil {
		return x.FromNode
	}
	return ""
}

func (x *MoveShardRequest) GetToNode() string {
	if x != nil {
		return x.ToNode
	}
	return ""
}

type MoveShardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg      string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Redirect string `protobuf:"bytes,3,opt,name=redirect,proto3" json:"redirect,omitempty"`
}

func (x *MoveShardResponse) Reset() {
	*x = MoveShardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveShardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveShardResponse) ProtoMessage() {}

func (x *MoveShardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveShardResponse.ProtoReflect.Descriptor instead.
func (*MoveShardResponse) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{46}
}

func (x *MoveShardResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *MoveShardResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *MoveShardResponse) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

type ResetShardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database   string   `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Collection string   `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`
	ShardIdx   int32    `protobuf:"varint,3,opt,name=shard_idx,json=shardIdx,proto3" json:"shard_idx,omitempty"`
	Nodes      []string `protobuf:"bytes,4,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *ResetShardRequest) Reset() {
	*x = ResetShardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetShardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetShardRequest) ProtoMessage() {}

func (x *ResetShardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetShardRequest.ProtoReflect.Descriptor instead.
func (*ResetShardRequest) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{47}
}

func (x *ResetShardRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *ResetShardRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *ResetShardRequest) GetShardIdx() int32 {
	if x != nil {
		return x.ShardIdx
	}
	return 0
}

func (x *ResetShardRequest) GetNodes() []string {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type ResetShardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg      string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Redirect string `protobuf:"bytes,3,opt,name=redirect,proto3" json:"redirect,omitempty"`
}

func (x *ResetShardResponse) Reset() {
	*x = ResetShardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetShardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetShardResponse) ProtoMessage() {}

func (x *ResetShardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetShardResponse.ProtoReflect.Descriptor instead.
func (*ResetShardResponse) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{48}
}

func (x *ResetShardResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ResetShardResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ResetShardResponse) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

type MigrateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database           string   `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Collection         string   `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`
	DestCollection     string   `protobuf:"bytes,3,opt,name=dest_collection,json=destCollection,proto3" json:"dest_collection,omitempty"`
	BatchSize          uint32   `protobuf:"varint,4,opt,name=batch_size,json=batchSize,proto3" json:"batch_size,omitempty"`
	DocsPerSecondLimit uint32   `protobuf:"varint,5,opt,name=docs_per_second_limit,json=docsPerSecondLimit,proto3" json:"docs_per_second_limit,omitempty"`
	DestPeers          []string `protobuf:"bytes,6,rep,name=dest_peers,json=destPeers,proto3" json:"dest_peers,omitempty"`         // 目标地址,为空时在本集群内迁移;不为空时指定外部集群地址
	ShardIdxs          []uint32 `protobuf:"varint,7,rep,packed,name=shard_idxs,json=shardIdxs,proto3" json:"shard_idxs,omitempty"` // 指定迁移分片,默认迁移全部分片
	DumpPath           string   `protobuf:"bytes,8,opt,name=dump_path,json=dumpPath,proto3" json:"dump_path,omitempty"`            // 数据路径
	DumpFormat         uint32   `protobuf:"varint,9,opt,name=dump_format,json=dumpFormat,proto3" json:"dump_format,omitempty"`     // 数据格式 0:|分割文本,1:json
}

func (x *MigrateRequest) Reset() {
	*x = MigrateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MigrateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MigrateRequest) ProtoMessage() {}

func (x *MigrateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MigrateRequest.ProtoReflect.Descriptor instead.
func (*MigrateRequest) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{49}
}

func (x *MigrateRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *MigrateRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *MigrateRequest) GetDestCollection() string {
	if x != nil {
		return x.DestCollection
	}
	return ""
}

func (x *MigrateRequest) GetBatchSize() uint32 {
	if x != nil {
		return x.BatchSize
	}
	return 0
}

func (x *MigrateRequest) GetDocsPerSecondLimit() uint32 {
	if x != nil {
		return x.DocsPerSecondLimit
	}
	return 0
}

func (x *MigrateRequest) GetDestPeers() []string {
	if x != nil {
		return x.DestPeers
	}
	return nil
}

func (x *MigrateRequest) GetShardIdxs() []uint32 {
	if x != nil {
		return x.ShardIdxs
	}
	return nil
}

func (x *MigrateRequest) GetDumpPath() string {
	if x != nil {
		return x.DumpPath
	}
	return ""
}

func (x *MigrateRequest) GetDumpFormat() uint32 {
	if x != nil {
		return x.DumpFormat
	}
	return 0
}

type MigrateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg      string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Redirect string   `protobuf:"bytes,3,opt,name=redirect,proto3" json:"redirect,omitempty"`
	TaskIds  []string `protobuf:"bytes,4,rep,name=task_ids,json=taskIds,proto3" json:"task_ids,omitempty"`
}

func (x *MigrateResponse) Reset() {
	*x = MigrateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MigrateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MigrateResponse) ProtoMessage() {}

func (x *MigrateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MigrateResponse.ProtoReflect.Descriptor instead.
func (*MigrateResponse) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{50}
}

func (x *MigrateResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *MigrateResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *MigrateResponse) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *MigrateResponse) GetTaskIds() []string {
	if x != nil {
		return x.TaskIds
	}
	return nil
}

type InfoNodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes []string `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *InfoNodeRequest) Reset() {
	*x = InfoNodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoNodeRequest) ProtoMessage() {}

func (x *InfoNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoNodeRequest.ProtoReflect.Descriptor instead.
func (*InfoNodeRequest) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{51}
}

func (x *InfoNodeRequest) GetNodes() []string {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type InfoNodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg      string      `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Redirect string      `protobuf:"bytes,3,opt,name=redirect,proto3" json:"redirect,omitempty"`
	Nodes    []*WorkNode `protobuf:"bytes,4,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *InfoNodeResponse) Reset() {
	*x = InfoNodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoNodeResponse) ProtoMessage() {}

func (x *InfoNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoNodeResponse.ProtoReflect.Descriptor instead.
func (*InfoNodeResponse) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{52}
}

func (x *InfoNodeResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *InfoNodeResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *InfoNodeResponse) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *InfoNodeResponse) GetNodes() []*WorkNode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type RemoveNodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node string `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
}

func (x *RemoveNodeRequest) Reset() {
	*x = RemoveNodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveNodeRequest) ProtoMessage() {}

func (x *RemoveNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveNodeRequest.ProtoReflect.Descriptor instead.
func (*RemoveNodeRequest) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{53}
}

func (x *RemoveNodeRequest) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

type RemoveNodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg      string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Redirect string `protobuf:"bytes,3,opt,name=redirect,proto3" json:"redirect,omitempty"`
}

func (x *RemoveNodeResponse) Reset() {
	*x = RemoveNodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveNodeResponse) ProtoMessage() {}

func (x *RemoveNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveNodeResponse.ProtoReflect.Descriptor instead.
func (*RemoveNodeResponse) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{54}
}

func (x *RemoveNodeResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RemoveNodeResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RemoveNodeResponse) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

type TaskStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tasks []string `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
}

func (x *TaskStateRequest) Reset() {
	*x = TaskStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskStateRequest) ProtoMessage() {}

func (x *TaskStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskStateRequest.ProtoReflect.Descriptor instead.
func (*TaskStateRequest) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{55}
}

func (x *TaskStateRequest) GetTasks() []string {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type TaskState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Desc           string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	Node           string `protobuf:"bytes,3,opt,name=node,proto3" json:"node,omitempty"`
	Completed      bool   `protobuf:"varint,4,opt,name=completed,proto3" json:"completed,omitempty"`
	Success        bool   `protobuf:"varint,5,opt,name=success,proto3" json:"success,omitempty"`
	Error          string `protobuf:"bytes,6,opt,name=error,proto3" json:"error,omitempty"`
	StartedMs      int64  `protobuf:"varint,7,opt,name=started_ms,json=startedMs,proto3" json:"started_ms,omitempty"`
	StopedMs       int64  `protobuf:"varint,8,opt,name=stoped_ms,json=stopedMs,proto3" json:"stoped_ms,omitempty"`
	Progress       string `protobuf:"bytes,9,opt,name=progress,proto3" json:"progress,omitempty"`
	LatestActiveMs int64  `protobuf:"varint,10,opt,name=latest_active_ms,json=latestActiveMs,proto3" json:"latest_active_ms,omitempty"`
	ElapsedMs      int64  `protobuf:"varint,11,opt,name=elapsed_ms,json=elapsedMs,proto3" json:"elapsed_ms,omitempty"`
}

func (x *TaskState) Reset() {
	*x = TaskState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskState) ProtoMessage() {}

func (x *TaskState) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskState.ProtoReflect.Descriptor instead.
func (*TaskState) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{56}
}

func (x *TaskState) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TaskState) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *TaskState) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

func (x *TaskState) GetCompleted() bool {
	if x != nil {
		return x.Completed
	}
	return false
}

func (x *TaskState) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *TaskState) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *TaskState) GetStartedMs() int64 {
	if x != nil {
		return x.StartedMs
	}
	return 0
}

func (x *TaskState) GetStopedMs() int64 {
	if x != nil {
		return x.StopedMs
	}
	return 0
}

func (x *TaskState) GetProgress() string {
	if x != nil {
		return x.Progress
	}
	return ""
}

func (x *TaskState) GetLatestActiveMs() int64 {
	if x != nil {
		return x.LatestActiveMs
	}
	return 0
}

func (x *TaskState) GetElapsedMs() int64 {
	if x != nil {
		return x.ElapsedMs
	}
	return 0
}

type TaskStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32        `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg      string       `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Redirect string       `protobuf:"bytes,3,opt,name=redirect,proto3" json:"redirect,omitempty"`
	States   []*TaskState `protobuf:"bytes,4,rep,name=states,proto3" json:"states,omitempty"`
}

func (x *TaskStateResponse) Reset() {
	*x = TaskStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskStateResponse) ProtoMessage() {}

func (x *TaskStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskStateResponse.ProtoReflect.Descriptor instead.
func (*TaskStateResponse) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{57}
}

func (x *TaskStateResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *TaskStateResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *TaskStateResponse) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *TaskStateResponse) GetStates() []*TaskState {
	if x != nil {
		return x.States
	}
	return nil
}

type UpsertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database   string      `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Collection string      `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`
	BuildIndex bool        `protobuf:"varint,3,opt,name=buildIndex,proto3" json:"buildIndex,omitempty"` // 是否立即构建索引
	Documents  []*Document `protobuf:"bytes,4,rep,name=documents,proto3" json:"documents,omitempty"`    // 覆盖更新不想更新向量索引，只更新文档其他信息，可以设置向量为空
}

func (x *UpsertRequest) Reset() {
	*x = UpsertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertRequest) ProtoMessage() {}

func (x *UpsertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertRequest.ProtoReflect.Descriptor instead.
func (*UpsertRequest) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{58}
}

func (x *UpsertRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *UpsertRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *UpsertRequest) GetBuildIndex() bool {
	if x != nil {
		return x.BuildIndex
	}
	return false
}

func (x *UpsertRequest) GetDocuments() []*Document {
	if x != nil {
		return x.Documents
	}
	return nil
}

type UpsertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code          int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg           string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Redirect      string `protobuf:"bytes,3,opt,name=redirect,proto3" json:"redirect,omitempty"`
	AffectedCount int32  `protobuf:"varint,4,opt,name=affectedCount,proto3" json:"affectedCount,omitempty"`
	Warning       string `protobuf:"bytes,5,opt,name=warning,proto3" json:"warning,omitempty"`
}

func (x *UpsertResponse) Reset() {
	*x = UpsertResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertResponse) ProtoMessage() {}

func (x *UpsertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertResponse.ProtoReflect.Descriptor instead.
func (*UpsertResponse) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{59}
}

func (x *UpsertResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpsertResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UpsertResponse) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *UpsertResponse) GetAffectedCount() int32 {
	if x != nil {
		return x.AffectedCount
	}
	return 0
}

func (x *UpsertResponse) GetWarning() string {
	if x != nil {
		return x.Warning
	}
	return ""
}

type UpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database   string     `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Collection string     `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`
	Query      *QueryCond `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
	Update     *Document  `protobuf:"bytes,4,opt,name=update,proto3" json:"update,omitempty"`
}

func (x *UpdateRequest) Reset() {
	*x = UpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRequest) ProtoMessage() {}

func (x *UpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRequest.ProtoReflect.Descriptor instead.
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{60}
}

func (x *UpdateRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *UpdateRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *UpdateRequest) GetQuery() *QueryCond {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *UpdateRequest) GetUpdate() *Document {
	if x != nil {
		return x.Update
	}
	return nil
}

type UpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code          int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg           string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Redirect      string `protobuf:"bytes,3,opt,name=redirect,proto3" json:"redirect,omitempty"`
	AffectedCount uint64 `protobuf:"varint,4,opt,name=affectedCount,proto3" json:"affectedCount,omitempty"`
	Warning       string `protobuf:"bytes,5,opt,name=warning,proto3" json:"warning,omitempty"`
}

func (x *UpdateResponse) Reset() {
	*x = UpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateResponse) ProtoMessage() {}

func (x *UpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateResponse.ProtoReflect.Descriptor instead.
func (*UpdateResponse) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{61}
}

func (x *UpdateResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UpdateResponse) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *UpdateResponse) GetAffectedCount() uint64 {
	if x != nil {
		return x.AffectedCount
	}
	return 0
}

func (x *UpdateResponse) GetWarning() string {
	if x != nil {
		return x.Warning
	}
	return ""
}

type DeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database   string     `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Collection string     `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`
	Query      *QueryCond `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{62}
}

func (x *DeleteRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *DeleteRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *DeleteRequest) GetQuery() *QueryCond {
	if x != nil {
		return x.Query
	}
	return nil
}

type DeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code          int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg           string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Redirect      string `protobuf:"bytes,3,opt,name=redirect,proto3" json:"redirect,omitempty"`
	AffectedCount uint64 `protobuf:"varint,4,opt,name=affectedCount,proto3" json:"affectedCount,omitempty"`
}

func (x *DeleteResponse) Reset() {
	*x = DeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponse) ProtoMessage() {}

func (x *DeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponse.ProtoReflect.Descriptor instead.
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{63}
}

func (x *DeleteResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeleteResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *DeleteResponse) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *DeleteResponse) GetAffectedCount() uint64 {
	if x != nil {
		return x.AffectedCount
	}
	return 0
}

type QueryCond struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DocumentIds    []string `protobuf:"bytes,1,rep,name=documentIds,proto3" json:"documentIds,omitempty"`
	IndexIds       []uint64 `protobuf:"varint,2,rep,packed,name=indexIds,proto3" json:"indexIds,omitempty"`
	RetrieveVector bool     `protobuf:"varint,3,opt,name=retrieveVector,proto3" json:"retrieveVector,omitempty"`
	Filter         string   `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
	Limit          int64    `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset         int64    `protobuf:"varint,6,opt,name=offset,proto3" json:"offset,omitempty"`
	OutputFields   []string `protobuf:"bytes,7,rep,name=outputFields,proto3" json:"outputFields,omitempty"`
}

func (x *QueryCond) Reset() {
	*x = QueryCond{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCond) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCond) ProtoMessage() {}

func (x *QueryCond) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCond.ProtoReflect.Descriptor instead.
func (*QueryCond) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{64}
}

func (x *QueryCond) GetDocumentIds() []string {
	if x != nil {
		return x.DocumentIds
	}
	return nil
}

func (x *QueryCond) GetIndexIds() []uint64 {
	if x != nil {
		return x.IndexIds
	}
	return nil
}

func (x *QueryCond) GetRetrieveVector() bool {
	if x != nil {
		return x.RetrieveVector
	}
	return false
}

func (x *QueryCond) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *QueryCond) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *QueryCond) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *QueryCond) GetOutputFields() []string {
	if x != nil {
		return x.OutputFields
	}
	return nil
}

type QueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database        string     `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Collection      string     `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`
	Query           *QueryCond `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
	ReadConsistency string     `protobuf:"bytes,4,opt,name=readConsistency,proto3" json:"readConsistency,omitempty"`
}

func (x *QueryRequest) Reset() {
	*x = QueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRequest) ProtoMessage() {}

func (x *QueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRequest.ProtoReflect.Descriptor instead.
func (*QueryRequest) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{65}
}

func (x *QueryRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *QueryRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *QueryRequest) GetQuery() *QueryCond {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *QueryRequest) GetReadConsistency() string {
	if x != nil {
		return x.ReadConsistency
	}
	return ""
}

type QueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string      `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Redirect  string      `protobuf:"bytes,3,opt,name=redirect,proto3" json:"redirect,omitempty"`
	Documents []*Document `protobuf:"bytes,4,rep,name=documents,proto3" json:"documents,omitempty"`
	Count     uint64      `protobuf:"varint,5,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *QueryResponse) Reset() {
	*x = QueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryResponse) ProtoMessage() {}

func (x *QueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryResponse.ProtoReflect.Descriptor instead.
func (*QueryResponse) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{66}
}

func (x *QueryResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *QueryResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *QueryResponse) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *QueryResponse) GetDocuments() []*Document {
	if x != nil {
		return x.Documents
	}
	return nil
}

func (x *QueryResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ExplainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database   string     `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Collection string     `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`
	Query      *QueryCond `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"` // string readConsistency  = 4;   默认要强一致性
}

func (x *ExplainRequest) Reset() {
	*x = ExplainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExplainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExplainRequest) ProtoMessage() {}

func (x *ExplainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExplainRequest.ProtoReflect.Descriptor instead.
func (*ExplainRequest) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{67}
}

func (x *ExplainRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *ExplainRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *ExplainRequest) GetQuery() *QueryCond {
	if x != nil {
		return x.Query
	}
	return nil
}

type ExplainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code          int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg           string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Redirect      string `protobuf:"bytes,3,opt,name=redirect,proto3" json:"redirect,omitempty"`
	AffectedCount uint64 `protobuf:"varint,4,opt,name=affectedCount,proto3" json:"affectedCount,omitempty"`
}

func (x *ExplainResponse) Reset() {
	*x = ExplainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExplainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExplainResponse) ProtoMessage() {}

func (x *ExplainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExplainResponse.ProtoReflect.Descriptor instead.
func (*ExplainResponse) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{68}
}

func (x *ExplainResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ExplainResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ExplainResponse) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *ExplainResponse) GetAffectedCount() uint64 {
	if x != nil {
		return x.AffectedCount
	}
	return 0
}

type SearchResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Documents []*Document `protobuf:"bytes,1,rep,name=documents,proto3" json:"documents,omitempty"`
}

func (x *SearchResult) Reset() {
	*x = SearchResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResult) ProtoMessage() {}

func (x *SearchResult) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResult.ProtoReflect.Descriptor instead.
func (*SearchResult) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{69}
}

func (x *SearchResult) GetDocuments() []*Document {
	if x != nil {
		return x.Documents
	}
	return nil
}

type SearchParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nprobe uint32  `protobuf:"varint,1,opt,name=nprobe,proto3" json:"nprobe,omitempty"`  // 搜索时查找的聚类数量，使用索引默认值即可
	Ef     uint32  `protobuf:"varint,2,opt,name=ef,proto3" json:"ef,omitempty"`          // HNSW
	Radius float32 `protobuf:"fixed32,3,opt,name=radius,proto3" json:"radius,omitempty"` // 距离阈值,范围搜索时有效
}

func (x *SearchParams) Reset() {
	*x = SearchParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchParams) ProtoMessage() {}

func (x *SearchParams) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchParams.ProtoReflect.Descriptor instead.
func (*SearchParams) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{70}
}

func (x *SearchParams) GetNprobe() uint32 {
	if x != nil {
		return x.Nprobe
	}
	return 0
}

func (x *SearchParams) GetEf() uint32 {
	if x != nil {
		return x.Ef
	}
	return 0
}

func (x *SearchParams) GetRadius() float32 {
	if x != nil {
		return x.Radius
	}
	return 0
}

type VectorArray struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vector []float32 `protobuf:"fixed32,1,rep,packed,name=vector,proto3" json:"vector,omitempty"`
}

func (x *VectorArray) Reset() {
	*x = VectorArray{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VectorArray) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VectorArray) ProtoMessage() {}

func (x *VectorArray) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VectorArray.ProtoReflect.Descriptor instead.
func (*VectorArray) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{71}
}

func (x *VectorArray) GetVector() []float32 {
	if x != nil {
		return x.Vector
	}
	return nil
}

type SearchCond struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vectors        []*VectorArray `protobuf:"bytes,1,rep,name=vectors,proto3" json:"vectors,omitempty"`         // 使用向量值检索
	DocumentIds    []string       `protobuf:"bytes,2,rep,name=documentIds,proto3" json:"documentIds,omitempty"` // 使用向量id检索
	Params         *SearchParams  `protobuf:"bytes,3,opt,name=params,proto3" json:"params,omitempty"`
	Filter         string         `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`                  // 过滤条件
	RetrieveVector bool           `protobuf:"varint,5,opt,name=retrieveVector,proto3" json:"retrieveVector,omitempty"` // 是否返回原始向量，注意设置为true时会降低性能
	Limit          uint32         `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`                   // 结果数量
	Outputfields   []string       `protobuf:"bytes,7,rep,name=outputfields,proto3" json:"outputfields,omitempty"`      // 输出字段
	Retrieves      []string       `protobuf:"bytes,8,rep,name=retrieves,proto3" json:"retrieves,omitempty"`            // 使用字符串检索
}

func (x *SearchCond) Reset() {
	*x = SearchCond{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchCond) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCond) ProtoMessage() {}

func (x *SearchCond) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCond.ProtoReflect.Descriptor instead.
func (*SearchCond) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{72}
}

func (x *SearchCond) GetVectors() []*VectorArray {
	if x != nil {
		return x.Vectors
	}
	return nil
}

func (x *SearchCond) GetDocumentIds() []string {
	if x != nil {
		return x.DocumentIds
	}
	return nil
}

func (x *SearchCond) GetParams() *SearchParams {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *SearchCond) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *SearchCond) GetRetrieveVector() bool {
	if x != nil {
		return x.RetrieveVector
	}
	return false
}

func (x *SearchCond) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchCond) GetOutputfields() []string {
	if x != nil {
		return x.Outputfields
	}
	return nil
}

func (x *SearchCond) GetRetrieves() []string {
	if x != nil {
		return x.Retrieves
	}
	return nil
}

type SearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database        string      `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Collection      string      `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`           // 索引名称
	Search          *SearchCond `protobuf:"bytes,3,opt,name=search,proto3" json:"search,omitempty"`                   // 检索条件
	ReadConsistency string      `protobuf:"bytes,4,opt,name=readConsistency,proto3" json:"readConsistency,omitempty"` // 读取一致性
}

func (x *SearchRequest) Reset() {
	*x = SearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRequest) ProtoMessage() {}

func (x *SearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRequest.ProtoReflect.Descriptor instead.
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{73}
}

func (x *SearchRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *SearchRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *SearchRequest) GetSearch() *SearchCond {
	if x != nil {
		return x.Search
	}
	return nil
}

func (x *SearchRequest) GetReadConsistency() string {
	if x != nil {
		return x.ReadConsistency
	}
	return ""
}

type ExposeDataUni struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExposeName string `protobuf:"bytes,1,opt,name=expose_name,json=exposeName,proto3" json:"expose_name,omitempty"` // 一个曝光去重的名称
	Buffer     []byte `protobuf:"bytes,2,opt,name=buffer,proto3" json:"buffer,omitempty"`                           // 一个曝光去重的原始二进制数据
}

func (x *ExposeDataUni) Reset() {
	*x = ExposeDataUni{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExposeDataUni) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExposeDataUni) ProtoMessage() {}

func (x *ExposeDataUni) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExposeDataUni.ProtoReflect.Descriptor instead.
func (*ExposeDataUni) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{74}
}

func (x *ExposeDataUni) GetExposeName() string {
	if x != nil {
		return x.ExposeName
	}
	return ""
}

func (x *ExposeDataUni) GetBuffer() []byte {
	if x != nil {
		return x.Buffer
	}
	return nil
}

type ExposeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExposeDataUni []*ExposeDataUni `protobuf:"bytes,1,rep,name=expose_data_uni,json=exposeDataUni,proto3" json:"expose_data_uni,omitempty"` // 多种曝光去重数据
}

func (x *ExposeData) Reset() {
	*x = ExposeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExposeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExposeData) ProtoMessage() {}

func (x *ExposeData) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExposeData.ProtoReflect.Descriptor instead.
func (*ExposeData) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{75}
}

func (x *ExposeData) GetExposeDataUni() []*ExposeDataUni {
	if x != nil {
		return x.ExposeDataUni
	}
	return nil
}

type Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Expr       string      `protobuf:"bytes,1,opt,name=expr,proto3" json:"expr,omitempty"`                               // 条件过滤
	Radius     float32     `protobuf:"fixed32,2,opt,name=radius,proto3" json:"radius,omitempty"`                         // 距离过滤
	Size       uint32      `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`                              // 设置分片返回的结果数量,需要小于整体返回的数量
	ExposeData *ExposeData `protobuf:"bytes,4,opt,name=expose_data,json=exposeData,proto3" json:"expose_data,omitempty"` // 曝光过滤
}

func (x *Filter) Reset() {
	*x = Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filter) ProtoMessage() {}

func (x *Filter) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filter.ProtoReflect.Descriptor instead.
func (*Filter) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{76}
}

func (x *Filter) GetExpr() string {
	if x != nil {
		return x.Expr
	}
	return ""
}

func (x *Filter) GetRadius() float32 {
	if x != nil {
		return x.Radius
	}
	return 0
}

func (x *Filter) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Filter) GetExposeData() *ExposeData {
	if x != nil {
		return x.ExposeData
	}
	return nil
}

type RoaringBinary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Size int64  `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *RoaringBinary) Reset() {
	*x = RoaringBinary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoaringBinary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoaringBinary) ProtoMessage() {}

func (x *RoaringBinary) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoaringBinary.ProtoReflect.Descriptor instead.
func (*RoaringBinary) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{77}
}

func (x *RoaringBinary) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *RoaringBinary) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type SearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32           `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg      string          `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Redirect string          `protobuf:"bytes,3,opt,name=redirect,proto3" json:"redirect,omitempty"`
	Results  []*SearchResult `protobuf:"bytes,4,rep,name=results,proto3" json:"results,omitempty"`
	Warning  string          `protobuf:"bytes,5,opt,name=warning,proto3" json:"warning,omitempty"`
}

func (x *SearchResponse) Reset() {
	*x = SearchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResponse) ProtoMessage() {}

func (x *SearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResponse.ProtoReflect.Descriptor instead.
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{78}
}

func (x *SearchResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SearchResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SearchResponse) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *SearchResponse) GetResults() []*SearchResult {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *SearchResponse) GetWarning() string {
	if x != nil {
		return x.Warning
	}
	return ""
}

type SortCond struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SortVec []float32 `protobuf:"fixed32,1,rep,packed,name=sort_vec,json=sortVec,proto3" json:"sort_vec,omitempty"`
	SortId  string    `protobuf:"bytes,2,opt,name=sort_id,json=sortId,proto3" json:"sort_id,omitempty"`
	Ids     []string  `protobuf:"bytes,3,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *SortCond) Reset() {
	*x = SortCond{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SortCond) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SortCond) ProtoMessage() {}

func (x *SortCond) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SortCond.ProtoReflect.Descriptor instead.
func (*SortCond) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{79}
}

func (x *SortCond) GetSortVec() []float32 {
	if x != nil {
		return x.SortVec
	}
	return nil
}

func (x *SortCond) GetSortId() string {
	if x != nil {
		return x.SortId
	}
	return ""
}

func (x *SortCond) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type SortRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database   string          `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Collection string          `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`
	ShardIdx   int32           `protobuf:"varint,3,opt,name=shard_idx,json=shardIdx,proto3" json:"shard_idx,omitempty"` // use in internal
	Cond       *SortCond       `protobuf:"bytes,4,opt,name=cond,proto3" json:"cond,omitempty"`
	Limit      uint32          `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	Metric     IndexMetricType `protobuf:"varint,6,opt,name=metric,proto3,enum=olama.IndexMetricType" json:"metric,omitempty"`
}

func (x *SortRequest) Reset() {
	*x = SortRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SortRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SortRequest) ProtoMessage() {}

func (x *SortRequest) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SortRequest.ProtoReflect.Descriptor instead.
func (*SortRequest) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{80}
}

func (x *SortRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *SortRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *SortRequest) GetShardIdx() int32 {
	if x != nil {
		return x.ShardIdx
	}
	return 0
}

func (x *SortRequest) GetCond() *SortCond {
	if x != nil {
		return x.Cond
	}
	return nil
}

func (x *SortRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SortRequest) GetMetric() IndexMetricType {
	if x != nil {
		return x.Metric
	}
	return IndexMetricType_INDEX_METRIC_INNER_PRODUCT
}

type SortResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code         int32       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg          string      `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Redirect     string      `protobuf:"bytes,3,opt,name=redirect,proto3" json:"redirect,omitempty"`
	Documents    []*Document `protobuf:"bytes,4,rep,name=documents,proto3" json:"documents,omitempty"`
	InvalidConds []string    `protobuf:"bytes,5,rep,name=invalid_conds,json=invalidConds,proto3" json:"invalid_conds,omitempty"`
}

func (x *SortResponse) Reset() {
	*x = SortResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SortResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SortResponse) ProtoMessage() {}

func (x *SortResponse) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SortResponse.ProtoReflect.Descriptor instead.
func (*SortResponse) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{81}
}

func (x *SortResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SortResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SortResponse) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *SortResponse) GetDocuments() []*Document {
	if x != nil {
		return x.Documents
	}
	return nil
}

func (x *SortResponse) GetInvalidConds() []string {
	if x != nil {
		return x.InvalidConds
	}
	return nil
}

type SaveIndexModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database   string `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Collection string `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`
	Offset     uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Size       uint64 `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	Content    []byte `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	Cksm       string `protobuf:"bytes,6,opt,name=cksm,proto3" json:"cksm,omitempty"`
}

func (x *SaveIndexModelRequest) Reset() {
	*x = SaveIndexModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveIndexModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveIndexModelRequest) ProtoMessage() {}

func (x *SaveIndexModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveIndexModelRequest.ProtoReflect.Descriptor instead.
func (*SaveIndexModelRequest) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{82}
}

func (x *SaveIndexModelRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *SaveIndexModelRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *SaveIndexModelRequest) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *SaveIndexModelRequest) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SaveIndexModelRequest) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *SaveIndexModelRequest) GetCksm() string {
	if x != nil {
		return x.Cksm
	}
	return ""
}

type SaveIndexModelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg      string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Redirect string `protobuf:"bytes,3,opt,name=redirect,proto3" json:"redirect,omitempty"`
}

func (x *SaveIndexModelResponse) Reset() {
	*x = SaveIndexModelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveIndexModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveIndexModelResponse) ProtoMessage() {}

func (x *SaveIndexModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveIndexModelResponse.ProtoReflect.Descriptor instead.
func (*SaveIndexModelResponse) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{83}
}

func (x *SaveIndexModelResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SaveIndexModelResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SaveIndexModelResponse) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

type GetIndexModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database   string `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Collection string `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`
	Offset     uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Count      uint64 `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetIndexModelRequest) Reset() {
	*x = GetIndexModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIndexModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIndexModelRequest) ProtoMessage() {}

func (x *GetIndexModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIndexModelRequest.ProtoReflect.Descriptor instead.
func (*GetIndexModelRequest) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{84}
}

func (x *GetIndexModelRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *GetIndexModelRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *GetIndexModelRequest) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetIndexModelRequest) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetIndexModelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg      string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Redirect string `protobuf:"bytes,3,opt,name=redirect,proto3" json:"redirect,omitempty"`
	Content  []byte `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	Size     uint64 `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
	Cksm     string `protobuf:"bytes,6,opt,name=cksm,proto3" json:"cksm,omitempty"`
}

func (x *GetIndexModelResponse) Reset() {
	*x = GetIndexModelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIndexModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIndexModelResponse) ProtoMessage() {}

func (x *GetIndexModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIndexModelResponse.ProtoReflect.Descriptor instead.
func (*GetIndexModelResponse) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{85}
}

func (x *GetIndexModelResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetIndexModelResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetIndexModelResponse) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *GetIndexModelResponse) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *GetIndexModelResponse) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GetIndexModelResponse) GetCksm() string {
	if x != nil {
		return x.Cksm
	}
	return ""
}

type CreateShardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conf    *ShardConf `protobuf:"bytes,1,opt,name=conf,proto3" json:"conf,omitempty"`
	Recover bool       `protobuf:"varint,2,opt,name=recover,proto3" json:"recover,omitempty"`
}

func (x *CreateShardRequest) Reset() {
	*x = CreateShardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateShardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateShardRequest) ProtoMessage() {}

func (x *CreateShardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateShardRequest.ProtoReflect.Descriptor instead.
func (*CreateShardRequest) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{86}
}

func (x *CreateShardRequest) GetConf() *ShardConf {
	if x != nil {
		return x.Conf
	}
	return nil
}

func (x *CreateShardRequest) GetRecover() bool {
	if x != nil {
		return x.Recover
	}
	return false
}

type CreateShardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg      string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Redirect string `protobuf:"bytes,3,opt,name=redirect,proto3" json:"redirect,omitempty"`
}

func (x *CreateShardResponse) Reset() {
	*x = CreateShardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateShardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateShardResponse) ProtoMessage() {}

func (x *CreateShardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateShardResponse.ProtoReflect.Descriptor instead.
func (*CreateShardResponse) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{87}
}

func (x *CreateShardResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateShardResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CreateShardResponse) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

type DeleteShardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database    string `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Collection  string `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`
	ShardIdx    int32  `protobuf:"varint,3,opt,name=shard_idx,json=shardIdx,proto3" json:"shard_idx,omitempty"`
	RemoveModel bool   `protobuf:"varint,4,opt,name=remove_model,json=removeModel,proto3" json:"remove_model,omitempty"`
	PeerId      string `protobuf:"bytes,5,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
}

func (x *DeleteShardRequest) Reset() {
	*x = DeleteShardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteShardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteShardRequest) ProtoMessage() {}

func (x *DeleteShardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteShardRequest.ProtoReflect.Descriptor instead.
func (*DeleteShardRequest) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{88}
}

func (x *DeleteShardRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *DeleteShardRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *DeleteShardRequest) GetShardIdx() int32 {
	if x != nil {
		return x.ShardIdx
	}
	return 0
}

func (x *DeleteShardRequest) GetRemoveModel() bool {
	if x != nil {
		return x.RemoveModel
	}
	return false
}

func (x *DeleteShardRequest) GetPeerId() string {
	if x != nil {
		return x.PeerId
	}
	return ""
}

type DeleteShardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg      string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Redirect string `protobuf:"bytes,3,opt,name=redirect,proto3" json:"redirect,omitempty"`
}

func (x *DeleteShardResponse) Reset() {
	*x = DeleteShardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteShardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteShardResponse) ProtoMessage() {}

func (x *DeleteShardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteShardResponse.ProtoReflect.Descriptor instead.
func (*DeleteShardResponse) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{89}
}

func (x *DeleteShardResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeleteShardResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *DeleteShardResponse) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

type DatabaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database string `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
}

func (x *DatabaseRequest) Reset() {
	*x = DatabaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatabaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseRequest) ProtoMessage() {}

func (x *DatabaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseRequest.ProtoReflect.Descriptor instead.
func (*DatabaseRequest) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{90}
}

func (x *DatabaseRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

type DatabaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code          int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg           string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Redirect      string   `protobuf:"bytes,3,opt,name=redirect,proto3" json:"redirect,omitempty"`
	Databases     []string `protobuf:"bytes,4,rep,name=databases,proto3" json:"databases,omitempty"`
	AffectedCount int32    `protobuf:"varint,5,opt,name=affectedCount,proto3" json:"affectedCount,omitempty"`
}

func (x *DatabaseResponse) Reset() {
	*x = DatabaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_olama_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatabaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseResponse) ProtoMessage() {}

func (x *DatabaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_olama_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseResponse.ProtoReflect.Descriptor instead.
func (*DatabaseResponse) Descriptor() ([]byte, []int) {
	return file_olama_proto_rawDescGZIP(), []int{91}
}

func (x *DatabaseResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DatabaseResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *DatabaseResponse) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *DatabaseResponse) GetDatabases() []string {
	if x != nil {
		return x.Databases
	}
	return nil
}

func (x *DatabaseResponse) GetAffectedCount() int32 {
	if x != nil {
		return x.AffectedCount
	}
	return 0
}

var File_olama_proto protoreflect.FileDescriptor

var file_olama_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6f,
	0x6c, 0x61, 0x6d, 0x61, 0x1a, 0x1a, 0x6a, 0x73, 0x6f, 0x6e, 0x32, 0x70, 0x62, 0x2f, 0x6a, 0x73,
	0x6f, 0x6e, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xdb, 0x02, 0x0a, 0x08, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x02, 0x52, 0x06, 0x76,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x6c,
	0x61, 0x6d, 0x61, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x12, 0x19, 0x0a, 0x08, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66,
	0x72, 0x6f, 0x6d, 0x5f, 0x70, 0x65, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x72, 0x6f, 0x6d, 0x50, 0x65, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x61, 0x72,
	0x64, 0x5f, 0x69, 0x64, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x68, 0x61,
	0x72, 0x64, 0x49, 0x64, 0x78, 0x12, 0x23, 0x0a, 0x0d, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x76, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x6f,
	0x63, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x64, 0x6f,
	0x63, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x47, 0x0a, 0x0b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x22, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x6b,
	0x0a, 0x05, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x19, 0x0a, 0x07, 0x76, 0x61, 0x6c, 0x5f, 0x73,
	0x74, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x53,
	0x74, 0x72, 0x12, 0x19, 0x0a, 0x07, 0x76, 0x61, 0x6c, 0x5f, 0x75, 0x36, 0x34, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x55, 0x36, 0x34, 0x12, 0x1f, 0x0a,
	0x0a, 0x76, 0x61, 0x6c, 0x5f, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x01, 0x48, 0x00, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x42, 0x0b,
	0x0a, 0x09, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x5f, 0x76, 0x61, 0x6c, 0x22, 0x42, 0x0a, 0x0a, 0x4d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x65, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22,
	0xe4, 0x02, 0x0a, 0x0a, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x34,
	0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x15, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x64,
	0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x17, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x6d, 0x65, 0x6d, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x4d, 0x65, 0x6d, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x2c, 0x0a,
	0x12, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x2a, 0x0a, 0x11, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x5f, 0x74, 0x65, 0x72, 0x6d,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x65, 0x64, 0x54, 0x65, 0x72, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x64, 0x5f, 0x73, 0x65,
	0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x64, 0x53, 0x65, 0x65, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x64, 0x64, 0x65, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x64, 0x64, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x12, 0x33, 0x0a, 0x16, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x13, 0x64, 0x61, 0x74, 0x61, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xdb, 0x01, 0x0a, 0x05, 0x53, 0x68, 0x61, 0x72, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x78, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x68, 0x61, 0x72, 0x64, 0x49, 0x64, 0x78, 0x12, 0x1b, 0x0a,
	0x09, 0x69, 0x73, 0x5f, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x69, 0x73, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x6f,
	0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x66,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x12, 0x27, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e,
	0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x5f,
	0x6e, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d,
	0x4e, 0x6f, 0x64, 0x65, 0x22, 0xfe, 0x01, 0x0a, 0x08, 0x57, 0x6f, 0x72, 0x6b, 0x4e, 0x6f, 0x64,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x73,
	0x12, 0x22, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x6d,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x4d, 0x73, 0x12, 0x24, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x72, 0x64, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x53, 0x68, 0x61,
	0x72, 0x64, 0x52, 0x06, 0x73, 0x68, 0x61, 0x72, 0x64, 0x73, 0x12, 0x2a, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x6f, 0x6c, 0x61, 0x6d,
	0x61, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x72,
	0x73, 0x73, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x75,
	0x73, 0x65, 0x64, 0x52, 0x73, 0x73, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x65,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xd8, 0x01, 0x0a, 0x0c, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x73, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x48, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x34, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05,
	0x6e, 0x6f, 0x64, 0x65, 0x73, 0x1a, 0x49, 0x0a, 0x0a, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x25, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x57, 0x6f, 0x72,
	0x6b, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x41, 0x0a, 0x09, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x14, 0x0a,
	0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c,
	0x69, 0x61, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x2f, 0x0a, 0x0c, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0xd5, 0x01, 0x0a, 0x0f, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x2a, 0x0a, 0x07, 0x61, 0x6c, 0x69, 0x61,
	0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6f, 0x6c, 0x61, 0x6d,
	0x61, 0x2e, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x61, 0x6c, 0x69,
	0x61, 0x73, 0x65, 0x73, 0x12, 0x43, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09,
	0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x73, 0x1a, 0x51, 0x0a, 0x0e, 0x44, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x29, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6f,
	0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x52, 0x0a, 0x0c,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x73, 0x65, 0x63, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x53, 0x65, 0x63, 0x73, 0x12, 0x21, 0x0a,
	0x0c, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x5f, 0x64, 0x6f, 0x63, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x44, 0x6f, 0x63, 0x73,
	0x22, 0x81, 0x01, 0x0a, 0x0f, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0xa3, 0x06, 0x0a, 0x0e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x10, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f,
	0x6f, 0x66, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0e, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x53, 0x68, 0x61, 0x72, 0x64, 0x73, 0x12,
	0x2c, 0x0a, 0x12, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x72, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x4f, 0x66, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x06, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x6f, 0x6c,
	0x61, 0x6d, 0x61, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x6e,
	0x70, 0x72, 0x6f, 0x62, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6e, 0x70, 0x72,
	0x6f, 0x62, 0x65, 0x12, 0x3a, 0x0a, 0x0e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f,
	0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6f, 0x6c,
	0x61, 0x6d, 0x61, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x75, 0x6c, 0x65,
	0x52, 0x0d, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12,
	0x2e, 0x0a, 0x06, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x16, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x45, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x44, 0x65, 0x73, 0x63, 0x12, 0x46,
	0x0a, 0x0b, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x18, 0x0f, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x4d, 0x65, 0x74, 0x61, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x4d, 0x65, 0x74, 0x61, 0x73, 0x12, 0x3c, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x2e, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x10, 0x65, 0x6d,
	0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x45, 0x6d, 0x62,
	0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x0f, 0x65, 0x6d,
	0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x4f, 0x0a,
	0x0f, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x26, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d,
	0x65, 0x74, 0x61, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3a,
	0x0a, 0x0c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3c, 0x0a, 0x09, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x2f, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x6f, 0x6c,
	0x61, 0x6d, 0x61, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x22, 0x89, 0x01, 0x0a, 0x09, 0x53, 0x68, 0x61,
	0x72, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f,
	0x69, 0x64, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x68, 0x61, 0x72, 0x64,
	0x49, 0x64, 0x78, 0x12, 0x29, 0x0a, 0x04, 0x63, 0x6f, 0x6e, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x04, 0x63, 0x6f, 0x6e, 0x66, 0x12, 0x14,
	0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6e,
	0x6f, 0x64, 0x65, 0x73, 0x22, 0xdb, 0x02, 0x0a, 0x14, 0x53, 0x68, 0x61, 0x72, 0x64, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x73, 0x68, 0x61, 0x72, 0x64, 0x49, 0x64, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x70, 0x65, 0x65, 0x72, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x50, 0x65, 0x65, 0x72,
	0x73, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x61, 0x6c,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x73, 0x12, 0x28, 0x0a,
	0x10, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x6d,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x6f, 0x70, 0x4d, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x5f, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x4d, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x24, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x72, 0x64, 0x73, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x53, 0x68, 0x61,
	0x72, 0x64, 0x52, 0x06, 0x73, 0x68, 0x61, 0x72, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x69,
	0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x69,
	0x6e, 0x67, 0x22, 0xa4, 0x02, 0x0a, 0x0f, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x04, 0x63, 0x6f, 0x6e, 0x66, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x04, 0x63, 0x6f, 0x6e,
	0x66, 0x12, 0x33, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x06,
	0x73, 0x68, 0x61, 0x72, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x03, 0x72,
	0x65, 0x71, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x03, 0x72, 0x65, 0x71, 0x12, 0x2a, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e,
	0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x51, 0x0a, 0x1b, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6f, 0x6c, 0x61,
	0x6d, 0x61, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x60, 0x0a, 0x1c,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x22, 0x18,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xc7, 0x02, 0x0a, 0x17, 0x47, 0x65, 0x74,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x2b, 0x0a, 0x07, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e,
	0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x07, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x73, 0x12, 0x29, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x52,
	0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x1a, 0x3e, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x63, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x22, 0x44, 0x0a, 0x10, 0x44, 0x72, 0x6f, 0x70, 0x41,
	0x6c, 0x69, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x22, 0x83, 0x01,
	0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x20, 0x0a, 0x08, 0x72,
	0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0x80,
	0xf6, 0x2c, 0x00, 0x52, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x24, 0x0a,
	0x0d, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x43, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x22, 0x86, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x69, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x20, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0x80, 0xf6, 0x2c, 0x00, 0x52, 0x08, 0x72, 0x65, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x2a, 0x0a, 0x07, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x41,
	0x6c, 0x69, 0x61, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x65,
	0x73, 0x22, 0x6f, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x69,
	0x64, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x68, 0x61, 0x72, 0x64, 0x49,
	0x64, 0x78, 0x22, 0x7d, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x22, 0x0a,
	0x05, 0x73, 0x68, 0x61, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6f,
	0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x05, 0x73, 0x68, 0x61, 0x72,
	0x64, 0x22, 0x73, 0x0a, 0x19, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x22, 0xd8, 0x01, 0x0a, 0x1a, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x20, 0x0a, 0x08, 0x72,
	0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0x80,
	0xf6, 0x2c, 0x00, 0x52, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x3e, 0x0a,
	0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6f,
	0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x42, 0x04, 0x80, 0xf6, 0x2c, 0x00, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x22, 0x50, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x22, 0x8e, 0x02, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x20, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0x80, 0xf6, 0x2c, 0x00, 0x52, 0x08, 0x72,
	0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x40, 0x0a, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f,
	0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0b, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6f, 0x6c, 0x61, 0x6d,
	0x61, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x42, 0x04, 0x80, 0xf6, 0x2c, 0x00, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x12,
	0x33, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x04, 0x80, 0xf6, 0x2c, 0x00, 0x52, 0x07, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x22, 0x71, 0x0a, 0x0b, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x12, 0x0c, 0x0a, 0x01, 0x4d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x01,
	0x4d, 0x12, 0x26, 0x0a, 0x0e, 0x65, 0x66, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x65, 0x66, 0x43, 0x6f, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x70, 0x72,
	0x6f, 0x62, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6e, 0x70, 0x72, 0x6f, 0x62,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x6e, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xf5, 0x01, 0x0a, 0x0b, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x64, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22,
	0x5f, 0x0a, 0x0b, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0xac, 0x03, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x72, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x72,
	0x64, 0x4e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x68, 0x61, 0x72,
	0x64, 0x4e, 0x75, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x07, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6f, 0x6c,
	0x61, 0x6d, 0x61, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52,
	0x07, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x0b, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x0b, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x40, 0x0a,
	0x0f, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x45,
	0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x0f,
	0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22,
	0x88, 0x01, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x20, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0x80, 0xf6, 0x2c, 0x00, 0x52, 0x08, 0x72, 0x65, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x61, 0x66, 0x66,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x8e, 0x01, 0x0a, 0x15, 0x44,
	0x72, 0x6f, 0x70, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x77, 0x69, 0x74, 0x68, 0x6f, 0x75,
	0x74, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x77,
	0x69, 0x74, 0x68, 0x6f, 0x75, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x22, 0x86, 0x01, 0x0a, 0x16,
	0x44, 0x72, 0x6f, 0x70, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x20, 0x0a, 0x08,
	0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04,
	0x80, 0xf6, 0x2c, 0x00, 0x52, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x24,
	0x0a, 0x0d, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x85, 0x01, 0x0a, 0x16, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x14, 0x6f,
	0x6e, 0x6c, 0x79, 0x5f, 0x66, 0x6c, 0x75, 0x73, 0x68, 0x5f, 0x61, 0x6e, 0x6e, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x6f, 0x6e, 0x6c, 0x79, 0x46,
	0x6c, 0x75, 0x73, 0x68, 0x41, 0x6e, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x87, 0x01, 0x0a,
	0x17, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x20,
	0x0a, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x04, 0x80, 0xf6, 0x2c, 0x00, 0x52, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x12, 0x24, 0x0a, 0x0d, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x80, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29,
	0x0a, 0x04, 0x63, 0x6f, 0x6e, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6f,
	0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x66, 0x52, 0x04, 0x63, 0x6f, 0x6e, 0x66, 0x22, 0x77, 0x0a, 0x18, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x49,
	0x64, 0x73, 0x22, 0xe5, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x11, 0x64, 0x72, 0x6f, 0x70, 0x42, 0x65,
	0x66, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x11, 0x64, 0x72, 0x6f, 0x70, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x68, 0x72, 0x6f, 0x74, 0x74, 0x6c, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x68, 0x72, 0x6f, 0x74, 0x74, 0x6c, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x69,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x54, 0x72, 0x61, 0x69, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x72,
	0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x66, 0x6f,
	0x72, 0x63, 0x65, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x22, 0x7f, 0x0a, 0x14, 0x52, 0x65,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x20, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0x80, 0xf6, 0x2c, 0x00,
	0x52, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x1f, 0x0a, 0x08, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x42, 0x04, 0x80, 0xf6,
	0x2c, 0x00, 0x52, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x73, 0x22, 0xa1, 0x01, 0x0a, 0x10,
	0x4d, 0x6f, 0x76, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x73, 0x68, 0x61, 0x72, 0x64, 0x49, 0x64, 0x78, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72, 0x6f,
	0x6d, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x72,
	0x6f, 0x6d, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x6f, 0x5f, 0x6e, 0x6f, 0x64,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x4e, 0x6f, 0x64, 0x65, 0x22,
	0x55, 0x0a, 0x11, 0x4d, 0x6f, 0x76, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x22, 0x82, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x65, 0x74,
	0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x61, 0x72,
	0x64, 0x5f, 0x69, 0x64, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x68, 0x61,
	0x72, 0x64, 0x49, 0x64, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x56, 0x0a, 0x12, 0x52,
	0x65, 0x73, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x22, 0xc3, 0x02, 0x0a, 0x0e, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x73,
	0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x62,
	0x61, 0x74, 0x63, 0x68, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x62, 0x61, 0x74, 0x63, 0x68, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x31, 0x0a, 0x15, 0x64, 0x6f,
	0x63, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x5f, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x64, 0x6f, 0x63, 0x73, 0x50,
	0x65, 0x72, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x64, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x65, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x64, 0x65, 0x73, 0x74, 0x50, 0x65, 0x65, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x78, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0d,
	0x52, 0x09, 0x73, 0x68, 0x61, 0x72, 0x64, 0x49, 0x64, 0x78, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x64,
	0x75, 0x6d, 0x70, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x75, 0x6d, 0x70, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x75, 0x6d, 0x70,
	0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x64,
	0x75, 0x6d, 0x70, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x22, 0x6e, 0x0a, 0x0f, 0x4d, 0x69, 0x67,
	0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x73, 0x22, 0x27, 0x0a, 0x0f, 0x49, 0x6e, 0x66,
	0x6f, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x64,
	0x65, 0x73, 0x22, 0x7b, 0x0a, 0x10, 0x49, 0x6e, 0x66, 0x6f, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1a, 0x0a, 0x08,
	0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x25, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e,
	0x57, 0x6f, 0x72, 0x6b, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x22,
	0x27, 0x0a, 0x11, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x22, 0x56, 0x0a, 0x12, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x22, 0x28, 0x0a, 0x10, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x22, 0xb2, 0x02, 0x0a, 0x09, 0x54,
	0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x6d, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x4d, 0x73, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x74, 0x6f, 0x70, 0x65, 0x64, 0x5f, 0x6d, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x73, 0x74, 0x6f, 0x70, 0x65, 0x64, 0x4d, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x6d, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x64, 0x5f, 0x6d, 0x73, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x64, 0x4d, 0x73, 0x22,
	0x7f, 0x0a, 0x11, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x28, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73,
	0x22, 0x9a, 0x01, 0x0a, 0x0d, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e,
	0x0a, 0x0a, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x2d,
	0x0a, 0x09, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x09, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x92, 0x01,
	0x0a, 0x0e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x61, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x61, 0x72, 0x6e,
	0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x61, 0x72, 0x6e, 0x69,
	0x6e, 0x67, 0x22, 0x9c, 0x01, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x26, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e,
	0x64, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x27, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61,
	0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x22, 0x92, 0x01, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x61,
	0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77,
	0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x22, 0x73, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x43, 0x6f, 0x6e, 0x64, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x7e, 0x0a, 0x0e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x20, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0x80, 0xf6, 0x2c, 0x00, 0x52, 0x08, 0x72, 0x65, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x61, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xdb, 0x01, 0x0a, 0x09,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x08, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x49, 0x64, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0e, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x9c, 0x01, 0x0a, 0x0c, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x28,
	0x0a, 0x0f, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x6e,
	0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x9c, 0x01, 0x0a, 0x0d, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x20, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x04, 0x80, 0xf6, 0x2c, 0x00, 0x52, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x12, 0x2d, 0x0a, 0x09, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x44, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x74, 0x0a, 0x0e, 0x45, 0x78, 0x70, 0x6c, 0x61,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x7f, 0x0a,
	0x0f, 0x45, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x20, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0x80, 0xf6, 0x2c, 0x00, 0x52, 0x08,
	0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0d, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3d,
	0x0a, 0x0c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2d,
	0x0a, 0x09, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x09, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x4e, 0x0a,
	0x0c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x6e, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6e,
	0x70, 0x72, 0x6f, 0x62, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x65, 0x66, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x22, 0x25, 0x0a,
	0x0b, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x02, 0x52, 0x06, 0x76, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x22, 0xa1, 0x02, 0x0a, 0x0a, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43,
	0x6f, 0x6e, 0x64, 0x12, 0x2c, 0x0a, 0x07, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x56, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x41, 0x72, 0x72, 0x61, 0x79, 0x52, 0x07, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x73, 0x12, 0x2b, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x76, 0x65, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0e, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x72,
	0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x73, 0x22, 0xa0, 0x01, 0x0a, 0x0d, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x64, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x61, 0x64,
	0x43, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x48, 0x0a, 0x0d, 0x45,
	0x78, 0x70, 0x6f, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x55, 0x6e, 0x69, 0x12, 0x1f, 0x0a, 0x0b,
	0x65, 0x78, 0x70, 0x6f, 0x73, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x6f, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x62,
	0x75, 0x66, 0x66, 0x65, 0x72, 0x22, 0x4a, 0x0a, 0x0a, 0x45, 0x78, 0x70, 0x6f, 0x73, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x3c, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x6f, 0x73, 0x65, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x75, 0x6e, 0x69, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6f,
	0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x55,
	0x6e, 0x69, 0x52, 0x0d, 0x65, 0x78, 0x70, 0x6f, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x55, 0x6e,
	0x69, 0x22, 0x7c, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x65,
	0x78, 0x70, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x65, 0x78, 0x70, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x06, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x32, 0x0a, 0x0b, 0x65,
	0x78, 0x70, 0x6f, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x73, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x6f, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22,
	0x37, 0x0a, 0x0d, 0x52, 0x6f, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x9b, 0x01, 0x0a, 0x0e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x2d, 0x0a,
	0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77,
	0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x22, 0x50, 0x0a, 0x08, 0x53, 0x6f, 0x72, 0x74, 0x43, 0x6f,
	0x6e, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x65, 0x63, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x02, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x56, 0x65, 0x63, 0x12, 0x17, 0x0a,
	0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0xd1, 0x01, 0x0a, 0x0b, 0x53, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64,
	0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x68, 0x61, 0x72, 0x64, 0x49, 0x64,
	0x78, 0x12, 0x23, 0x0a, 0x04, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64,
	0x52, 0x04, 0x63, 0x6f, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x2e, 0x0a, 0x06,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x6f,
	0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x22, 0xa4, 0x01, 0x0a,
	0x0c, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12,
	0x2d, 0x0a, 0x09, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x09, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x23,
	0x0a, 0x0d, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x43, 0x6f,
	0x6e, 0x64, 0x73, 0x22, 0xad, 0x01, 0x0a, 0x15, 0x53, 0x61, 0x76, 0x65, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6b, 0x73, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6b, 0x73, 0x6d, 0x22, 0x5a, 0x0a, 0x16, 0x53, 0x61, 0x76, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x22,
	0x80, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x9b, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6b, 0x73, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6b, 0x73, 0x6d,
	0x22, 0x54, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x04, 0x63, 0x6f, 0x6e, 0x66, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x53, 0x68, 0x61,
	0x72, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x04, 0x63, 0x6f, 0x6e, 0x66, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x72,
	0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x22, 0x57, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x22,
	0xa9, 0x01, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x78, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x68, 0x61, 0x72, 0x64, 0x49, 0x64, 0x78, 0x12,
	0x21, 0x0a, 0x0c, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x64, 0x22, 0x57, 0x0a, 0x13, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x22, 0x2d, 0x0a, 0x0f, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x22, 0x9e, 0x01, 0x0a, 0x10, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x20,
	0x0a, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x04, 0x80, 0xf6, 0x2c, 0x00, 0x52, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x73, 0x12, 0x24,
	0x0a, 0x0d, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x2a, 0x38, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x53, 0x47, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f,
	0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x4d, 0x53, 0x47,
	0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x2a, 0x6e,
	0x0a, 0x0c, 0x57, 0x6f, 0x72, 0x6b, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12,
	0x0a, 0x0e, 0x57, 0x4f, 0x52, 0x4b, 0x45, 0x52, 0x5f, 0x55, 0x4e, 0x5f, 0x49, 0x4e, 0x49, 0x54,
	0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x57, 0x4f, 0x52, 0x4b, 0x45, 0x52, 0x5f, 0x42, 0x4f, 0x4f,
	0x54, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x57, 0x4f, 0x52, 0x4b, 0x45, 0x52,
	0x5f, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x57, 0x4f,
	0x52, 0x4b, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x4f, 0x50, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x57,
	0x4f, 0x52, 0x4b, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x4f, 0x50, 0x45, 0x44, 0x10, 0x04, 0x2a, 0x77,
	0x0a, 0x0d, 0x57, 0x6f, 0x72, 0x6b, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x10, 0x0a, 0x0c, 0x57, 0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10,
	0x00, 0x12, 0x1a, 0x0a, 0x16, 0x57, 0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x54, 0x45, 0x4d, 0x50, 0x5f,
	0x55, 0x4e, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x11, 0x0a,
	0x0d, 0x57, 0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x10, 0x02,
	0x12, 0x12, 0x0a, 0x0e, 0x57, 0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x49, 0x4e, 0x41, 0x43, 0x54, 0x49,
	0x56, 0x45, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x57, 0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x42, 0x4f,
	0x4f, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x2a, 0x73, 0x0a, 0x0e, 0x53, 0x68, 0x61, 0x72, 0x64,
	0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x48, 0x41,
	0x52, 0x44, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x59, 0x10, 0x00,
	0x12, 0x18, 0x0a, 0x14, 0x53, 0x48, 0x41, 0x52, 0x44, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f,
	0x54, 0x52, 0x41, 0x49, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x48,
	0x41, 0x52, 0x44, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x49,
	0x4e, 0x47, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x48, 0x41, 0x52, 0x44, 0x5f, 0x49, 0x4e,
	0x44, 0x45, 0x58, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x2a, 0x42, 0x0a, 0x0b,
	0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x48,
	0x45, 0x41, 0x4c, 0x54, 0x48, 0x5f, 0x47, 0x52, 0x45, 0x45, 0x4e, 0x10, 0x00, 0x12, 0x11, 0x0a,
	0x0d, 0x48, 0x45, 0x41, 0x4c, 0x54, 0x48, 0x5f, 0x59, 0x45, 0x4c, 0x4c, 0x4f, 0x57, 0x10, 0x01,
	0x12, 0x0e, 0x0a, 0x0a, 0x48, 0x45, 0x41, 0x4c, 0x54, 0x48, 0x5f, 0x52, 0x45, 0x44, 0x10, 0x02,
	0x2a, 0x79, 0x0a, 0x0f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x1a, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x4d, 0x45, 0x54,
	0x52, 0x49, 0x43, 0x5f, 0x49, 0x4e, 0x4e, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43,
	0x54, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x4d, 0x45, 0x54,
	0x52, 0x49, 0x43, 0x5f, 0x4c, 0x32, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x49, 0x4e, 0x44, 0x45,
	0x58, 0x5f, 0x4d, 0x45, 0x54, 0x52, 0x49, 0x43, 0x5f, 0x43, 0x4f, 0x53, 0x49, 0x4e, 0x45, 0x10,
	0x02, 0x12, 0x18, 0x0a, 0x14, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f, 0x4d, 0x45, 0x54, 0x52, 0x49,
	0x43, 0x5f, 0x48, 0x41, 0x4d, 0x4d, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x2a, 0x57, 0x0a, 0x0f, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17,
	0x0a, 0x13, 0x45, 0x4e, 0x47, 0x49, 0x4e, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x53, 0x53, 0x5f, 0x56,
	0x45, 0x43, 0x54, 0x4f, 0x52, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x4e, 0x47, 0x49, 0x4e,
	0x45, 0x5f, 0x46, 0x41, 0x49, 0x53, 0x53, 0x5f, 0x42, 0x49, 0x4e, 0x41, 0x52, 0x59, 0x10, 0x01,
	0x12, 0x12, 0x0a, 0x0e, 0x45, 0x4e, 0x47, 0x49, 0x4e, 0x45, 0x5f, 0x48, 0x4e, 0x53, 0x57, 0x4c,
	0x49, 0x42, 0x10, 0x03, 0x2a, 0x44, 0x0a, 0x09, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47,
	0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x54, 0x52, 0x49, 0x4e,
	0x47, 0x5f, 0x41, 0x52, 0x52, 0x41, 0x59, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x55, 0x49, 0x4e, 0x54, 0x36, 0x34, 0x10, 0x02, 0x32, 0xa8, 0x11, 0x0a, 0x0c, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x12, 0x5a, 0x0a, 0x0f, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x22,
	0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x11, 0x67, 0x65, 0x74, 0x5f, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x6f,
	0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6f, 0x6c,
	0x61, 0x6d, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x08, 0x73,
	0x65, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x16, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e,
	0x53, 0x65, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1a, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c,
	0x69, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x08, 0x67,
	0x65, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x16, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x17, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x09, 0x64, 0x72, 0x6f, 0x70,
	0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x17, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x44, 0x72,
	0x6f, 0x70, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
	0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x69,
	0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x10, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e,
	0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f,
	0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4d, 0x0a, 0x0e, 0x64, 0x72, 0x6f, 0x70, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1c, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x44, 0x72, 0x6f, 0x70, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1d, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x44, 0x72, 0x6f, 0x70, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50,
	0x0a, 0x0f, 0x66, 0x6c, 0x75, 0x73, 0x68, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1d, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x59, 0x0a, 0x12, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61,
	0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0f, 0x6c,
	0x69, 0x73, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1d,
	0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e,
	0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a,
	0x10, 0x73, 0x61, 0x76, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x12, 0x1c, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1d, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c,
	0x0a, 0x0f, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x12, 0x1b, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c,
	0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x10,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1e, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1f, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x47, 0x0a, 0x0c, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x1a, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x6d, 0x6f,
	0x76, 0x65, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x12, 0x17, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61,
	0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x18, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x53, 0x68,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0b, 0x72,
	0x65, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x12, 0x18, 0x2e, 0x6f, 0x6c, 0x61,
	0x6d, 0x61, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x52, 0x65, 0x73,
	0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x45, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x12,
	0x19, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x68,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6f, 0x6c, 0x61,
	0x6d, 0x61, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x12, 0x6d, 0x69, 0x67, 0x72, 0x61, 0x74,
	0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x2e, 0x6f,
	0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x4d, 0x69, 0x67, 0x72,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x09, 0x69,
	0x6e, 0x66, 0x6f, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61,
	0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x17, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x4e, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0b, 0x72, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61,
	0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a,
	0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x17, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x18, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x06, 0x75, 0x70, 0x73,
	0x65, 0x72, 0x74, 0x12, 0x14, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x55, 0x70, 0x73, 0x65,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x6f, 0x6c, 0x61, 0x6d,
	0x61, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x35, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x14, 0x2e, 0x6f, 0x6c, 0x61,
	0x6d, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x15, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x12, 0x13, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x06, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x14, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x6f, 0x6c,
	0x61, 0x6d, 0x61, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x65, 0x6c, 0x65, 0x12, 0x14, 0x2e, 0x6f, 0x6c, 0x61,
	0x6d, 0x61, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x15, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0c, 0x72, 0x61, 0x6e, 0x67, 0x65,
	0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x14, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e,
	0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x2e, 0x6f,
	0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x13, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x07, 0x65, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e,
	0x12, 0x15, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x45, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e,
	0x45, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x41, 0x0a, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x12, 0x16, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6f, 0x6c, 0x61, 0x6d,
	0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0c, 0x64, 0x72, 0x6f, 0x70, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x12, 0x16, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6f, 0x6c, 0x61,
	0x6d, 0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0d, 0x6c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x6f, 0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6f,
	0x6c, 0x61, 0x6d, 0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0d, 0x5a, 0x08, 0x2e, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x80, 0x01, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_olama_proto_rawDescOnce sync.Once
	file_olama_proto_rawDescData = file_olama_proto_rawDesc
)

func file_olama_proto_rawDescGZIP() []byte {
	file_olama_proto_rawDescOnce.Do(func() {
		file_olama_proto_rawDescData = protoimpl.X.CompressGZIP(file_olama_proto_rawDescData)
	})
	return file_olama_proto_rawDescData
}

var file_olama_proto_enumTypes = make([]protoimpl.EnumInfo, 8)
var file_olama_proto_msgTypes = make([]protoimpl.MessageInfo, 98)
var file_olama_proto_goTypes = []interface{}{
	(MessageCode)(0),                     // 0: olama.MessageCode
	(WorkRunState)(0),                    // 1: olama.WorkRunState
	(WorkNodeState)(0),                   // 2: olama.WorkNodeState
	(ShardDataState)(0),                  // 3: olama.ShardDataState
	(HealthState)(0),                     // 4: olama.HealthState
	(IndexMetricType)(0),                 // 5: olama.IndexMetricType
	(IndexEngineType)(0),                 // 6: olama.IndexEngineType
	(FieldType)(0),                       // 7: olama.FieldType
	(*Document)(nil),                     // 8: olama.Document
	(*Field)(nil),                        // 9: olama.Field
	(*MasterNode)(nil),                   // 10: olama.MasterNode
	(*ShardState)(nil),                   // 11: olama.ShardState
	(*Shard)(nil),                        // 12: olama.Shard
	(*WorkNode)(nil),                     // 13: olama.WorkNode
	(*ClusterState)(nil),                 // 14: olama.ClusterState
	(*AliasItem)(nil),                    // 15: olama.AliasItem
	(*DatabaseItem)(nil),                 // 16: olama.DatabaseItem
	(*ClusterSettings)(nil),              // 17: olama.ClusterSettings
	(*SnapshotRule)(nil),                 // 18: olama.SnapshotRule
	(*EmbeddingParams)(nil),              // 19: olama.EmbeddingParams
	(*CollectionConf)(nil),               // 20: olama.CollectionConf
	(*FieldMeta)(nil),                    // 21: olama.FieldMeta
	(*ShardConf)(nil),                    // 22: olama.ShardConf
	(*ShardCollectionState)(nil),         // 23: olama.ShardCollectionState
	(*CollectionState)(nil),              // 24: olama.CollectionState
	(*UpdateClusterSettingRequest)(nil),  // 25: olama.UpdateClusterSettingRequest
	(*UpdateClusterSettingResponse)(nil), // 26: olama.UpdateClusterSettingResponse
	(*GetClusterStateRequest)(nil),       // 27: olama.GetClusterStateRequest
	(*GetClusterStateResponse)(nil),      // 28: olama.GetClusterStateResponse
	(*SetAliasRequest)(nil),              // 29: olama.SetAliasRequest
	(*DropAliasRequest)(nil),             // 30: olama.DropAliasRequest
	(*UpdateAliasResponse)(nil),          // 31: olama.UpdateAliasResponse
	(*GetAliasRequest)(nil),              // 32: olama.GetAliasRequest
	(*GetAliasResponse)(nil),             // 33: olama.GetAliasResponse
	(*GetShardStateRequest)(nil),         // 34: olama.GetShardStateRequest
	(*GetShardStateResponse)(nil),        // 35: olama.GetShardStateResponse
	(*DescribeCollectionRequest)(nil),    // 36: olama.DescribeCollectionRequest
	(*DescribeCollectionResponse)(nil),   // 37: olama.DescribeCollectionResponse
	(*ListCollectionsRequest)(nil),       // 38: olama.ListCollectionsRequest
	(*ListCollectionsResponse)(nil),      // 39: olama.ListCollectionsResponse
	(*IndexParams)(nil),                  // 40: olama.IndexParams
	(*IndexColumn)(nil),                  // 41: olama.IndexColumn
	(*IndexStatus)(nil),                  // 42: olama.indexStatus
	(*CreateCollectionRequest)(nil),      // 43: olama.CreateCollectionRequest
	(*CreateCollectionResponse)(nil),     // 44: olama.CreateCollectionResponse
	(*DropCollectionRequest)(nil),        // 45: olama.DropCollectionRequest
	(*DropCollectionResponse)(nil),       // 46: olama.DropCollectionResponse
	(*FlushCollectionRequest)(nil),       // 47: olama.FlushCollectionRequest
	(*FlushCollectionResponse)(nil),      // 48: olama.FlushCollectionResponse
	(*UpdateCollectionRequest)(nil),      // 49: olama.UpdateCollectionRequest
	(*UpdateCollectionResponse)(nil),     // 50: olama.UpdateCollectionResponse
	(*RebuildIndexRequest)(nil),          // 51: olama.RebuildIndexRequest
	(*RebuildIndexResponse)(nil),         // 52: olama.RebuildIndexResponse
	(*MoveShardRequest)(nil),             // 53: olama.MoveShardRequest
	(*MoveShardResponse)(nil),            // 54: olama.MoveShardResponse
	(*ResetShardRequest)(nil),            // 55: olama.ResetShardRequest
	(*ResetShardResponse)(nil),           // 56: olama.ResetShardResponse
	(*MigrateRequest)(nil),               // 57: olama.MigrateRequest
	(*MigrateResponse)(nil),              // 58: olama.MigrateResponse
	(*InfoNodeRequest)(nil),              // 59: olama.InfoNodeRequest
	(*InfoNodeResponse)(nil),             // 60: olama.InfoNodeResponse
	(*RemoveNodeRequest)(nil),            // 61: olama.RemoveNodeRequest
	(*RemoveNodeResponse)(nil),           // 62: olama.RemoveNodeResponse
	(*TaskStateRequest)(nil),             // 63: olama.TaskStateRequest
	(*TaskState)(nil),                    // 64: olama.TaskState
	(*TaskStateResponse)(nil),            // 65: olama.TaskStateResponse
	(*UpsertRequest)(nil),                // 66: olama.UpsertRequest
	(*UpsertResponse)(nil),               // 67: olama.UpsertResponse
	(*UpdateRequest)(nil),                // 68: olama.UpdateRequest
	(*UpdateResponse)(nil),               // 69: olama.UpdateResponse
	(*DeleteRequest)(nil),                // 70: olama.DeleteRequest
	(*DeleteResponse)(nil),               // 71: olama.DeleteResponse
	(*QueryCond)(nil),                    // 72: olama.QueryCond
	(*QueryRequest)(nil),                 // 73: olama.QueryRequest
	(*QueryResponse)(nil),                // 74: olama.QueryResponse
	(*ExplainRequest)(nil),               // 75: olama.ExplainRequest
	(*ExplainResponse)(nil),              // 76: olama.ExplainResponse
	(*SearchResult)(nil),                 // 77: olama.SearchResult
	(*SearchParams)(nil),                 // 78: olama.SearchParams
	(*VectorArray)(nil),                  // 79: olama.VectorArray
	(*SearchCond)(nil),                   // 80: olama.SearchCond
	(*SearchRequest)(nil),                // 81: olama.SearchRequest
	(*ExposeDataUni)(nil),                // 82: olama.ExposeDataUni
	(*ExposeData)(nil),                   // 83: olama.ExposeData
	(*Filter)(nil),                       // 84: olama.Filter
	(*RoaringBinary)(nil),                // 85: olama.RoaringBinary
	(*SearchResponse)(nil),               // 86: olama.SearchResponse
	(*SortCond)(nil),                     // 87: olama.SortCond
	(*SortRequest)(nil),                  // 88: olama.SortRequest
	(*SortResponse)(nil),                 // 89: olama.SortResponse
	(*SaveIndexModelRequest)(nil),        // 90: olama.SaveIndexModelRequest
	(*SaveIndexModelResponse)(nil),       // 91: olama.SaveIndexModelResponse
	(*GetIndexModelRequest)(nil),         // 92: olama.GetIndexModelRequest
	(*GetIndexModelResponse)(nil),        // 93: olama.GetIndexModelResponse
	(*CreateShardRequest)(nil),           // 94: olama.CreateShardRequest
	(*CreateShardResponse)(nil),          // 95: olama.CreateShardResponse
	(*DeleteShardRequest)(nil),           // 96: olama.DeleteShardRequest
	(*DeleteShardResponse)(nil),          // 97: olama.DeleteShardResponse
	(*DatabaseRequest)(nil),              // 98: olama.DatabaseRequest
	(*DatabaseResponse)(nil),             // 99: olama.DatabaseResponse
	nil,                                  // 100: olama.Document.FieldsEntry
	nil,                                  // 101: olama.ClusterState.NodesEntry
	nil,                                  // 102: olama.ClusterSettings.DatabasesEntry
	nil,                                  // 103: olama.CollectionConf.FieldMetasEntry
	nil,                                  // 104: olama.CollectionConf.OptionsEntry
	nil,                                  // 105: olama.GetClusterStateResponse.ServerInfosEntry
}
var file_olama_proto_depIdxs = []int32{
	100, // 0: olama.Document.fields:type_name -> olama.Document.FieldsEntry
	3,   // 1: olama.ShardState.data_state:type_name -> olama.ShardDataState
	11,  // 2: olama.Shard.state:type_name -> olama.ShardState
	12,  // 3: olama.WorkNode.shards:type_name -> olama.Shard
	2,   // 4: olama.WorkNode.state:type_name -> olama.WorkNodeState
	4,   // 5: olama.ClusterState.status:type_name -> olama.HealthState
	101, // 6: olama.ClusterState.nodes:type_name -> olama.ClusterState.NodesEntry
	15,  // 7: olama.ClusterSettings.aliases:type_name -> olama.AliasItem
	102, // 8: olama.ClusterSettings.databases:type_name -> olama.ClusterSettings.DatabasesEntry
	5,   // 9: olama.CollectionConf.metric:type_name -> olama.IndexMetricType
	18,  // 10: olama.CollectionConf.snapshot_rules:type_name -> olama.SnapshotRule
	6,   // 11: olama.CollectionConf.engine:type_name -> olama.IndexEngineType
	103, // 12: olama.CollectionConf.field_metas:type_name -> olama.CollectionConf.FieldMetasEntry
	104, // 13: olama.CollectionConf.options:type_name -> olama.CollectionConf.OptionsEntry
	19,  // 14: olama.CollectionConf.embedding_params:type_name -> olama.EmbeddingParams
	7,   // 15: olama.FieldMeta.field_type:type_name -> olama.FieldType
	20,  // 16: olama.ShardConf.conf:type_name -> olama.CollectionConf
	12,  // 17: olama.ShardCollectionState.shards:type_name -> olama.Shard
	20,  // 18: olama.CollectionState.conf:type_name -> olama.CollectionConf
	23,  // 19: olama.CollectionState.shards:type_name -> olama.ShardCollectionState
	43,  // 20: olama.CollectionState.req:type_name -> olama.CreateCollectionRequest
	4,   // 21: olama.CollectionState.status:type_name -> olama.HealthState
	17,  // 22: olama.UpdateClusterSettingRequest.settings:type_name -> olama.ClusterSettings
	10,  // 23: olama.GetClusterStateResponse.masters:type_name -> olama.MasterNode
	14,  // 24: olama.GetClusterStateResponse.state:type_name -> olama.ClusterState
	105, // 25: olama.GetClusterStateResponse.server_infos:type_name -> olama.GetClusterStateResponse.ServerInfosEntry
	15,  // 26: olama.GetAliasResponse.aliases:type_name -> olama.AliasItem
	12,  // 27: olama.GetShardStateResponse.shard:type_name -> olama.Shard
	43,  // 28: olama.DescribeCollectionResponse.collection:type_name -> olama.CreateCollectionRequest
	24,  // 29: olama.DescribeCollectionResponse.state:type_name -> olama.CollectionState
	43,  // 30: olama.ListCollectionsResponse.collections:type_name -> olama.CreateCollectionRequest
	24,  // 31: olama.ListCollectionsResponse.states:type_name -> olama.CollectionState
	14,  // 32: olama.ListCollectionsResponse.cluster:type_name -> olama.ClusterState
	40,  // 33: olama.IndexColumn.params:type_name -> olama.IndexParams
	41,  // 34: olama.CreateCollectionRequest.indexes:type_name -> olama.IndexColumn
	42,  // 35: olama.CreateCollectionRequest.indexStatus:type_name -> olama.indexStatus
	19,  // 36: olama.CreateCollectionRequest.embeddingParams:type_name -> olama.EmbeddingParams
	20,  // 37: olama.UpdateCollectionRequest.conf:type_name -> olama.CollectionConf
	13,  // 38: olama.InfoNodeResponse.nodes:type_name -> olama.WorkNode
	64,  // 39: olama.TaskStateResponse.states:type_name -> olama.TaskState
	8,   // 40: olama.UpsertRequest.documents:type_name -> olama.Document
	72,  // 41: olama.UpdateRequest.query:type_name -> olama.QueryCond
	8,   // 42: olama.UpdateRequest.update:type_name -> olama.Document
	72,  // 43: olama.DeleteRequest.query:type_name -> olama.QueryCond
	72,  // 44: olama.QueryRequest.query:type_name -> olama.QueryCond
	8,   // 45: olama.QueryResponse.documents:type_name -> olama.Document
	72,  // 46: olama.ExplainRequest.query:type_name -> olama.QueryCond
	8,   // 47: olama.SearchResult.documents:type_name -> olama.Document
	79,  // 48: olama.SearchCond.vectors:type_name -> olama.VectorArray
	78,  // 49: olama.SearchCond.params:type_name -> olama.SearchParams
	80,  // 50: olama.SearchRequest.search:type_name -> olama.SearchCond
	82,  // 51: olama.ExposeData.expose_data_uni:type_name -> olama.ExposeDataUni
	83,  // 52: olama.Filter.expose_data:type_name -> olama.ExposeData
	77,  // 53: olama.SearchResponse.results:type_name -> olama.SearchResult
	87,  // 54: olama.SortRequest.cond:type_name -> olama.SortCond
	5,   // 55: olama.SortRequest.metric:type_name -> olama.IndexMetricType
	8,   // 56: olama.SortResponse.documents:type_name -> olama.Document
	22,  // 57: olama.CreateShardRequest.conf:type_name -> olama.ShardConf
	9,   // 58: olama.Document.FieldsEntry.value:type_name -> olama.Field
	13,  // 59: olama.ClusterState.NodesEntry.value:type_name -> olama.WorkNode
	16,  // 60: olama.ClusterSettings.DatabasesEntry.value:type_name -> olama.DatabaseItem
	21,  // 61: olama.CollectionConf.FieldMetasEntry.value:type_name -> olama.FieldMeta
	25,  // 62: olama.SearchEngine.cluster_setting:input_type -> olama.UpdateClusterSettingRequest
	27,  // 63: olama.SearchEngine.get_cluster_state:input_type -> olama.GetClusterStateRequest
	29,  // 64: olama.SearchEngine.setAlias:input_type -> olama.SetAliasRequest
	32,  // 65: olama.SearchEngine.getAlias:input_type -> olama.GetAliasRequest
	30,  // 66: olama.SearchEngine.dropAlias:input_type -> olama.DropAliasRequest
	43,  // 67: olama.SearchEngine.createCollection:input_type -> olama.CreateCollectionRequest
	45,  // 68: olama.SearchEngine.dropCollection:input_type -> olama.DropCollectionRequest
	47,  // 69: olama.SearchEngine.flushCollection:input_type -> olama.FlushCollectionRequest
	36,  // 70: olama.SearchEngine.describeCollection:input_type -> olama.DescribeCollectionRequest
	38,  // 71: olama.SearchEngine.listCollections:input_type -> olama.ListCollectionsRequest
	90,  // 72: olama.SearchEngine.save_index_model:input_type -> olama.SaveIndexModelRequest
	92,  // 73: olama.SearchEngine.get_index_model:input_type -> olama.GetIndexModelRequest
	49,  // 74: olama.SearchEngine.updateCollection:input_type -> olama.UpdateCollectionRequest
	51,  // 75: olama.SearchEngine.rebuildIndex:input_type -> olama.RebuildIndexRequest
	53,  // 76: olama.SearchEngine.move_shard:input_type -> olama.MoveShardRequest
	55,  // 77: olama.SearchEngine.reset_shard:input_type -> olama.ResetShardRequest
	96,  // 78: olama.SearchEngine.delete_shard:input_type -> olama.DeleteShardRequest
	57,  // 79: olama.SearchEngine.migrate_collection:input_type -> olama.MigrateRequest
	59,  // 80: olama.SearchEngine.info_node:input_type -> olama.InfoNodeRequest
	61,  // 81: olama.SearchEngine.remove_node:input_type -> olama.RemoveNodeRequest
	63,  // 82: olama.SearchEngine.tasks:input_type -> olama.TaskStateRequest
	66,  // 83: olama.SearchEngine.upsert:input_type -> olama.UpsertRequest
	68,  // 84: olama.SearchEngine.update:input_type -> olama.UpdateRequest
	73,  // 85: olama.SearchEngine.query:input_type -> olama.QueryRequest
	81,  // 86: olama.SearchEngine.search:input_type -> olama.SearchRequest
	70,  // 87: olama.SearchEngine.dele:input_type -> olama.DeleteRequest
	81,  // 88: olama.SearchEngine.range_search:input_type -> olama.SearchRequest
	88,  // 89: olama.SearchEngine.sort:input_type -> olama.SortRequest
	75,  // 90: olama.SearchEngine.explain:input_type -> olama.ExplainRequest
	98,  // 91: olama.SearchEngine.createDatabase:input_type -> olama.DatabaseRequest
	98,  // 92: olama.SearchEngine.dropDatabase:input_type -> olama.DatabaseRequest
	98,  // 93: olama.SearchEngine.listDatabases:input_type -> olama.DatabaseRequest
	26,  // 94: olama.SearchEngine.cluster_setting:output_type -> olama.UpdateClusterSettingResponse
	28,  // 95: olama.SearchEngine.get_cluster_state:output_type -> olama.GetClusterStateResponse
	31,  // 96: olama.SearchEngine.setAlias:output_type -> olama.UpdateAliasResponse
	33,  // 97: olama.SearchEngine.getAlias:output_type -> olama.GetAliasResponse
	31,  // 98: olama.SearchEngine.dropAlias:output_type -> olama.UpdateAliasResponse
	44,  // 99: olama.SearchEngine.createCollection:output_type -> olama.CreateCollectionResponse
	46,  // 100: olama.SearchEngine.dropCollection:output_type -> olama.DropCollectionResponse
	48,  // 101: olama.SearchEngine.flushCollection:output_type -> olama.FlushCollectionResponse
	37,  // 102: olama.SearchEngine.describeCollection:output_type -> olama.DescribeCollectionResponse
	39,  // 103: olama.SearchEngine.listCollections:output_type -> olama.ListCollectionsResponse
	91,  // 104: olama.SearchEngine.save_index_model:output_type -> olama.SaveIndexModelResponse
	93,  // 105: olama.SearchEngine.get_index_model:output_type -> olama.GetIndexModelResponse
	50,  // 106: olama.SearchEngine.updateCollection:output_type -> olama.UpdateCollectionResponse
	52,  // 107: olama.SearchEngine.rebuildIndex:output_type -> olama.RebuildIndexResponse
	54,  // 108: olama.SearchEngine.move_shard:output_type -> olama.MoveShardResponse
	56,  // 109: olama.SearchEngine.reset_shard:output_type -> olama.ResetShardResponse
	97,  // 110: olama.SearchEngine.delete_shard:output_type -> olama.DeleteShardResponse
	58,  // 111: olama.SearchEngine.migrate_collection:output_type -> olama.MigrateResponse
	60,  // 112: olama.SearchEngine.info_node:output_type -> olama.InfoNodeResponse
	62,  // 113: olama.SearchEngine.remove_node:output_type -> olama.RemoveNodeResponse
	65,  // 114: olama.SearchEngine.tasks:output_type -> olama.TaskStateResponse
	67,  // 115: olama.SearchEngine.upsert:output_type -> olama.UpsertResponse
	69,  // 116: olama.SearchEngine.update:output_type -> olama.UpdateResponse
	74,  // 117: olama.SearchEngine.query:output_type -> olama.QueryResponse
	86,  // 118: olama.SearchEngine.search:output_type -> olama.SearchResponse
	71,  // 119: olama.SearchEngine.dele:output_type -> olama.DeleteResponse
	86,  // 120: olama.SearchEngine.range_search:output_type -> olama.SearchResponse
	89,  // 121: olama.SearchEngine.sort:output_type -> olama.SortResponse
	76,  // 122: olama.SearchEngine.explain:output_type -> olama.ExplainResponse
	99,  // 123: olama.SearchEngine.createDatabase:output_type -> olama.DatabaseResponse
	99,  // 124: olama.SearchEngine.dropDatabase:output_type -> olama.DatabaseResponse
	99,  // 125: olama.SearchEngine.listDatabases:output_type -> olama.DatabaseResponse
	94,  // [94:126] is the sub-list for method output_type
	62,  // [62:94] is the sub-list for method input_type
	62,  // [62:62] is the sub-list for extension type_name
	62,  // [62:62] is the sub-list for extension extendee
	0,   // [0:62] is the sub-list for field type_name
}

func init() { file_olama_proto_init() }
func file_olama_proto_init() {
	if File_olama_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_olama_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Document); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Field); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MasterNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShardState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Shard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AliasItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatabaseItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnapshotRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmbeddingParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectionConf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShardConf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShardCollectionState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectionState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateClusterSettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateClusterSettingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClusterStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClusterStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAliasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropAliasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAliasResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAliasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAliasResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShardStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShardStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeCollectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeCollectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCollectionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCollectionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexColumn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCollectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCollectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropCollectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropCollectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlushCollectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlushCollectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCollectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCollectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RebuildIndexRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RebuildIndexResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveShardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveShardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetShardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetShardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MigrateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MigrateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoNodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoNodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveNodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveNodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCond); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExplainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExplainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VectorArray); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchCond); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExposeDataUni); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExposeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoaringBinary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SortCond); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SortRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SortResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveIndexModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveIndexModelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIndexModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIndexModelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateShardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateShardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteShardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteShardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatabaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_olama_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatabaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_olama_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*Field_ValStr)(nil),
		(*Field_ValU64)(nil),
		(*Field_ValDouble)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_olama_proto_rawDesc,
			NumEnums:      8,
			NumMessages:   98,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_olama_proto_goTypes,
		DependencyIndexes: file_olama_proto_depIdxs,
		EnumInfos:         file_olama_proto_enumTypes,
		MessageInfos:      file_olama_proto_msgTypes,
	}.Build()
	File_olama_proto = out.File
	file_olama_proto_rawDesc = nil
	file_olama_proto_goTypes = nil
	file_olama_proto_depIdxs = nil
}
